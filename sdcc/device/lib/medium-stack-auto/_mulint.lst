                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:49 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _mulint
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __mulint
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '_mulint'
                                     92 ;------------------------------------------------------------
                                     93 ;b                         Allocated to stack - _bp -4
                                     94 ;a                         Allocated to stack - _bp +1
                                     95 ;x                         Allocated to stack - _bp +3
                                     96 ;y                         Allocated to registers r5 r6 r7 
                                     97 ;t                         Allocated to stack - _bp +6
                                     98 ;------------------------------------------------------------
                                     99 ;	_mulint.c:226: _mulint (int a, int b)
                                    100 ;	-----------------------------------------
                                    101 ;	 function _mulint
                                    102 ;	-----------------------------------------
      000000                        103 __mulint:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 C0 82            [24]  114 	push	dpl
      000007 C0 83            [24]  115 	push	dph
      000009 E5 81            [12]  116 	mov	a,sp
      00000B 24 05            [12]  117 	add	a,#0x05
      00000D F5 81            [12]  118 	mov	sp,a
                                    119 ;	_mulint.c:238: x = (union uu *)&a;
      00000F AF*00            [24]  120 	mov	r7,_bp
      000011 0F               [12]  121 	inc	r7
      000012 E5*00            [12]  122 	mov	a,_bp
      000014 24 03            [12]  123 	add	a,#0x03
      000016 F8               [12]  124 	mov	r0,a
      000017 A6 07            [24]  125 	mov	@r0,ar7
      000019 08               [12]  126 	inc	r0
      00001A 76 00            [12]  127 	mov	@r0,#0x00
      00001C 08               [12]  128 	inc	r0
      00001D 76 40            [12]  129 	mov	@r0,#0x40
                                    130 ;	_mulint.c:239: y = (union uu *)&b;
      00001F E5*00            [12]  131 	mov	a,_bp
      000021 24 FC            [12]  132 	add	a,#0xFC
      000023 FD               [12]  133 	mov	r5,a
      000024 7E 00            [12]  134 	mov	r6,#0x00
      000026 7F 40            [12]  135 	mov	r7,#0x40
                                    136 ;	_mulint.c:243: t.t = (unsigned char)a * (unsigned char)b;
      000028 E5*00            [12]  137 	mov	a,_bp
      00002A 24 06            [12]  138 	add	a,#0x06
      00002C F9               [12]  139 	mov	r1,a
      00002D A8*00            [24]  140 	mov	r0,_bp
      00002F 08               [12]  141 	inc	r0
      000030 86 04            [24]  142 	mov	ar4,@r0
      000032 E5*00            [12]  143 	mov	a,_bp
      000034 24 FC            [12]  144 	add	a,#0xfc
      000036 F8               [12]  145 	mov	r0,a
      000037 86 03            [24]  146 	mov	ar3,@r0
      000039 8C F0            [24]  147 	mov	b,r4
      00003B EB               [12]  148 	mov	a,r3
      00003C A4               [48]  149 	mul	ab
      00003D F7               [12]  150 	mov	@r1,a
      00003E 09               [12]  151 	inc	r1
      00003F A7 F0            [24]  152 	mov	@r1,b
                                    153 ;	_mulint.c:244: t.s.hi += ((unsigned char)a * y->s.hi) + (x->s.hi * (unsigned char)b);
      000041 E5*00            [12]  154 	mov	a,_bp
      000043 24 06            [12]  155 	add	a,#0x06
      000045 04               [12]  156 	inc	a
      000046 F9               [12]  157 	mov	r1,a
      000047 87 04            [24]  158 	mov	ar4,@r1
      000049 A8*00            [24]  159 	mov	r0,_bp
      00004B 08               [12]  160 	inc	r0
      00004C 86 03            [24]  161 	mov	ar3,@r0
      00004E 74 01            [12]  162 	mov	a,#0x01
      000050 2D               [12]  163 	add	a,r5
      000051 FA               [12]  164 	mov	r2,a
      000052 E4               [12]  165 	clr	a
      000053 3E               [12]  166 	addc	a,r6
      000054 FE               [12]  167 	mov	r6,a
      000055 8A 82            [24]  168 	mov	dpl,r2
      000057 8E 83            [24]  169 	mov	dph,r6
      000059 8F F0            [24]  170 	mov	b,r7
      00005B 12r00r00         [24]  171 	lcall	__gptrget
      00005E 8B F0            [24]  172 	mov	b,r3
      000060 A4               [48]  173 	mul	ab
      000061 FB               [12]  174 	mov	r3,a
      000062 E5*00            [12]  175 	mov	a,_bp
      000064 24 03            [12]  176 	add	a,#0x03
      000066 F8               [12]  177 	mov	r0,a
      000067 74 01            [12]  178 	mov	a,#0x01
      000069 26               [12]  179 	add	a,@r0
      00006A FD               [12]  180 	mov	r5,a
      00006B E4               [12]  181 	clr	a
      00006C 08               [12]  182 	inc	r0
      00006D 36               [12]  183 	addc	a,@r0
      00006E FE               [12]  184 	mov	r6,a
      00006F 08               [12]  185 	inc	r0
      000070 86 07            [24]  186 	mov	ar7,@r0
      000072 8D 82            [24]  187 	mov	dpl,r5
      000074 8E 83            [24]  188 	mov	dph,r6
      000076 8F F0            [24]  189 	mov	b,r7
      000078 12r00r00         [24]  190 	lcall	__gptrget
      00007B FD               [12]  191 	mov	r5,a
      00007C E5*00            [12]  192 	mov	a,_bp
      00007E 24 FC            [12]  193 	add	a,#0xfc
      000080 F8               [12]  194 	mov	r0,a
      000081 86 07            [24]  195 	mov	ar7,@r0
      000083 8D F0            [24]  196 	mov	b,r5
      000085 EF               [12]  197 	mov	a,r7
      000086 A4               [48]  198 	mul	ab
      000087 2B               [12]  199 	add	a,r3
      000088 2C               [12]  200 	add	a,r4
      000089 F7               [12]  201 	mov	@r1,a
                                    202 ;	_mulint.c:246: return t.t;
      00008A E5*00            [12]  203 	mov	a,_bp
      00008C 24 06            [12]  204 	add	a,#0x06
      00008E F9               [12]  205 	mov	r1,a
      00008F 87 82            [24]  206 	mov	dpl,@r1
      000091 09               [12]  207 	inc	r1
      000092 87 83            [24]  208 	mov	dph,@r1
      000094 85*00 81         [24]  209 	mov	sp,_bp
      000097 D0*00            [24]  210 	pop	_bp
      000099 22               [24]  211 	ret
                                    212 	.area CSEG    (CODE)
                                    213 	.area CONST   (CODE)
                                    214 	.area XINIT   (CODE)
                                    215 	.area CABS    (ABS,CODE)
