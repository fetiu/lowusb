                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:48 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module tanhf
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _expf
                                     14 	.globl _tanhf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'tanhf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to stack - _bp +5
                                     96 ;f                         Allocated to stack - _bp +9
                                     97 ;g                         Allocated to stack - _bp +13
                                     98 ;r                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +1
                                    100 ;------------------------------------------------------------
                                    101 ;	tanhf.c:50: float tanhf(float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function tanhf
                                    104 ;	-----------------------------------------
      000000                        105 _tanhf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C8               [12]  116 	xch	a,r0
      000006 E5 81            [12]  117 	mov	a,sp
      000008 24 14            [12]  118 	add	a,#0x14
      00000A F5 81            [12]  119 	mov	sp,a
      00000C E5*00            [12]  120 	mov	a,_bp
      00000E 24 05            [12]  121 	add	a,#0x05
      000010 C8               [12]  122 	xch	a,r0
      000011 A6 82            [24]  123 	mov	@r0,dpl
      000013 08               [12]  124 	inc	r0
      000014 A6 83            [24]  125 	mov	@r0,dph
      000016 08               [12]  126 	inc	r0
      000017 A6 F0            [24]  127 	mov	@r0,b
      000019 08               [12]  128 	inc	r0
      00001A F6               [12]  129 	mov	@r0,a
                                    130 ;	tanhf.c:54: f=fabsf(x);
      00001B E5*00            [12]  131 	mov	a,_bp
      00001D 24 05            [12]  132 	add	a,#0x05
      00001F F8               [12]  133 	mov	r0,a
      000020 86 82            [24]  134 	mov	dpl,@r0
      000022 08               [12]  135 	inc	r0
      000023 86 83            [24]  136 	mov	dph,@r0
      000025 08               [12]  137 	inc	r0
      000026 86 F0            [24]  138 	mov	b,@r0
      000028 08               [12]  139 	inc	r0
      000029 E6               [12]  140 	mov	a,@r0
      00002A 12r00r00         [24]  141 	lcall	_fabsf
      00002D AF 82            [24]  142 	mov	r7,dpl
      00002F AE 83            [24]  143 	mov	r6,dph
      000031 AD F0            [24]  144 	mov	r5,b
      000033 FC               [12]  145 	mov	r4,a
      000034 E5*00            [12]  146 	mov	a,_bp
      000036 24 09            [12]  147 	add	a,#0x09
      000038 F8               [12]  148 	mov	r0,a
      000039 A6 07            [24]  149 	mov	@r0,ar7
      00003B 08               [12]  150 	inc	r0
      00003C A6 06            [24]  151 	mov	@r0,ar6
      00003E 08               [12]  152 	inc	r0
      00003F A6 05            [24]  153 	mov	@r0,ar5
      000041 08               [12]  154 	inc	r0
      000042 A6 04            [24]  155 	mov	@r0,ar4
                                    156 ;	tanhf.c:55: if(f>SBIG) r=1.0;
      000044 74 B0            [12]  157 	mov	a,#0xB0
      000046 C0 E0            [24]  158 	push	acc
      000048 74 2C            [12]  159 	mov	a,#0x2C
      00004A C0 E0            [24]  160 	push	acc
      00004C 74 10            [12]  161 	mov	a,#0x10
      00004E C0 E0            [24]  162 	push	acc
      000050 74 41            [12]  163 	mov	a,#0x41
      000052 C0 E0            [24]  164 	push	acc
      000054 E5*00            [12]  165 	mov	a,_bp
      000056 24 09            [12]  166 	add	a,#0x09
      000058 F8               [12]  167 	mov	r0,a
      000059 86 82            [24]  168 	mov	dpl,@r0
      00005B 08               [12]  169 	inc	r0
      00005C 86 83            [24]  170 	mov	dph,@r0
      00005E 08               [12]  171 	inc	r0
      00005F 86 F0            [24]  172 	mov	b,@r0
      000061 08               [12]  173 	inc	r0
      000062 E6               [12]  174 	mov	a,@r0
      000063 12r00r00         [24]  175 	lcall	___fsgt
      000066 AD 82            [24]  176 	mov	r5,dpl
      000068 E5 81            [12]  177 	mov	a,sp
      00006A 24 FC            [12]  178 	add	a,#0xfc
      00006C F5 81            [12]  179 	mov	sp,a
      00006E ED               [12]  180 	mov	a,r5
      00006F 60 12            [24]  181 	jz	00108$
      000071 E5*00            [12]  182 	mov	a,_bp
      000073 24 11            [12]  183 	add	a,#0x11
      000075 F8               [12]  184 	mov	r0,a
      000076 E4               [12]  185 	clr	a
      000077 F6               [12]  186 	mov	@r0,a
      000078 08               [12]  187 	inc	r0
      000079 F6               [12]  188 	mov	@r0,a
      00007A 08               [12]  189 	inc	r0
      00007B 76 80            [12]  190 	mov	@r0,#0x80
      00007D 08               [12]  191 	inc	r0
      00007E 76 3F            [12]  192 	mov	@r0,#0x3F
      000080 02r03r6F         [24]  193 	ljmp	00109$
      000083                        194 00108$:
                                    195 ;	tanhf.c:56: else if(f>K1)
      000083 74 54            [12]  196 	mov	a,#0x54
      000085 C0 E0            [24]  197 	push	acc
      000087 74 9F            [12]  198 	mov	a,#0x9F
      000089 C0 E0            [24]  199 	push	acc
      00008B 74 0C            [12]  200 	mov	a,#0x0C
      00008D C0 E0            [24]  201 	push	acc
      00008F 74 3F            [12]  202 	mov	a,#0x3F
      000091 C0 E0            [24]  203 	push	acc
      000093 E5*00            [12]  204 	mov	a,_bp
      000095 24 09            [12]  205 	add	a,#0x09
      000097 F8               [12]  206 	mov	r0,a
      000098 86 82            [24]  207 	mov	dpl,@r0
      00009A 08               [12]  208 	inc	r0
      00009B 86 83            [24]  209 	mov	dph,@r0
      00009D 08               [12]  210 	inc	r0
      00009E 86 F0            [24]  211 	mov	b,@r0
      0000A0 08               [12]  212 	inc	r0
      0000A1 E6               [12]  213 	mov	a,@r0
      0000A2 12r00r00         [24]  214 	lcall	___fsgt
      0000A5 AD 82            [24]  215 	mov	r5,dpl
      0000A7 E5 81            [12]  216 	mov	a,sp
      0000A9 24 FC            [12]  217 	add	a,#0xfc
      0000AB F5 81            [12]  218 	mov	sp,a
      0000AD ED               [12]  219 	mov	a,r5
      0000AE 70 03            [24]  220 	jnz	00127$
      0000B0 02r01rB1         [24]  221 	ljmp	00105$
      0000B3                        222 00127$:
                                    223 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
      0000B3 E5*00            [12]  224 	mov	a,_bp
      0000B5 24 09            [12]  225 	add	a,#0x09
      0000B7 F8               [12]  226 	mov	r0,a
      0000B8 E6               [12]  227 	mov	a,@r0
      0000B9 C0 E0            [24]  228 	push	acc
      0000BB 08               [12]  229 	inc	r0
      0000BC E6               [12]  230 	mov	a,@r0
      0000BD C0 E0            [24]  231 	push	acc
      0000BF 08               [12]  232 	inc	r0
      0000C0 E6               [12]  233 	mov	a,@r0
      0000C1 C0 E0            [24]  234 	push	acc
      0000C3 08               [12]  235 	inc	r0
      0000C4 E6               [12]  236 	mov	a,@r0
      0000C5 C0 E0            [24]  237 	push	acc
      0000C7 E5*00            [12]  238 	mov	a,_bp
      0000C9 24 09            [12]  239 	add	a,#0x09
      0000CB F8               [12]  240 	mov	r0,a
      0000CC 86 82            [24]  241 	mov	dpl,@r0
      0000CE 08               [12]  242 	inc	r0
      0000CF 86 83            [24]  243 	mov	dph,@r0
      0000D1 08               [12]  244 	inc	r0
      0000D2 86 F0            [24]  245 	mov	b,@r0
      0000D4 08               [12]  246 	inc	r0
      0000D5 E6               [12]  247 	mov	a,@r0
      0000D6 12r00r00         [24]  248 	lcall	___fsadd
      0000D9 AF 82            [24]  249 	mov	r7,dpl
      0000DB AE 83            [24]  250 	mov	r6,dph
      0000DD AD F0            [24]  251 	mov	r5,b
      0000DF FC               [12]  252 	mov	r4,a
      0000E0 E5 81            [12]  253 	mov	a,sp
      0000E2 24 FC            [12]  254 	add	a,#0xfc
      0000E4 F5 81            [12]  255 	mov	sp,a
      0000E6 8F 82            [24]  256 	mov	dpl,r7
      0000E8 8E 83            [24]  257 	mov	dph,r6
      0000EA 8D F0            [24]  258 	mov	b,r5
      0000EC EC               [12]  259 	mov	a,r4
      0000ED 12r00r00         [24]  260 	lcall	_expf
      0000F0 AF 82            [24]  261 	mov	r7,dpl
      0000F2 AE 83            [24]  262 	mov	r6,dph
      0000F4 AD F0            [24]  263 	mov	r5,b
      0000F6 FC               [12]  264 	mov	r4,a
      0000F7 E4               [12]  265 	clr	a
      0000F8 C0 E0            [24]  266 	push	acc
      0000FA C0 E0            [24]  267 	push	acc
      0000FC 74 80            [12]  268 	mov	a,#0x80
      0000FE C0 E0            [24]  269 	push	acc
      000100 74 3F            [12]  270 	mov	a,#0x3F
      000102 C0 E0            [24]  271 	push	acc
      000104 8F 82            [24]  272 	mov	dpl,r7
      000106 8E 83            [24]  273 	mov	dph,r6
      000108 8D F0            [24]  274 	mov	b,r5
      00010A EC               [12]  275 	mov	a,r4
      00010B 12r00r00         [24]  276 	lcall	___fsadd
      00010E AF 82            [24]  277 	mov	r7,dpl
      000110 AE 83            [24]  278 	mov	r6,dph
      000112 AD F0            [24]  279 	mov	r5,b
      000114 FC               [12]  280 	mov	r4,a
      000115 E5 81            [12]  281 	mov	a,sp
      000117 24 FC            [12]  282 	add	a,#0xfc
      000119 F5 81            [12]  283 	mov	sp,a
      00011B C0 07            [24]  284 	push	ar7
      00011D C0 06            [24]  285 	push	ar6
      00011F C0 05            [24]  286 	push	ar5
      000121 C0 04            [24]  287 	push	ar4
      000123 90 00 00         [24]  288 	mov	dptr,#0x0000
      000126 75 F0 80         [24]  289 	mov	b,#0x80
      000129 74 3F            [12]  290 	mov	a,#0x3F
      00012B 12r00r00         [24]  291 	lcall	___fsdiv
      00012E AF 82            [24]  292 	mov	r7,dpl
      000130 AE 83            [24]  293 	mov	r6,dph
      000132 AD F0            [24]  294 	mov	r5,b
      000134 FC               [12]  295 	mov	r4,a
      000135 E5 81            [12]  296 	mov	a,sp
      000137 24 FC            [12]  297 	add	a,#0xfc
      000139 F5 81            [12]  298 	mov	sp,a
      00013B C0 07            [24]  299 	push	ar7
      00013D C0 06            [24]  300 	push	ar6
      00013F C0 05            [24]  301 	push	ar5
      000141 C0 04            [24]  302 	push	ar4
      000143 90 00 00         [24]  303 	mov	dptr,#(0x00&0x00ff)
      000146 E4               [12]  304 	clr	a
      000147 F5 F0            [12]  305 	mov	b,a
      000149 74 3F            [12]  306 	mov	a,#0x3F
      00014B 12r00r00         [24]  307 	lcall	___fssub
      00014E AF 82            [24]  308 	mov	r7,dpl
      000150 AE 83            [24]  309 	mov	r6,dph
      000152 AD F0            [24]  310 	mov	r5,b
      000154 FC               [12]  311 	mov	r4,a
      000155 E5 81            [12]  312 	mov	a,sp
      000157 24 FC            [12]  313 	add	a,#0xfc
      000159 F5 81            [12]  314 	mov	sp,a
      00015B E5*00            [12]  315 	mov	a,_bp
      00015D 24 11            [12]  316 	add	a,#0x11
      00015F F8               [12]  317 	mov	r0,a
      000160 A6 07            [24]  318 	mov	@r0,ar7
      000162 08               [12]  319 	inc	r0
      000163 A6 06            [24]  320 	mov	@r0,ar6
      000165 08               [12]  321 	inc	r0
      000166 A6 05            [24]  322 	mov	@r0,ar5
      000168 08               [12]  323 	inc	r0
      000169 A6 04            [24]  324 	mov	@r0,ar4
                                    325 ;	tanhf.c:59: r+=r;
      00016B E5*00            [12]  326 	mov	a,_bp
      00016D 24 11            [12]  327 	add	a,#0x11
      00016F F8               [12]  328 	mov	r0,a
      000170 E6               [12]  329 	mov	a,@r0
      000171 C0 E0            [24]  330 	push	acc
      000173 08               [12]  331 	inc	r0
      000174 E6               [12]  332 	mov	a,@r0
      000175 C0 E0            [24]  333 	push	acc
      000177 08               [12]  334 	inc	r0
      000178 E6               [12]  335 	mov	a,@r0
      000179 C0 E0            [24]  336 	push	acc
      00017B 08               [12]  337 	inc	r0
      00017C E6               [12]  338 	mov	a,@r0
      00017D C0 E0            [24]  339 	push	acc
      00017F E5*00            [12]  340 	mov	a,_bp
      000181 24 11            [12]  341 	add	a,#0x11
      000183 F8               [12]  342 	mov	r0,a
      000184 86 82            [24]  343 	mov	dpl,@r0
      000186 08               [12]  344 	inc	r0
      000187 86 83            [24]  345 	mov	dph,@r0
      000189 08               [12]  346 	inc	r0
      00018A 86 F0            [24]  347 	mov	b,@r0
      00018C 08               [12]  348 	inc	r0
      00018D E6               [12]  349 	mov	a,@r0
      00018E 12r00r00         [24]  350 	lcall	___fsadd
      000191 AF 82            [24]  351 	mov	r7,dpl
      000193 AE 83            [24]  352 	mov	r6,dph
      000195 AD F0            [24]  353 	mov	r5,b
      000197 FC               [12]  354 	mov	r4,a
      000198 E5 81            [12]  355 	mov	a,sp
      00019A 24 FC            [12]  356 	add	a,#0xfc
      00019C F5 81            [12]  357 	mov	sp,a
      00019E E5*00            [12]  358 	mov	a,_bp
      0001A0 24 11            [12]  359 	add	a,#0x11
      0001A2 F8               [12]  360 	mov	r0,a
      0001A3 A6 07            [24]  361 	mov	@r0,ar7
      0001A5 08               [12]  362 	inc	r0
      0001A6 A6 06            [24]  363 	mov	@r0,ar6
      0001A8 08               [12]  364 	inc	r0
      0001A9 A6 05            [24]  365 	mov	@r0,ar5
      0001AB 08               [12]  366 	inc	r0
      0001AC A6 04            [24]  367 	mov	@r0,ar4
      0001AE 02r03r6F         [24]  368 	ljmp	00109$
      0001B1                        369 00105$:
                                    370 ;	tanhf.c:61: else if(f<EPS) r=f;
      0001B1 E4               [12]  371 	clr	a
      0001B2 C0 E0            [24]  372 	push	acc
      0001B4 C0 E0            [24]  373 	push	acc
      0001B6 74 80            [12]  374 	mov	a,#0x80
      0001B8 C0 E0            [24]  375 	push	acc
      0001BA 74 39            [12]  376 	mov	a,#0x39
      0001BC C0 E0            [24]  377 	push	acc
      0001BE E5*00            [12]  378 	mov	a,_bp
      0001C0 24 09            [12]  379 	add	a,#0x09
      0001C2 F8               [12]  380 	mov	r0,a
      0001C3 86 82            [24]  381 	mov	dpl,@r0
      0001C5 08               [12]  382 	inc	r0
      0001C6 86 83            [24]  383 	mov	dph,@r0
      0001C8 08               [12]  384 	inc	r0
      0001C9 86 F0            [24]  385 	mov	b,@r0
      0001CB 08               [12]  386 	inc	r0
      0001CC E6               [12]  387 	mov	a,@r0
      0001CD 12r00r00         [24]  388 	lcall	___fslt
      0001D0 AD 82            [24]  389 	mov	r5,dpl
      0001D2 E5 81            [12]  390 	mov	a,sp
      0001D4 24 FC            [12]  391 	add	a,#0xfc
      0001D6 F5 81            [12]  392 	mov	sp,a
      0001D8 ED               [12]  393 	mov	a,r5
      0001D9 60 1B            [24]  394 	jz	00102$
      0001DB E5*00            [12]  395 	mov	a,_bp
      0001DD 24 09            [12]  396 	add	a,#0x09
      0001DF F8               [12]  397 	mov	r0,a
      0001E0 E5*00            [12]  398 	mov	a,_bp
      0001E2 24 11            [12]  399 	add	a,#0x11
      0001E4 F9               [12]  400 	mov	r1,a
      0001E5 E6               [12]  401 	mov	a,@r0
      0001E6 F7               [12]  402 	mov	@r1,a
      0001E7 08               [12]  403 	inc	r0
      0001E8 09               [12]  404 	inc	r1
      0001E9 E6               [12]  405 	mov	a,@r0
      0001EA F7               [12]  406 	mov	@r1,a
      0001EB 08               [12]  407 	inc	r0
      0001EC 09               [12]  408 	inc	r1
      0001ED E6               [12]  409 	mov	a,@r0
      0001EE F7               [12]  410 	mov	@r1,a
      0001EF 08               [12]  411 	inc	r0
      0001F0 09               [12]  412 	inc	r1
      0001F1 E6               [12]  413 	mov	a,@r0
      0001F2 F7               [12]  414 	mov	@r1,a
      0001F3 02r03r6F         [24]  415 	ljmp	00109$
      0001F6                        416 00102$:
                                    417 ;	tanhf.c:64: g=f*f;
      0001F6 E5*00            [12]  418 	mov	a,_bp
      0001F8 24 09            [12]  419 	add	a,#0x09
      0001FA F8               [12]  420 	mov	r0,a
      0001FB E6               [12]  421 	mov	a,@r0
      0001FC C0 E0            [24]  422 	push	acc
      0001FE 08               [12]  423 	inc	r0
      0001FF E6               [12]  424 	mov	a,@r0
      000200 C0 E0            [24]  425 	push	acc
      000202 08               [12]  426 	inc	r0
      000203 E6               [12]  427 	mov	a,@r0
      000204 C0 E0            [24]  428 	push	acc
      000206 08               [12]  429 	inc	r0
      000207 E6               [12]  430 	mov	a,@r0
      000208 C0 E0            [24]  431 	push	acc
      00020A E5*00            [12]  432 	mov	a,_bp
      00020C 24 09            [12]  433 	add	a,#0x09
      00020E F8               [12]  434 	mov	r0,a
      00020F 86 82            [24]  435 	mov	dpl,@r0
      000211 08               [12]  436 	inc	r0
      000212 86 83            [24]  437 	mov	dph,@r0
      000214 08               [12]  438 	inc	r0
      000215 86 F0            [24]  439 	mov	b,@r0
      000217 08               [12]  440 	inc	r0
      000218 E6               [12]  441 	mov	a,@r0
      000219 12r00r00         [24]  442 	lcall	___fsmul
      00021C AF 82            [24]  443 	mov	r7,dpl
      00021E AE 83            [24]  444 	mov	r6,dph
      000220 AD F0            [24]  445 	mov	r5,b
      000222 FC               [12]  446 	mov	r4,a
      000223 E5 81            [12]  447 	mov	a,sp
      000225 24 FC            [12]  448 	add	a,#0xfc
      000227 F5 81            [12]  449 	mov	sp,a
      000229 E5*00            [12]  450 	mov	a,_bp
      00022B 24 0D            [12]  451 	add	a,#0x0d
      00022D F8               [12]  452 	mov	r0,a
      00022E A6 07            [24]  453 	mov	@r0,ar7
      000230 08               [12]  454 	inc	r0
      000231 A6 06            [24]  455 	mov	@r0,ar6
      000233 08               [12]  456 	inc	r0
      000234 A6 05            [24]  457 	mov	@r0,ar5
      000236 08               [12]  458 	inc	r0
      000237 A6 04            [24]  459 	mov	@r0,ar4
                                    460 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
      000239 E5*00            [12]  461 	mov	a,_bp
      00023B 24 0D            [12]  462 	add	a,#0x0d
      00023D F8               [12]  463 	mov	r0,a
      00023E E6               [12]  464 	mov	a,@r0
      00023F C0 E0            [24]  465 	push	acc
      000241 08               [12]  466 	inc	r0
      000242 E6               [12]  467 	mov	a,@r0
      000243 C0 E0            [24]  468 	push	acc
      000245 08               [12]  469 	inc	r0
      000246 E6               [12]  470 	mov	a,@r0
      000247 C0 E0            [24]  471 	push	acc
      000249 08               [12]  472 	inc	r0
      00024A E6               [12]  473 	mov	a,@r0
      00024B C0 E0            [24]  474 	push	acc
      00024D 90 11 B2         [24]  475 	mov	dptr,#0x11B2
      000250 75 F0 7B         [24]  476 	mov	b,#0x7B
      000253 74 BB            [12]  477 	mov	a,#0xBB
      000255 12r00r00         [24]  478 	lcall	___fsmul
      000258 AC 82            [24]  479 	mov	r4,dpl
      00025A AD 83            [24]  480 	mov	r5,dph
      00025C AE F0            [24]  481 	mov	r6,b
      00025E FF               [12]  482 	mov	r7,a
      00025F E5 81            [12]  483 	mov	a,sp
      000261 24 FC            [12]  484 	add	a,#0xfc
      000263 F5 81            [12]  485 	mov	sp,a
      000265 74 C6            [12]  486 	mov	a,#0xC6
      000267 C0 E0            [24]  487 	push	acc
      000269 74 E2            [12]  488 	mov	a,#0xE2
      00026B C0 E0            [24]  489 	push	acc
      00026D 74 52            [12]  490 	mov	a,#0x52
      00026F C0 E0            [24]  491 	push	acc
      000271 74 BF            [12]  492 	mov	a,#0xBF
      000273 C0 E0            [24]  493 	push	acc
      000275 8C 82            [24]  494 	mov	dpl,r4
      000277 8D 83            [24]  495 	mov	dph,r5
      000279 8E F0            [24]  496 	mov	b,r6
      00027B EF               [12]  497 	mov	a,r7
      00027C 12r00r00         [24]  498 	lcall	___fsadd
      00027F AC 82            [24]  499 	mov	r4,dpl
      000281 AD 83            [24]  500 	mov	r5,dph
      000283 AE F0            [24]  501 	mov	r6,b
      000285 FF               [12]  502 	mov	r7,a
      000286 E5 81            [12]  503 	mov	a,sp
      000288 24 FC            [12]  504 	add	a,#0xfc
      00028A F5 81            [12]  505 	mov	sp,a
      00028C E5*00            [12]  506 	mov	a,_bp
      00028E 24 0D            [12]  507 	add	a,#0x0d
      000290 F8               [12]  508 	mov	r0,a
      000291 E6               [12]  509 	mov	a,@r0
      000292 C0 E0            [24]  510 	push	acc
      000294 08               [12]  511 	inc	r0
      000295 E6               [12]  512 	mov	a,@r0
      000296 C0 E0            [24]  513 	push	acc
      000298 08               [12]  514 	inc	r0
      000299 E6               [12]  515 	mov	a,@r0
      00029A C0 E0            [24]  516 	push	acc
      00029C 08               [12]  517 	inc	r0
      00029D E6               [12]  518 	mov	a,@r0
      00029E C0 E0            [24]  519 	push	acc
      0002A0 8C 82            [24]  520 	mov	dpl,r4
      0002A2 8D 83            [24]  521 	mov	dph,r5
      0002A4 8E F0            [24]  522 	mov	b,r6
      0002A6 EF               [12]  523 	mov	a,r7
      0002A7 12r00r00         [24]  524 	lcall	___fsmul
      0002AA A8*00            [24]  525 	mov	r0,_bp
      0002AC 08               [12]  526 	inc	r0
      0002AD A6 82            [24]  527 	mov	@r0,dpl
      0002AF 08               [12]  528 	inc	r0
      0002B0 A6 83            [24]  529 	mov	@r0,dph
      0002B2 08               [12]  530 	inc	r0
      0002B3 A6 F0            [24]  531 	mov	@r0,b
      0002B5 08               [12]  532 	inc	r0
      0002B6 F6               [12]  533 	mov	@r0,a
      0002B7 E5 81            [12]  534 	mov	a,sp
      0002B9 24 FC            [12]  535 	add	a,#0xfc
      0002BB F5 81            [12]  536 	mov	sp,a
      0002BD 74 1A            [12]  537 	mov	a,#0x1A
      0002BF C0 E0            [24]  538 	push	acc
      0002C1 74 2A            [12]  539 	mov	a,#0x2A
      0002C3 C0 E0            [24]  540 	push	acc
      0002C5 74 1E            [12]  541 	mov	a,#0x1E
      0002C7 C0 E0            [24]  542 	push	acc
      0002C9 74 40            [12]  543 	mov	a,#0x40
      0002CB C0 E0            [24]  544 	push	acc
      0002CD E5*00            [12]  545 	mov	a,_bp
      0002CF 24 0D            [12]  546 	add	a,#0x0d
      0002D1 F8               [12]  547 	mov	r0,a
      0002D2 86 82            [24]  548 	mov	dpl,@r0
      0002D4 08               [12]  549 	inc	r0
      0002D5 86 83            [24]  550 	mov	dph,@r0
      0002D7 08               [12]  551 	inc	r0
      0002D8 86 F0            [24]  552 	mov	b,@r0
      0002DA 08               [12]  553 	inc	r0
      0002DB E6               [12]  554 	mov	a,@r0
      0002DC 12r00r00         [24]  555 	lcall	___fsadd
      0002DF AA 82            [24]  556 	mov	r2,dpl
      0002E1 AB 83            [24]  557 	mov	r3,dph
      0002E3 AE F0            [24]  558 	mov	r6,b
      0002E5 FF               [12]  559 	mov	r7,a
      0002E6 E5 81            [12]  560 	mov	a,sp
      0002E8 24 FC            [12]  561 	add	a,#0xfc
      0002EA F5 81            [12]  562 	mov	sp,a
      0002EC C0 02            [24]  563 	push	ar2
      0002EE C0 03            [24]  564 	push	ar3
      0002F0 C0 06            [24]  565 	push	ar6
      0002F2 C0 07            [24]  566 	push	ar7
      0002F4 A8*00            [24]  567 	mov	r0,_bp
      0002F6 08               [12]  568 	inc	r0
      0002F7 86 82            [24]  569 	mov	dpl,@r0
      0002F9 08               [12]  570 	inc	r0
      0002FA 86 83            [24]  571 	mov	dph,@r0
      0002FC 08               [12]  572 	inc	r0
      0002FD 86 F0            [24]  573 	mov	b,@r0
      0002FF 08               [12]  574 	inc	r0
      000300 E6               [12]  575 	mov	a,@r0
      000301 12r00r00         [24]  576 	lcall	___fsdiv
      000304 AC 82            [24]  577 	mov	r4,dpl
      000306 AD 83            [24]  578 	mov	r5,dph
      000308 AE F0            [24]  579 	mov	r6,b
      00030A FF               [12]  580 	mov	r7,a
      00030B E5 81            [12]  581 	mov	a,sp
      00030D 24 FC            [12]  582 	add	a,#0xfc
      00030F F5 81            [12]  583 	mov	sp,a
      000311 C0 04            [24]  584 	push	ar4
      000313 C0 05            [24]  585 	push	ar5
      000315 C0 06            [24]  586 	push	ar6
      000317 C0 07            [24]  587 	push	ar7
      000319 E5*00            [12]  588 	mov	a,_bp
      00031B 24 09            [12]  589 	add	a,#0x09
      00031D F8               [12]  590 	mov	r0,a
      00031E 86 82            [24]  591 	mov	dpl,@r0
      000320 08               [12]  592 	inc	r0
      000321 86 83            [24]  593 	mov	dph,@r0
      000323 08               [12]  594 	inc	r0
      000324 86 F0            [24]  595 	mov	b,@r0
      000326 08               [12]  596 	inc	r0
      000327 E6               [12]  597 	mov	a,@r0
      000328 12r00r00         [24]  598 	lcall	___fsmul
      00032B AC 82            [24]  599 	mov	r4,dpl
      00032D AD 83            [24]  600 	mov	r5,dph
      00032F AE F0            [24]  601 	mov	r6,b
      000331 FF               [12]  602 	mov	r7,a
      000332 E5 81            [12]  603 	mov	a,sp
      000334 24 FC            [12]  604 	add	a,#0xfc
      000336 F5 81            [12]  605 	mov	sp,a
      000338 C0 04            [24]  606 	push	ar4
      00033A C0 05            [24]  607 	push	ar5
      00033C C0 06            [24]  608 	push	ar6
      00033E C0 07            [24]  609 	push	ar7
      000340 E5*00            [12]  610 	mov	a,_bp
      000342 24 09            [12]  611 	add	a,#0x09
      000344 F8               [12]  612 	mov	r0,a
      000345 86 82            [24]  613 	mov	dpl,@r0
      000347 08               [12]  614 	inc	r0
      000348 86 83            [24]  615 	mov	dph,@r0
      00034A 08               [12]  616 	inc	r0
      00034B 86 F0            [24]  617 	mov	b,@r0
      00034D 08               [12]  618 	inc	r0
      00034E E6               [12]  619 	mov	a,@r0
      00034F 12r00r00         [24]  620 	lcall	___fsadd
      000352 AC 82            [24]  621 	mov	r4,dpl
      000354 AD 83            [24]  622 	mov	r5,dph
      000356 AE F0            [24]  623 	mov	r6,b
      000358 FF               [12]  624 	mov	r7,a
      000359 E5 81            [12]  625 	mov	a,sp
      00035B 24 FC            [12]  626 	add	a,#0xfc
      00035D F5 81            [12]  627 	mov	sp,a
      00035F E5*00            [12]  628 	mov	a,_bp
      000361 24 11            [12]  629 	add	a,#0x11
      000363 F8               [12]  630 	mov	r0,a
      000364 A6 04            [24]  631 	mov	@r0,ar4
      000366 08               [12]  632 	inc	r0
      000367 A6 05            [24]  633 	mov	@r0,ar5
      000369 08               [12]  634 	inc	r0
      00036A A6 06            [24]  635 	mov	@r0,ar6
      00036C 08               [12]  636 	inc	r0
      00036D A6 07            [24]  637 	mov	@r0,ar7
      00036F                        638 00109$:
                                    639 ;	tanhf.c:67: if(x<0.0) r=-r;
      00036F E4               [12]  640 	clr	a
      000370 C0 E0            [24]  641 	push	acc
      000372 C0 E0            [24]  642 	push	acc
      000374 C0 E0            [24]  643 	push	acc
      000376 C0 E0            [24]  644 	push	acc
      000378 E5*00            [12]  645 	mov	a,_bp
      00037A 24 05            [12]  646 	add	a,#0x05
      00037C F8               [12]  647 	mov	r0,a
      00037D 86 82            [24]  648 	mov	dpl,@r0
      00037F 08               [12]  649 	inc	r0
      000380 86 83            [24]  650 	mov	dph,@r0
      000382 08               [12]  651 	inc	r0
      000383 86 F0            [24]  652 	mov	b,@r0
      000385 08               [12]  653 	inc	r0
      000386 E6               [12]  654 	mov	a,@r0
      000387 12r00r00         [24]  655 	lcall	___fslt
      00038A AF 82            [24]  656 	mov	r7,dpl
      00038C E5 81            [12]  657 	mov	a,sp
      00038E 24 FC            [12]  658 	add	a,#0xfc
      000390 F5 81            [12]  659 	mov	sp,a
      000392 EF               [12]  660 	mov	a,r7
      000393 60 12            [24]  661 	jz	00111$
      000395 E5*00            [12]  662 	mov	a,_bp
      000397 24 11            [12]  663 	add	a,#0x11
      000399 F8               [12]  664 	mov	r0,a
      00039A E6               [12]  665 	mov	a,@r0
      00039B F6               [12]  666 	mov	@r0,a
      00039C 08               [12]  667 	inc	r0
      00039D E6               [12]  668 	mov	a,@r0
      00039E F6               [12]  669 	mov	@r0,a
      00039F 08               [12]  670 	inc	r0
      0003A0 E6               [12]  671 	mov	a,@r0
      0003A1 F6               [12]  672 	mov	@r0,a
      0003A2 08               [12]  673 	inc	r0
      0003A3 E6               [12]  674 	mov	a,@r0
      0003A4 B2 E7            [12]  675 	cpl	acc.7
      0003A6 F6               [12]  676 	mov	@r0,a
      0003A7                        677 00111$:
                                    678 ;	tanhf.c:68: return r;
      0003A7 E5*00            [12]  679 	mov	a,_bp
      0003A9 24 11            [12]  680 	add	a,#0x11
      0003AB F8               [12]  681 	mov	r0,a
      0003AC 86 82            [24]  682 	mov	dpl,@r0
      0003AE 08               [12]  683 	inc	r0
      0003AF 86 83            [24]  684 	mov	dph,@r0
      0003B1 08               [12]  685 	inc	r0
      0003B2 86 F0            [24]  686 	mov	b,@r0
      0003B4 08               [12]  687 	inc	r0
      0003B5 E6               [12]  688 	mov	a,@r0
      0003B6 85*00 81         [24]  689 	mov	sp,_bp
      0003B9 D0*00            [24]  690 	pop	_bp
      0003BB 22               [24]  691 	ret
                                    692 	.area CSEG    (CODE)
                                    693 	.area CONST   (CODE)
                                    694 	.area XINIT   (CODE)
                                    695 	.area CABS    (ABS,CODE)
