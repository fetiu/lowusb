                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:47 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'atan2f'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -6
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;r                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	atan2f.c:34: float atan2f(float x, float y)
                                    101 ;	-----------------------------------------
                                    102 ;	 function atan2f
                                    103 ;	-----------------------------------------
      000000                        104 _atan2f:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 08            [12]  120 	add	a,#0x08
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 28            [24]  136 	jnz	00102$
      000028 E5*00            [12]  137 	mov	a,_bp
      00002A 24 FA            [12]  138 	add	a,#0xfa
      00002C F8               [12]  139 	mov	r0,a
      00002D 86 F0            [24]  140 	mov	b,@r0
      00002F 08               [12]  141 	inc	r0
      000030 E6               [12]  142 	mov	a,@r0
      000031 42 F0            [12]  143 	orl	b,a
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 42 F0            [12]  146 	orl	b,a
      000037 08               [12]  147 	inc	r0
      000038 E6               [12]  148 	mov	a,@r0
      000039 54 7F            [12]  149 	anl	a,#0x7F
      00003B 45 F0            [12]  150 	orl	a,b
      00003D 70 11            [24]  151 	jnz	00102$
                                    152 ;	atan2f.c:40: errno=EDOM;
      00003F 78r00            [12]  153 	mov	r0,#_errno
      000041 74 21            [12]  154 	mov	a,#0x21
      000043 F2               [24]  155 	movx	@r0,a
      000044 08               [12]  156 	inc	r0
      000045 E4               [12]  157 	clr	a
      000046 F2               [24]  158 	movx	@r0,a
                                    159 ;	atan2f.c:41: return 0.0;
      000047 90 00 00         [24]  160 	mov	dptr,#(0x00&0x00ff)
      00004A E4               [12]  161 	clr	a
      00004B F5 F0            [12]  162 	mov	b,a
      00004D 02r02r6C         [24]  163 	ljmp	00109$
      000050                        164 00102$:
                                    165 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      000050 E5*00            [12]  166 	mov	a,_bp
      000052 24 FA            [12]  167 	add	a,#0xfa
      000054 F8               [12]  168 	mov	r0,a
      000055 86 82            [24]  169 	mov	dpl,@r0
      000057 08               [12]  170 	inc	r0
      000058 86 83            [24]  171 	mov	dph,@r0
      00005A 08               [12]  172 	inc	r0
      00005B 86 F0            [24]  173 	mov	b,@r0
      00005D 08               [12]  174 	inc	r0
      00005E E6               [12]  175 	mov	a,@r0
      00005F 12r00r00         [24]  176 	lcall	_fabsf
      000062 C8               [12]  177 	xch	a,r0
      000063 E5*00            [12]  178 	mov	a,_bp
      000065 24 05            [12]  179 	add	a,#0x05
      000067 C8               [12]  180 	xch	a,r0
      000068 A6 82            [24]  181 	mov	@r0,dpl
      00006A 08               [12]  182 	inc	r0
      00006B A6 83            [24]  183 	mov	@r0,dph
      00006D 08               [12]  184 	inc	r0
      00006E A6 F0            [24]  185 	mov	@r0,b
      000070 08               [12]  186 	inc	r0
      000071 F6               [12]  187 	mov	@r0,a
      000072 A8*00            [24]  188 	mov	r0,_bp
      000074 08               [12]  189 	inc	r0
      000075 86 82            [24]  190 	mov	dpl,@r0
      000077 08               [12]  191 	inc	r0
      000078 86 83            [24]  192 	mov	dph,@r0
      00007A 08               [12]  193 	inc	r0
      00007B 86 F0            [24]  194 	mov	b,@r0
      00007D 08               [12]  195 	inc	r0
      00007E E6               [12]  196 	mov	a,@r0
      00007F 12r00r00         [24]  197 	lcall	_fabsf
      000082 AC 82            [24]  198 	mov	r4,dpl
      000084 AD 83            [24]  199 	mov	r5,dph
      000086 AE F0            [24]  200 	mov	r6,b
      000088 FF               [12]  201 	mov	r7,a
      000089 C0 04            [24]  202 	push	ar4
      00008B C0 05            [24]  203 	push	ar5
      00008D C0 06            [24]  204 	push	ar6
      00008F C0 07            [24]  205 	push	ar7
      000091 E5*00            [12]  206 	mov	a,_bp
      000093 24 05            [12]  207 	add	a,#0x05
      000095 F8               [12]  208 	mov	r0,a
      000096 86 82            [24]  209 	mov	dpl,@r0
      000098 08               [12]  210 	inc	r0
      000099 86 83            [24]  211 	mov	dph,@r0
      00009B 08               [12]  212 	inc	r0
      00009C 86 F0            [24]  213 	mov	b,@r0
      00009E 08               [12]  214 	inc	r0
      00009F E6               [12]  215 	mov	a,@r0
      0000A0 12r00r00         [24]  216 	lcall	___fslt
      0000A3 AF 82            [24]  217 	mov	r7,dpl
      0000A5 E5 81            [12]  218 	mov	a,sp
      0000A7 24 FC            [12]  219 	add	a,#0xfc
      0000A9 F5 81            [12]  220 	mov	sp,a
      0000AB EF               [12]  221 	mov	a,r7
      0000AC 60 03            [24]  222 	jz	00135$
      0000AE 02r01r9C         [24]  223 	ljmp	00107$
      0000B1                        224 00135$:
                                    225 ;	atan2f.c:46: r=atanf(x/y);
      0000B1 E5*00            [12]  226 	mov	a,_bp
      0000B3 24 FA            [12]  227 	add	a,#0xfa
      0000B5 F8               [12]  228 	mov	r0,a
      0000B6 E6               [12]  229 	mov	a,@r0
      0000B7 C0 E0            [24]  230 	push	acc
      0000B9 08               [12]  231 	inc	r0
      0000BA E6               [12]  232 	mov	a,@r0
      0000BB C0 E0            [24]  233 	push	acc
      0000BD 08               [12]  234 	inc	r0
      0000BE E6               [12]  235 	mov	a,@r0
      0000BF C0 E0            [24]  236 	push	acc
      0000C1 08               [12]  237 	inc	r0
      0000C2 E6               [12]  238 	mov	a,@r0
      0000C3 C0 E0            [24]  239 	push	acc
      0000C5 A8*00            [24]  240 	mov	r0,_bp
      0000C7 08               [12]  241 	inc	r0
      0000C8 86 82            [24]  242 	mov	dpl,@r0
      0000CA 08               [12]  243 	inc	r0
      0000CB 86 83            [24]  244 	mov	dph,@r0
      0000CD 08               [12]  245 	inc	r0
      0000CE 86 F0            [24]  246 	mov	b,@r0
      0000D0 08               [12]  247 	inc	r0
      0000D1 E6               [12]  248 	mov	a,@r0
      0000D2 12r00r00         [24]  249 	lcall	___fsdiv
      0000D5 AC 82            [24]  250 	mov	r4,dpl
      0000D7 AD 83            [24]  251 	mov	r5,dph
      0000D9 AE F0            [24]  252 	mov	r6,b
      0000DB FF               [12]  253 	mov	r7,a
      0000DC E5 81            [12]  254 	mov	a,sp
      0000DE 24 FC            [12]  255 	add	a,#0xfc
      0000E0 F5 81            [12]  256 	mov	sp,a
      0000E2 8C 82            [24]  257 	mov	dpl,r4
      0000E4 8D 83            [24]  258 	mov	dph,r5
      0000E6 8E F0            [24]  259 	mov	b,r6
      0000E8 EF               [12]  260 	mov	a,r7
      0000E9 12r00r00         [24]  261 	lcall	_atanf
      0000EC AC 82            [24]  262 	mov	r4,dpl
      0000EE AD 83            [24]  263 	mov	r5,dph
      0000F0 AE F0            [24]  264 	mov	r6,b
      0000F2 FF               [12]  265 	mov	r7,a
      0000F3 E5*00            [12]  266 	mov	a,_bp
      0000F5 24 09            [12]  267 	add	a,#0x09
      0000F7 F8               [12]  268 	mov	r0,a
      0000F8 A6 04            [24]  269 	mov	@r0,ar4
      0000FA 08               [12]  270 	inc	r0
      0000FB A6 05            [24]  271 	mov	@r0,ar5
      0000FD 08               [12]  272 	inc	r0
      0000FE A6 06            [24]  273 	mov	@r0,ar6
      000100 08               [12]  274 	inc	r0
      000101 A6 07            [24]  275 	mov	@r0,ar7
                                    276 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      000103 E4               [12]  277 	clr	a
      000104 C0 E0            [24]  278 	push	acc
      000106 C0 E0            [24]  279 	push	acc
      000108 C0 E0            [24]  280 	push	acc
      00010A C0 E0            [24]  281 	push	acc
      00010C E5*00            [12]  282 	mov	a,_bp
      00010E 24 FA            [12]  283 	add	a,#0xfa
      000110 F8               [12]  284 	mov	r0,a
      000111 86 82            [24]  285 	mov	dpl,@r0
      000113 08               [12]  286 	inc	r0
      000114 86 83            [24]  287 	mov	dph,@r0
      000116 08               [12]  288 	inc	r0
      000117 86 F0            [24]  289 	mov	b,@r0
      000119 08               [12]  290 	inc	r0
      00011A E6               [12]  291 	mov	a,@r0
      00011B 12r00r00         [24]  292 	lcall	___fslt
      00011E AB 82            [24]  293 	mov	r3,dpl
      000120 E5 81            [12]  294 	mov	a,sp
      000122 24 FC            [12]  295 	add	a,#0xfc
      000124 F5 81            [12]  296 	mov	sp,a
      000126 EB               [12]  297 	mov	a,r3
      000127 70 03            [24]  298 	jnz	00136$
      000129 02r02r5D         [24]  299 	ljmp	00108$
      00012C                        300 00136$:
      00012C E4               [12]  301 	clr	a
      00012D C0 E0            [24]  302 	push	acc
      00012F C0 E0            [24]  303 	push	acc
      000131 C0 E0            [24]  304 	push	acc
      000133 C0 E0            [24]  305 	push	acc
      000135 A8*00            [24]  306 	mov	r0,_bp
      000137 08               [12]  307 	inc	r0
      000138 86 82            [24]  308 	mov	dpl,@r0
      00013A 08               [12]  309 	inc	r0
      00013B 86 83            [24]  310 	mov	dph,@r0
      00013D 08               [12]  311 	inc	r0
      00013E 86 F0            [24]  312 	mov	b,@r0
      000140 08               [12]  313 	inc	r0
      000141 E6               [12]  314 	mov	a,@r0
      000142 12r00r00         [24]  315 	lcall	___fslt
      000145 AB 82            [24]  316 	mov	r3,dpl
      000147 E5 81            [12]  317 	mov	a,sp
      000149 24 FC            [12]  318 	add	a,#0xfc
      00014B F5 81            [12]  319 	mov	sp,a
      00014D EB               [12]  320 	mov	a,r3
      00014E 70 0A            [24]  321 	jnz	00111$
      000150 7A DB            [12]  322 	mov	r2,#0xDB
      000152 7B 0F            [12]  323 	mov	r3,#0x0F
      000154 7E 49            [12]  324 	mov	r6,#0x49
      000156 7F 40            [12]  325 	mov	r7,#0x40
      000158 80 08            [24]  326 	sjmp	00112$
      00015A                        327 00111$:
      00015A 7A DB            [12]  328 	mov	r2,#0xDB
      00015C 7B 0F            [12]  329 	mov	r3,#0x0F
      00015E 7E 49            [12]  330 	mov	r6,#0x49
      000160 7F C0            [12]  331 	mov	r7,#0xC0
      000162                        332 00112$:
      000162 C0 02            [24]  333 	push	ar2
      000164 C0 03            [24]  334 	push	ar3
      000166 C0 06            [24]  335 	push	ar6
      000168 C0 07            [24]  336 	push	ar7
      00016A E5*00            [12]  337 	mov	a,_bp
      00016C 24 09            [12]  338 	add	a,#0x09
      00016E F8               [12]  339 	mov	r0,a
      00016F 86 82            [24]  340 	mov	dpl,@r0
      000171 08               [12]  341 	inc	r0
      000172 86 83            [24]  342 	mov	dph,@r0
      000174 08               [12]  343 	inc	r0
      000175 86 F0            [24]  344 	mov	b,@r0
      000177 08               [12]  345 	inc	r0
      000178 E6               [12]  346 	mov	a,@r0
      000179 12r00r00         [24]  347 	lcall	___fsadd
      00017C AC 82            [24]  348 	mov	r4,dpl
      00017E AD 83            [24]  349 	mov	r5,dph
      000180 AE F0            [24]  350 	mov	r6,b
      000182 FF               [12]  351 	mov	r7,a
      000183 E5 81            [12]  352 	mov	a,sp
      000185 24 FC            [12]  353 	add	a,#0xfc
      000187 F5 81            [12]  354 	mov	sp,a
      000189 E5*00            [12]  355 	mov	a,_bp
      00018B 24 09            [12]  356 	add	a,#0x09
      00018D F8               [12]  357 	mov	r0,a
      00018E A6 04            [24]  358 	mov	@r0,ar4
      000190 08               [12]  359 	inc	r0
      000191 A6 05            [24]  360 	mov	@r0,ar5
      000193 08               [12]  361 	inc	r0
      000194 A6 06            [24]  362 	mov	@r0,ar6
      000196 08               [12]  363 	inc	r0
      000197 A6 07            [24]  364 	mov	@r0,ar7
      000199 02r02r5D         [24]  365 	ljmp	00108$
      00019C                        366 00107$:
                                    367 ;	atan2f.c:51: r=-atanf(y/x);
      00019C A8*00            [24]  368 	mov	r0,_bp
      00019E 08               [12]  369 	inc	r0
      00019F E6               [12]  370 	mov	a,@r0
      0001A0 C0 E0            [24]  371 	push	acc
      0001A2 08               [12]  372 	inc	r0
      0001A3 E6               [12]  373 	mov	a,@r0
      0001A4 C0 E0            [24]  374 	push	acc
      0001A6 08               [12]  375 	inc	r0
      0001A7 E6               [12]  376 	mov	a,@r0
      0001A8 C0 E0            [24]  377 	push	acc
      0001AA 08               [12]  378 	inc	r0
      0001AB E6               [12]  379 	mov	a,@r0
      0001AC C0 E0            [24]  380 	push	acc
      0001AE E5*00            [12]  381 	mov	a,_bp
      0001B0 24 FA            [12]  382 	add	a,#0xfa
      0001B2 F8               [12]  383 	mov	r0,a
      0001B3 86 82            [24]  384 	mov	dpl,@r0
      0001B5 08               [12]  385 	inc	r0
      0001B6 86 83            [24]  386 	mov	dph,@r0
      0001B8 08               [12]  387 	inc	r0
      0001B9 86 F0            [24]  388 	mov	b,@r0
      0001BB 08               [12]  389 	inc	r0
      0001BC E6               [12]  390 	mov	a,@r0
      0001BD 12r00r00         [24]  391 	lcall	___fsdiv
      0001C0 AC 82            [24]  392 	mov	r4,dpl
      0001C2 AD 83            [24]  393 	mov	r5,dph
      0001C4 AE F0            [24]  394 	mov	r6,b
      0001C6 FF               [12]  395 	mov	r7,a
      0001C7 E5 81            [12]  396 	mov	a,sp
      0001C9 24 FC            [12]  397 	add	a,#0xfc
      0001CB F5 81            [12]  398 	mov	sp,a
      0001CD 8C 82            [24]  399 	mov	dpl,r4
      0001CF 8D 83            [24]  400 	mov	dph,r5
      0001D1 8E F0            [24]  401 	mov	b,r6
      0001D3 EF               [12]  402 	mov	a,r7
      0001D4 12r00r00         [24]  403 	lcall	_atanf
      0001D7 AC 82            [24]  404 	mov	r4,dpl
      0001D9 AD 83            [24]  405 	mov	r5,dph
      0001DB AE F0            [24]  406 	mov	r6,b
      0001DD B2 E7            [12]  407 	cpl	acc.7
      0001DF FF               [12]  408 	mov	r7,a
      0001E0 E5*00            [12]  409 	mov	a,_bp
      0001E2 24 09            [12]  410 	add	a,#0x09
      0001E4 F8               [12]  411 	mov	r0,a
      0001E5 A6 04            [24]  412 	mov	@r0,ar4
      0001E7 08               [12]  413 	inc	r0
      0001E8 A6 05            [24]  414 	mov	@r0,ar5
      0001EA 08               [12]  415 	inc	r0
      0001EB A6 06            [24]  416 	mov	@r0,ar6
      0001ED 08               [12]  417 	inc	r0
      0001EE A6 07            [24]  418 	mov	@r0,ar7
                                    419 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001F0 E4               [12]  420 	clr	a
      0001F1 C0 E0            [24]  421 	push	acc
      0001F3 C0 E0            [24]  422 	push	acc
      0001F5 C0 E0            [24]  423 	push	acc
      0001F7 C0 E0            [24]  424 	push	acc
      0001F9 A8*00            [24]  425 	mov	r0,_bp
      0001FB 08               [12]  426 	inc	r0
      0001FC 86 82            [24]  427 	mov	dpl,@r0
      0001FE 08               [12]  428 	inc	r0
      0001FF 86 83            [24]  429 	mov	dph,@r0
      000201 08               [12]  430 	inc	r0
      000202 86 F0            [24]  431 	mov	b,@r0
      000204 08               [12]  432 	inc	r0
      000205 E6               [12]  433 	mov	a,@r0
      000206 12r00r00         [24]  434 	lcall	___fslt
      000209 AF 82            [24]  435 	mov	r7,dpl
      00020B E5 81            [12]  436 	mov	a,sp
      00020D 24 FC            [12]  437 	add	a,#0xfc
      00020F F5 81            [12]  438 	mov	sp,a
      000211 EF               [12]  439 	mov	a,r7
      000212 60 0A            [24]  440 	jz	00113$
      000214 7C DB            [12]  441 	mov	r4,#0xDB
      000216 7D 0F            [12]  442 	mov	r5,#0x0F
      000218 7E C9            [12]  443 	mov	r6,#0xC9
      00021A 7F BF            [12]  444 	mov	r7,#0xBF
      00021C 80 08            [24]  445 	sjmp	00114$
      00021E                        446 00113$:
      00021E 7C DB            [12]  447 	mov	r4,#0xDB
      000220 7D 0F            [12]  448 	mov	r5,#0x0F
      000222 7E C9            [12]  449 	mov	r6,#0xC9
      000224 7F 3F            [12]  450 	mov	r7,#0x3F
      000226                        451 00114$:
      000226 C0 04            [24]  452 	push	ar4
      000228 C0 05            [24]  453 	push	ar5
      00022A C0 06            [24]  454 	push	ar6
      00022C C0 07            [24]  455 	push	ar7
      00022E E5*00            [12]  456 	mov	a,_bp
      000230 24 09            [12]  457 	add	a,#0x09
      000232 F8               [12]  458 	mov	r0,a
      000233 86 82            [24]  459 	mov	dpl,@r0
      000235 08               [12]  460 	inc	r0
      000236 86 83            [24]  461 	mov	dph,@r0
      000238 08               [12]  462 	inc	r0
      000239 86 F0            [24]  463 	mov	b,@r0
      00023B 08               [12]  464 	inc	r0
      00023C E6               [12]  465 	mov	a,@r0
      00023D 12r00r00         [24]  466 	lcall	___fsadd
      000240 AC 82            [24]  467 	mov	r4,dpl
      000242 AD 83            [24]  468 	mov	r5,dph
      000244 AE F0            [24]  469 	mov	r6,b
      000246 FF               [12]  470 	mov	r7,a
      000247 E5 81            [12]  471 	mov	a,sp
      000249 24 FC            [12]  472 	add	a,#0xfc
      00024B F5 81            [12]  473 	mov	sp,a
      00024D E5*00            [12]  474 	mov	a,_bp
      00024F 24 09            [12]  475 	add	a,#0x09
      000251 F8               [12]  476 	mov	r0,a
      000252 A6 04            [24]  477 	mov	@r0,ar4
      000254 08               [12]  478 	inc	r0
      000255 A6 05            [24]  479 	mov	@r0,ar5
      000257 08               [12]  480 	inc	r0
      000258 A6 06            [24]  481 	mov	@r0,ar6
      00025A 08               [12]  482 	inc	r0
      00025B A6 07            [24]  483 	mov	@r0,ar7
      00025D                        484 00108$:
                                    485 ;	atan2f.c:54: return r;
      00025D E5*00            [12]  486 	mov	a,_bp
      00025F 24 09            [12]  487 	add	a,#0x09
      000261 F8               [12]  488 	mov	r0,a
      000262 86 82            [24]  489 	mov	dpl,@r0
      000264 08               [12]  490 	inc	r0
      000265 86 83            [24]  491 	mov	dph,@r0
      000267 08               [12]  492 	inc	r0
      000268 86 F0            [24]  493 	mov	b,@r0
      00026A 08               [12]  494 	inc	r0
      00026B E6               [12]  495 	mov	a,@r0
      00026C                        496 00109$:
      00026C 85*00 81         [24]  497 	mov	sp,_bp
      00026F D0*00            [24]  498 	pop	_bp
      000271 22               [24]  499 	ret
                                    500 	.area CSEG    (CODE)
                                    501 	.area CONST   (CODE)
                                    502 	.area XINIT   (CODE)
                                    503 	.area CABS    (ABS,CODE)
