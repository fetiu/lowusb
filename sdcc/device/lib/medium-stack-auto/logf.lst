                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:46 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module logf
                                      7 	.optsdcc -mmcs51 --model-medium
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _frexpf
                                     13 	.globl _logf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'logf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +5
                                     95 ;Rz                        Allocated to stack - _bp +9
                                     96 ;f                         Allocated to registers r4 r3 r6 r7 
                                     97 ;z                         Allocated to stack - _bp +13
                                     98 ;w                         Allocated to registers r7 r6 r5 r4 
                                     99 ;znum                      Allocated to stack - _bp +17
                                    100 ;zden                      Allocated to stack - _bp +21
                                    101 ;xn                        Allocated to stack - _bp +25
                                    102 ;n                         Allocated to stack - _bp +29
                                    103 ;sloc0                     Allocated to stack - _bp +1
                                    104 ;------------------------------------------------------------
                                    105 ;	logf.c:216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                    106 ;	-----------------------------------------
                                    107 ;	 function logf
                                    108 ;	-----------------------------------------
      000000                        109 _logf:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
      000000 C0*00            [24]  118 	push	_bp
      000002 85 81*00         [24]  119 	mov	_bp,sp
      000005 C8               [12]  120 	xch	a,r0
      000006 E5 81            [12]  121 	mov	a,sp
      000008 24 1E            [12]  122 	add	a,#0x1E
      00000A F5 81            [12]  123 	mov	sp,a
      00000C E5*00            [12]  124 	mov	a,_bp
      00000E 24 05            [12]  125 	add	a,#0x05
      000010 C8               [12]  126 	xch	a,r0
      000011 A6 82            [24]  127 	mov	@r0,dpl
      000013 08               [12]  128 	inc	r0
      000014 A6 83            [24]  129 	mov	@r0,dph
      000016 08               [12]  130 	inc	r0
      000017 A6 F0            [24]  131 	mov	@r0,b
      000019 08               [12]  132 	inc	r0
      00001A F6               [12]  133 	mov	@r0,a
                                    134 ;	logf.c:226: if (x<=0.0)
      00001B E4               [12]  135 	clr	a
      00001C C0 E0            [24]  136 	push	acc
      00001E C0 E0            [24]  137 	push	acc
      000020 C0 E0            [24]  138 	push	acc
      000022 C0 E0            [24]  139 	push	acc
      000024 E5*00            [12]  140 	mov	a,_bp
      000026 24 05            [12]  141 	add	a,#0x05
      000028 F8               [12]  142 	mov	r0,a
      000029 86 82            [24]  143 	mov	dpl,@r0
      00002B 08               [12]  144 	inc	r0
      00002C 86 83            [24]  145 	mov	dph,@r0
      00002E 08               [12]  146 	inc	r0
      00002F 86 F0            [24]  147 	mov	b,@r0
      000031 08               [12]  148 	inc	r0
      000032 E6               [12]  149 	mov	a,@r0
      000033 12r00r00         [24]  150 	lcall	___fsgt
      000036 AB 82            [24]  151 	mov	r3,dpl
      000038 E5 81            [12]  152 	mov	a,sp
      00003A 24 FC            [12]  153 	add	a,#0xfc
      00003C F5 81            [12]  154 	mov	sp,a
      00003E EB               [12]  155 	mov	a,r3
      00003F 70 11            [24]  156 	jnz	00102$
                                    157 ;	logf.c:228: errno=EDOM;
      000041 78r00            [12]  158 	mov	r0,#_errno
      000043 74 21            [12]  159 	mov	a,#0x21
      000045 F2               [24]  160 	movx	@r0,a
      000046 08               [12]  161 	inc	r0
      000047 E4               [12]  162 	clr	a
      000048 F2               [24]  163 	movx	@r0,a
                                    164 ;	logf.c:229: return 0.0;
      000049 90 00 00         [24]  165 	mov	dptr,#(0x00&0x00ff)
      00004C E4               [12]  166 	clr	a
      00004D F5 F0            [12]  167 	mov	b,a
      00004F 02r04r21         [24]  168 	ljmp	00106$
      000052                        169 00102$:
                                    170 ;	logf.c:231: f=frexpf(x, &n);
      000052 E5*00            [12]  171 	mov	a,_bp
      000054 24 1D            [12]  172 	add	a,#0x1D
      000056 FA               [12]  173 	mov	r2,a
      000057 7B 00            [12]  174 	mov	r3,#0x00
      000059 7F 40            [12]  175 	mov	r7,#0x40
      00005B C0 02            [24]  176 	push	ar2
      00005D C0 03            [24]  177 	push	ar3
      00005F C0 07            [24]  178 	push	ar7
      000061 E5*00            [12]  179 	mov	a,_bp
      000063 24 05            [12]  180 	add	a,#0x05
      000065 F8               [12]  181 	mov	r0,a
      000066 86 82            [24]  182 	mov	dpl,@r0
      000068 08               [12]  183 	inc	r0
      000069 86 83            [24]  184 	mov	dph,@r0
      00006B 08               [12]  185 	inc	r0
      00006C 86 F0            [24]  186 	mov	b,@r0
      00006E 08               [12]  187 	inc	r0
      00006F E6               [12]  188 	mov	a,@r0
      000070 12r00r00         [24]  189 	lcall	_frexpf
      000073 AC 82            [24]  190 	mov	r4,dpl
      000075 AD 83            [24]  191 	mov	r5,dph
      000077 AE F0            [24]  192 	mov	r6,b
      000079 FF               [12]  193 	mov	r7,a
      00007A 15 81            [12]  194 	dec	sp
      00007C 15 81            [12]  195 	dec	sp
      00007E 15 81            [12]  196 	dec	sp
      000080 8D 03            [24]  197 	mov	ar3,r5
                                    198 ;	logf.c:232: znum=f-0.5;
      000082 C0 07            [24]  199 	push	ar7
      000084 C0 06            [24]  200 	push	ar6
      000086 C0 04            [24]  201 	push	ar4
      000088 C0 03            [24]  202 	push	ar3
      00008A E4               [12]  203 	clr	a
      00008B C0 E0            [24]  204 	push	acc
      00008D C0 E0            [24]  205 	push	acc
      00008F C0 E0            [24]  206 	push	acc
      000091 74 3F            [12]  207 	mov	a,#0x3F
      000093 C0 E0            [24]  208 	push	acc
      000095 8C 82            [24]  209 	mov	dpl,r4
      000097 8B 83            [24]  210 	mov	dph,r3
      000099 8E F0            [24]  211 	mov	b,r6
      00009B EF               [12]  212 	mov	a,r7
      00009C 12r00r00         [24]  213 	lcall	___fssub
      00009F C8               [12]  214 	xch	a,r0
      0000A0 E5*00            [12]  215 	mov	a,_bp
      0000A2 24 11            [12]  216 	add	a,#0x11
      0000A4 C8               [12]  217 	xch	a,r0
      0000A5 A6 82            [24]  218 	mov	@r0,dpl
      0000A7 08               [12]  219 	inc	r0
      0000A8 A6 83            [24]  220 	mov	@r0,dph
      0000AA 08               [12]  221 	inc	r0
      0000AB A6 F0            [24]  222 	mov	@r0,b
      0000AD 08               [12]  223 	inc	r0
      0000AE F6               [12]  224 	mov	@r0,a
      0000AF E5 81            [12]  225 	mov	a,sp
      0000B1 24 FC            [12]  226 	add	a,#0xfc
      0000B3 F5 81            [12]  227 	mov	sp,a
      0000B5 D0 03            [24]  228 	pop	ar3
      0000B7 D0 04            [24]  229 	pop	ar4
      0000B9 D0 06            [24]  230 	pop	ar6
      0000BB D0 07            [24]  231 	pop	ar7
      0000BD E5*00            [12]  232 	mov	a,_bp
      0000BF 24 11            [12]  233 	add	a,#0x11
                                    234 ;	logf.c:233: if (f>C0)
      0000C1 C0 07            [24]  235 	push	ar7
      0000C3 C0 06            [24]  236 	push	ar6
      0000C5 C0 04            [24]  237 	push	ar4
      0000C7 C0 03            [24]  238 	push	ar3
      0000C9 74 F3            [12]  239 	mov	a,#0xF3
      0000CB C0 E0            [24]  240 	push	acc
      0000CD 74 04            [12]  241 	mov	a,#0x04
      0000CF C0 E0            [24]  242 	push	acc
      0000D1 74 35            [12]  243 	mov	a,#0x35
      0000D3 C0 E0            [24]  244 	push	acc
      0000D5 74 3F            [12]  245 	mov	a,#0x3F
      0000D7 C0 E0            [24]  246 	push	acc
      0000D9 8C 82            [24]  247 	mov	dpl,r4
      0000DB 8B 83            [24]  248 	mov	dph,r3
      0000DD 8E F0            [24]  249 	mov	b,r6
      0000DF EF               [12]  250 	mov	a,r7
      0000E0 12r00r00         [24]  251 	lcall	___fsgt
      0000E3 AD 82            [24]  252 	mov	r5,dpl
      0000E5 E5 81            [12]  253 	mov	a,sp
      0000E7 24 FC            [12]  254 	add	a,#0xfc
      0000E9 F5 81            [12]  255 	mov	sp,a
      0000EB D0 03            [24]  256 	pop	ar3
      0000ED D0 04            [24]  257 	pop	ar4
      0000EF D0 06            [24]  258 	pop	ar6
      0000F1 D0 07            [24]  259 	pop	ar7
      0000F3 ED               [12]  260 	mov	a,r5
      0000F4 70 03            [24]  261 	jnz	00115$
      0000F6 02r01r93         [24]  262 	ljmp	00104$
      0000F9                        263 00115$:
                                    264 ;	logf.c:235: znum-=0.5;
      0000F9 C0 07            [24]  265 	push	ar7
      0000FB C0 06            [24]  266 	push	ar6
      0000FD C0 04            [24]  267 	push	ar4
      0000FF C0 03            [24]  268 	push	ar3
      000101 E4               [12]  269 	clr	a
      000102 C0 E0            [24]  270 	push	acc
      000104 C0 E0            [24]  271 	push	acc
      000106 C0 E0            [24]  272 	push	acc
      000108 74 3F            [12]  273 	mov	a,#0x3F
      00010A C0 E0            [24]  274 	push	acc
      00010C E5*00            [12]  275 	mov	a,_bp
      00010E 24 11            [12]  276 	add	a,#0x11
      000110 F8               [12]  277 	mov	r0,a
      000111 86 82            [24]  278 	mov	dpl,@r0
      000113 08               [12]  279 	inc	r0
      000114 86 83            [24]  280 	mov	dph,@r0
      000116 08               [12]  281 	inc	r0
      000117 86 F0            [24]  282 	mov	b,@r0
      000119 08               [12]  283 	inc	r0
      00011A E6               [12]  284 	mov	a,@r0
      00011B 12r00r00         [24]  285 	lcall	___fssub
      00011E A8*00            [24]  286 	mov	r0,_bp
      000120 08               [12]  287 	inc	r0
      000121 A6 82            [24]  288 	mov	@r0,dpl
      000123 08               [12]  289 	inc	r0
      000124 A6 83            [24]  290 	mov	@r0,dph
      000126 08               [12]  291 	inc	r0
      000127 A6 F0            [24]  292 	mov	@r0,b
      000129 08               [12]  293 	inc	r0
      00012A F6               [12]  294 	mov	@r0,a
      00012B E5 81            [12]  295 	mov	a,sp
      00012D 24 FC            [12]  296 	add	a,#0xfc
      00012F F5 81            [12]  297 	mov	sp,a
      000131 D0 03            [24]  298 	pop	ar3
      000133 D0 04            [24]  299 	pop	ar4
      000135 D0 06            [24]  300 	pop	ar6
      000137 D0 07            [24]  301 	pop	ar7
      000139 A8*00            [24]  302 	mov	r0,_bp
      00013B 08               [12]  303 	inc	r0
      00013C E5*00            [12]  304 	mov	a,_bp
      00013E 24 11            [12]  305 	add	a,#0x11
      000140 F9               [12]  306 	mov	r1,a
      000141 E6               [12]  307 	mov	a,@r0
      000142 F7               [12]  308 	mov	@r1,a
      000143 08               [12]  309 	inc	r0
      000144 09               [12]  310 	inc	r1
      000145 E6               [12]  311 	mov	a,@r0
      000146 F7               [12]  312 	mov	@r1,a
      000147 08               [12]  313 	inc	r0
      000148 09               [12]  314 	inc	r1
      000149 E6               [12]  315 	mov	a,@r0
      00014A F7               [12]  316 	mov	@r1,a
      00014B 08               [12]  317 	inc	r0
      00014C 09               [12]  318 	inc	r1
      00014D E6               [12]  319 	mov	a,@r0
      00014E F7               [12]  320 	mov	@r1,a
                                    321 ;	logf.c:236: zden=(f*0.5)+0.5;
      00014F C0 04            [24]  322 	push	ar4
      000151 C0 03            [24]  323 	push	ar3
      000153 C0 06            [24]  324 	push	ar6
      000155 C0 07            [24]  325 	push	ar7
      000157 90 00 00         [24]  326 	mov	dptr,#(0x00&0x00ff)
      00015A E4               [12]  327 	clr	a
      00015B F5 F0            [12]  328 	mov	b,a
      00015D 74 3F            [12]  329 	mov	a,#0x3F
      00015F 12r00r00         [24]  330 	lcall	___fsmul
      000162 AC 82            [24]  331 	mov	r4,dpl
      000164 AD 83            [24]  332 	mov	r5,dph
      000166 AE F0            [24]  333 	mov	r6,b
      000168 FF               [12]  334 	mov	r7,a
      000169 E5 81            [12]  335 	mov	a,sp
      00016B 24 FC            [12]  336 	add	a,#0xfc
      00016D F5 81            [12]  337 	mov	sp,a
      00016F E4               [12]  338 	clr	a
      000170 C0 E0            [24]  339 	push	acc
      000172 C0 E0            [24]  340 	push	acc
      000174 C0 E0            [24]  341 	push	acc
      000176 74 3F            [12]  342 	mov	a,#0x3F
      000178 C0 E0            [24]  343 	push	acc
      00017A 8C 82            [24]  344 	mov	dpl,r4
      00017C 8D 83            [24]  345 	mov	dph,r5
      00017E 8E F0            [24]  346 	mov	b,r6
      000180 EF               [12]  347 	mov	a,r7
      000181 12r00r00         [24]  348 	lcall	___fsadd
      000184 AC 82            [24]  349 	mov	r4,dpl
      000186 AD 83            [24]  350 	mov	r5,dph
      000188 AE F0            [24]  351 	mov	r6,b
      00018A FF               [12]  352 	mov	r7,a
      00018B E5 81            [12]  353 	mov	a,sp
      00018D 24 FC            [12]  354 	add	a,#0xfc
      00018F F5 81            [12]  355 	mov	sp,a
      000191 80 72            [24]  356 	sjmp	00105$
      000193                        357 00104$:
                                    358 ;	logf.c:240: n--;
      000193 E5*00            [12]  359 	mov	a,_bp
      000195 24 1D            [12]  360 	add	a,#0x1d
      000197 F8               [12]  361 	mov	r0,a
      000198 16               [12]  362 	dec	@r0
      000199 B6 FF 02         [24]  363 	cjne	@r0,#0xFF,00116$
      00019C 08               [12]  364 	inc	r0
      00019D 16               [12]  365 	dec	@r0
      00019E                        366 00116$:
                                    367 ;	logf.c:241: zden=znum*0.5+0.5;
      00019E E5*00            [12]  368 	mov	a,_bp
      0001A0 24 11            [12]  369 	add	a,#0x11
      0001A2 F8               [12]  370 	mov	r0,a
      0001A3 E6               [12]  371 	mov	a,@r0
      0001A4 C0 E0            [24]  372 	push	acc
      0001A6 08               [12]  373 	inc	r0
      0001A7 E6               [12]  374 	mov	a,@r0
      0001A8 C0 E0            [24]  375 	push	acc
      0001AA 08               [12]  376 	inc	r0
      0001AB E6               [12]  377 	mov	a,@r0
      0001AC C0 E0            [24]  378 	push	acc
      0001AE 08               [12]  379 	inc	r0
      0001AF E6               [12]  380 	mov	a,@r0
      0001B0 C0 E0            [24]  381 	push	acc
      0001B2 90 00 00         [24]  382 	mov	dptr,#(0x00&0x00ff)
      0001B5 E4               [12]  383 	clr	a
      0001B6 F5 F0            [12]  384 	mov	b,a
      0001B8 74 3F            [12]  385 	mov	a,#0x3F
      0001BA 12r00r00         [24]  386 	lcall	___fsmul
      0001BD AF 82            [24]  387 	mov	r7,dpl
      0001BF AE 83            [24]  388 	mov	r6,dph
      0001C1 AD F0            [24]  389 	mov	r5,b
      0001C3 FC               [12]  390 	mov	r4,a
      0001C4 E5 81            [12]  391 	mov	a,sp
      0001C6 24 FC            [12]  392 	add	a,#0xfc
      0001C8 F5 81            [12]  393 	mov	sp,a
      0001CA E4               [12]  394 	clr	a
      0001CB C0 E0            [24]  395 	push	acc
      0001CD C0 E0            [24]  396 	push	acc
      0001CF C0 E0            [24]  397 	push	acc
      0001D1 74 3F            [12]  398 	mov	a,#0x3F
      0001D3 C0 E0            [24]  399 	push	acc
      0001D5 8F 82            [24]  400 	mov	dpl,r7
      0001D7 8E 83            [24]  401 	mov	dph,r6
      0001D9 8D F0            [24]  402 	mov	b,r5
      0001DB EC               [12]  403 	mov	a,r4
      0001DC 12r00r00         [24]  404 	lcall	___fsadd
      0001DF C8               [12]  405 	xch	a,r0
      0001E0 E5*00            [12]  406 	mov	a,_bp
      0001E2 24 15            [12]  407 	add	a,#0x15
      0001E4 C8               [12]  408 	xch	a,r0
      0001E5 A6 82            [24]  409 	mov	@r0,dpl
      0001E7 08               [12]  410 	inc	r0
      0001E8 A6 83            [24]  411 	mov	@r0,dph
      0001EA 08               [12]  412 	inc	r0
      0001EB A6 F0            [24]  413 	mov	@r0,b
      0001ED 08               [12]  414 	inc	r0
      0001EE F6               [12]  415 	mov	@r0,a
      0001EF E5 81            [12]  416 	mov	a,sp
      0001F1 24 FC            [12]  417 	add	a,#0xfc
      0001F3 F5 81            [12]  418 	mov	sp,a
      0001F5 E5*00            [12]  419 	mov	a,_bp
      0001F7 24 15            [12]  420 	add	a,#0x15
      0001F9 F8               [12]  421 	mov	r0,a
      0001FA 86 04            [24]  422 	mov	ar4,@r0
      0001FC 08               [12]  423 	inc	r0
      0001FD 86 05            [24]  424 	mov	ar5,@r0
      0001FF 08               [12]  425 	inc	r0
      000200 86 06            [24]  426 	mov	ar6,@r0
      000202 08               [12]  427 	inc	r0
      000203 86 07            [24]  428 	mov	ar7,@r0
      000205                        429 00105$:
                                    430 ;	logf.c:243: z=znum/zden;
      000205 C0 04            [24]  431 	push	ar4
      000207 C0 05            [24]  432 	push	ar5
      000209 C0 06            [24]  433 	push	ar6
      00020B C0 07            [24]  434 	push	ar7
      00020D E5*00            [12]  435 	mov	a,_bp
      00020F 24 11            [12]  436 	add	a,#0x11
      000211 F8               [12]  437 	mov	r0,a
      000212 86 82            [24]  438 	mov	dpl,@r0
      000214 08               [12]  439 	inc	r0
      000215 86 83            [24]  440 	mov	dph,@r0
      000217 08               [12]  441 	inc	r0
      000218 86 F0            [24]  442 	mov	b,@r0
      00021A 08               [12]  443 	inc	r0
      00021B E6               [12]  444 	mov	a,@r0
      00021C 12r00r00         [24]  445 	lcall	___fsdiv
      00021F AC 82            [24]  446 	mov	r4,dpl
      000221 AD 83            [24]  447 	mov	r5,dph
      000223 AE F0            [24]  448 	mov	r6,b
      000225 FF               [12]  449 	mov	r7,a
      000226 E5 81            [12]  450 	mov	a,sp
      000228 24 FC            [12]  451 	add	a,#0xfc
      00022A F5 81            [12]  452 	mov	sp,a
      00022C E5*00            [12]  453 	mov	a,_bp
      00022E 24 0D            [12]  454 	add	a,#0x0d
      000230 F8               [12]  455 	mov	r0,a
      000231 A6 04            [24]  456 	mov	@r0,ar4
      000233 08               [12]  457 	inc	r0
      000234 A6 05            [24]  458 	mov	@r0,ar5
      000236 08               [12]  459 	inc	r0
      000237 A6 06            [24]  460 	mov	@r0,ar6
      000239 08               [12]  461 	inc	r0
      00023A A6 07            [24]  462 	mov	@r0,ar7
                                    463 ;	logf.c:244: w=z*z;
      00023C E5*00            [12]  464 	mov	a,_bp
      00023E 24 0D            [12]  465 	add	a,#0x0d
      000240 F8               [12]  466 	mov	r0,a
      000241 E6               [12]  467 	mov	a,@r0
      000242 C0 E0            [24]  468 	push	acc
      000244 08               [12]  469 	inc	r0
      000245 E6               [12]  470 	mov	a,@r0
      000246 C0 E0            [24]  471 	push	acc
      000248 08               [12]  472 	inc	r0
      000249 E6               [12]  473 	mov	a,@r0
      00024A C0 E0            [24]  474 	push	acc
      00024C 08               [12]  475 	inc	r0
      00024D E6               [12]  476 	mov	a,@r0
      00024E C0 E0            [24]  477 	push	acc
      000250 E5*00            [12]  478 	mov	a,_bp
      000252 24 0D            [12]  479 	add	a,#0x0d
      000254 F8               [12]  480 	mov	r0,a
      000255 86 82            [24]  481 	mov	dpl,@r0
      000257 08               [12]  482 	inc	r0
      000258 86 83            [24]  483 	mov	dph,@r0
      00025A 08               [12]  484 	inc	r0
      00025B 86 F0            [24]  485 	mov	b,@r0
      00025D 08               [12]  486 	inc	r0
      00025E E6               [12]  487 	mov	a,@r0
      00025F 12r00r00         [24]  488 	lcall	___fsmul
      000262 AF 82            [24]  489 	mov	r7,dpl
      000264 AE 83            [24]  490 	mov	r6,dph
      000266 AD F0            [24]  491 	mov	r5,b
      000268 FC               [12]  492 	mov	r4,a
      000269 E5 81            [12]  493 	mov	a,sp
      00026B 24 FC            [12]  494 	add	a,#0xfc
      00026D F5 81            [12]  495 	mov	sp,a
                                    496 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
      00026F C0 07            [24]  497 	push	ar7
      000271 C0 06            [24]  498 	push	ar6
      000273 C0 05            [24]  499 	push	ar5
      000275 C0 04            [24]  500 	push	ar4
      000277 C0 07            [24]  501 	push	ar7
      000279 C0 06            [24]  502 	push	ar6
      00027B C0 05            [24]  503 	push	ar5
      00027D C0 04            [24]  504 	push	ar4
      00027F 90 7E 3D         [24]  505 	mov	dptr,#0x7E3D
      000282 75 F0 0D         [24]  506 	mov	b,#0x0D
      000285 74 BF            [12]  507 	mov	a,#0xBF
      000287 12r00r00         [24]  508 	lcall	___fsmul
      00028A A8*00            [24]  509 	mov	r0,_bp
      00028C 08               [12]  510 	inc	r0
      00028D A6 82            [24]  511 	mov	@r0,dpl
      00028F 08               [12]  512 	inc	r0
      000290 A6 83            [24]  513 	mov	@r0,dph
      000292 08               [12]  514 	inc	r0
      000293 A6 F0            [24]  515 	mov	@r0,b
      000295 08               [12]  516 	inc	r0
      000296 F6               [12]  517 	mov	@r0,a
      000297 E5 81            [12]  518 	mov	a,sp
      000299 24 FC            [12]  519 	add	a,#0xfc
      00029B F5 81            [12]  520 	mov	sp,a
      00029D D0 04            [24]  521 	pop	ar4
      00029F D0 05            [24]  522 	pop	ar5
      0002A1 D0 06            [24]  523 	pop	ar6
      0002A3 D0 07            [24]  524 	pop	ar7
      0002A5 74 3A            [12]  525 	mov	a,#0x3A
      0002A7 C0 E0            [24]  526 	push	acc
      0002A9 74 3F            [12]  527 	mov	a,#0x3F
      0002AB C0 E0            [24]  528 	push	acc
      0002AD 74 D4            [12]  529 	mov	a,#0xD4
      0002AF C0 E0            [24]  530 	push	acc
      0002B1 74 C0            [12]  531 	mov	a,#0xC0
      0002B3 C0 E0            [24]  532 	push	acc
      0002B5 8F 82            [24]  533 	mov	dpl,r7
      0002B7 8E 83            [24]  534 	mov	dph,r6
      0002B9 8D F0            [24]  535 	mov	b,r5
      0002BB EC               [12]  536 	mov	a,r4
      0002BC 12r00r00         [24]  537 	lcall	___fsadd
      0002BF AC 82            [24]  538 	mov	r4,dpl
      0002C1 AD 83            [24]  539 	mov	r5,dph
      0002C3 AE F0            [24]  540 	mov	r6,b
      0002C5 FF               [12]  541 	mov	r7,a
      0002C6 E5 81            [12]  542 	mov	a,sp
      0002C8 24 FC            [12]  543 	add	a,#0xfc
      0002CA F5 81            [12]  544 	mov	sp,a
      0002CC C0 04            [24]  545 	push	ar4
      0002CE C0 05            [24]  546 	push	ar5
      0002D0 C0 06            [24]  547 	push	ar6
      0002D2 C0 07            [24]  548 	push	ar7
      0002D4 A8*00            [24]  549 	mov	r0,_bp
      0002D6 08               [12]  550 	inc	r0
      0002D7 86 82            [24]  551 	mov	dpl,@r0
      0002D9 08               [12]  552 	inc	r0
      0002DA 86 83            [24]  553 	mov	dph,@r0
      0002DC 08               [12]  554 	inc	r0
      0002DD 86 F0            [24]  555 	mov	b,@r0
      0002DF 08               [12]  556 	inc	r0
      0002E0 E6               [12]  557 	mov	a,@r0
      0002E1 12r00r00         [24]  558 	lcall	___fsdiv
      0002E4 AC 82            [24]  559 	mov	r4,dpl
      0002E6 AD 83            [24]  560 	mov	r5,dph
      0002E8 AE F0            [24]  561 	mov	r6,b
      0002EA FF               [12]  562 	mov	r7,a
      0002EB E5 81            [12]  563 	mov	a,sp
      0002ED 24 FC            [12]  564 	add	a,#0xfc
      0002EF F5 81            [12]  565 	mov	sp,a
      0002F1 C0 04            [24]  566 	push	ar4
      0002F3 C0 05            [24]  567 	push	ar5
      0002F5 C0 06            [24]  568 	push	ar6
      0002F7 C0 07            [24]  569 	push	ar7
      0002F9 E5*00            [12]  570 	mov	a,_bp
      0002FB 24 0D            [12]  571 	add	a,#0x0d
      0002FD F8               [12]  572 	mov	r0,a
      0002FE 86 82            [24]  573 	mov	dpl,@r0
      000300 08               [12]  574 	inc	r0
      000301 86 83            [24]  575 	mov	dph,@r0
      000303 08               [12]  576 	inc	r0
      000304 86 F0            [24]  577 	mov	b,@r0
      000306 08               [12]  578 	inc	r0
      000307 E6               [12]  579 	mov	a,@r0
      000308 12r00r00         [24]  580 	lcall	___fsmul
      00030B AC 82            [24]  581 	mov	r4,dpl
      00030D AD 83            [24]  582 	mov	r5,dph
      00030F AE F0            [24]  583 	mov	r6,b
      000311 FF               [12]  584 	mov	r7,a
      000312 E5 81            [12]  585 	mov	a,sp
      000314 24 FC            [12]  586 	add	a,#0xfc
      000316 F5 81            [12]  587 	mov	sp,a
      000318 C0 04            [24]  588 	push	ar4
      00031A C0 05            [24]  589 	push	ar5
      00031C C0 06            [24]  590 	push	ar6
      00031E C0 07            [24]  591 	push	ar7
      000320 E5*00            [12]  592 	mov	a,_bp
      000322 24 0D            [12]  593 	add	a,#0x0d
      000324 F8               [12]  594 	mov	r0,a
      000325 86 82            [24]  595 	mov	dpl,@r0
      000327 08               [12]  596 	inc	r0
      000328 86 83            [24]  597 	mov	dph,@r0
      00032A 08               [12]  598 	inc	r0
      00032B 86 F0            [24]  599 	mov	b,@r0
      00032D 08               [12]  600 	inc	r0
      00032E E6               [12]  601 	mov	a,@r0
      00032F 12r00r00         [24]  602 	lcall	___fsadd
      000332 C8               [12]  603 	xch	a,r0
      000333 E5*00            [12]  604 	mov	a,_bp
      000335 24 09            [12]  605 	add	a,#0x09
      000337 C8               [12]  606 	xch	a,r0
      000338 A6 82            [24]  607 	mov	@r0,dpl
      00033A 08               [12]  608 	inc	r0
      00033B A6 83            [24]  609 	mov	@r0,dph
      00033D 08               [12]  610 	inc	r0
      00033E A6 F0            [24]  611 	mov	@r0,b
      000340 08               [12]  612 	inc	r0
      000341 F6               [12]  613 	mov	@r0,a
      000342 E5 81            [12]  614 	mov	a,sp
      000344 24 FC            [12]  615 	add	a,#0xfc
      000346 F5 81            [12]  616 	mov	sp,a
                                    617 ;	logf.c:247: xn=n;
      000348 E5*00            [12]  618 	mov	a,_bp
      00034A 24 1D            [12]  619 	add	a,#0x1d
      00034C F8               [12]  620 	mov	r0,a
      00034D 86 82            [24]  621 	mov	dpl,@r0
      00034F 08               [12]  622 	inc	r0
      000350 86 83            [24]  623 	mov	dph,@r0
      000352 12r00r00         [24]  624 	lcall	___sint2fs
      000355 AA 82            [24]  625 	mov	r2,dpl
      000357 AB 83            [24]  626 	mov	r3,dph
      000359 AE F0            [24]  627 	mov	r6,b
      00035B FF               [12]  628 	mov	r7,a
      00035C E5*00            [12]  629 	mov	a,_bp
      00035E 24 19            [12]  630 	add	a,#0x19
      000360 F8               [12]  631 	mov	r0,a
      000361 A6 02            [24]  632 	mov	@r0,ar2
      000363 08               [12]  633 	inc	r0
      000364 A6 03            [24]  634 	mov	@r0,ar3
      000366 08               [12]  635 	inc	r0
      000367 A6 06            [24]  636 	mov	@r0,ar6
      000369 08               [12]  637 	inc	r0
      00036A A6 07            [24]  638 	mov	@r0,ar7
                                    639 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
      00036C E5*00            [12]  640 	mov	a,_bp
      00036E 24 19            [12]  641 	add	a,#0x19
      000370 F8               [12]  642 	mov	r0,a
      000371 E6               [12]  643 	mov	a,@r0
      000372 C0 E0            [24]  644 	push	acc
      000374 08               [12]  645 	inc	r0
      000375 E6               [12]  646 	mov	a,@r0
      000376 C0 E0            [24]  647 	push	acc
      000378 08               [12]  648 	inc	r0
      000379 E6               [12]  649 	mov	a,@r0
      00037A C0 E0            [24]  650 	push	acc
      00037C 08               [12]  651 	inc	r0
      00037D E6               [12]  652 	mov	a,@r0
      00037E C0 E0            [24]  653 	push	acc
      000380 90 80 83         [24]  654 	mov	dptr,#0x8083
      000383 75 F0 5E         [24]  655 	mov	b,#0x5E
      000386 74 B9            [12]  656 	mov	a,#0xB9
      000388 12r00r00         [24]  657 	lcall	___fsmul
      00038B AC 82            [24]  658 	mov	r4,dpl
      00038D AD 83            [24]  659 	mov	r5,dph
      00038F AE F0            [24]  660 	mov	r6,b
      000391 FF               [12]  661 	mov	r7,a
      000392 E5 81            [12]  662 	mov	a,sp
      000394 24 FC            [12]  663 	add	a,#0xfc
      000396 F5 81            [12]  664 	mov	sp,a
      000398 E5*00            [12]  665 	mov	a,_bp
      00039A 24 09            [12]  666 	add	a,#0x09
      00039C F8               [12]  667 	mov	r0,a
      00039D E6               [12]  668 	mov	a,@r0
      00039E C0 E0            [24]  669 	push	acc
      0003A0 08               [12]  670 	inc	r0
      0003A1 E6               [12]  671 	mov	a,@r0
      0003A2 C0 E0            [24]  672 	push	acc
      0003A4 08               [12]  673 	inc	r0
      0003A5 E6               [12]  674 	mov	a,@r0
      0003A6 C0 E0            [24]  675 	push	acc
      0003A8 08               [12]  676 	inc	r0
      0003A9 E6               [12]  677 	mov	a,@r0
      0003AA C0 E0            [24]  678 	push	acc
      0003AC 8C 82            [24]  679 	mov	dpl,r4
      0003AE 8D 83            [24]  680 	mov	dph,r5
      0003B0 8E F0            [24]  681 	mov	b,r6
      0003B2 EF               [12]  682 	mov	a,r7
      0003B3 12r00r00         [24]  683 	lcall	___fsadd
      0003B6 A8*00            [24]  684 	mov	r0,_bp
      0003B8 08               [12]  685 	inc	r0
      0003B9 A6 82            [24]  686 	mov	@r0,dpl
      0003BB 08               [12]  687 	inc	r0
      0003BC A6 83            [24]  688 	mov	@r0,dph
      0003BE 08               [12]  689 	inc	r0
      0003BF A6 F0            [24]  690 	mov	@r0,b
      0003C1 08               [12]  691 	inc	r0
      0003C2 F6               [12]  692 	mov	@r0,a
      0003C3 E5 81            [12]  693 	mov	a,sp
      0003C5 24 FC            [12]  694 	add	a,#0xfc
      0003C7 F5 81            [12]  695 	mov	sp,a
      0003C9 E5*00            [12]  696 	mov	a,_bp
      0003CB 24 19            [12]  697 	add	a,#0x19
      0003CD F8               [12]  698 	mov	r0,a
      0003CE E6               [12]  699 	mov	a,@r0
      0003CF C0 E0            [24]  700 	push	acc
      0003D1 08               [12]  701 	inc	r0
      0003D2 E6               [12]  702 	mov	a,@r0
      0003D3 C0 E0            [24]  703 	push	acc
      0003D5 08               [12]  704 	inc	r0
      0003D6 E6               [12]  705 	mov	a,@r0
      0003D7 C0 E0            [24]  706 	push	acc
      0003D9 08               [12]  707 	inc	r0
      0003DA E6               [12]  708 	mov	a,@r0
      0003DB C0 E0            [24]  709 	push	acc
      0003DD 90 80 00         [24]  710 	mov	dptr,#0x8000
      0003E0 75 F0 31         [24]  711 	mov	b,#0x31
      0003E3 74 3F            [12]  712 	mov	a,#0x3F
      0003E5 12r00r00         [24]  713 	lcall	___fsmul
      0003E8 AA 82            [24]  714 	mov	r2,dpl
      0003EA AB 83            [24]  715 	mov	r3,dph
      0003EC AE F0            [24]  716 	mov	r6,b
      0003EE FF               [12]  717 	mov	r7,a
      0003EF E5 81            [12]  718 	mov	a,sp
      0003F1 24 FC            [12]  719 	add	a,#0xfc
      0003F3 F5 81            [12]  720 	mov	sp,a
      0003F5 C0 02            [24]  721 	push	ar2
      0003F7 C0 03            [24]  722 	push	ar3
      0003F9 C0 06            [24]  723 	push	ar6
      0003FB C0 07            [24]  724 	push	ar7
      0003FD A8*00            [24]  725 	mov	r0,_bp
      0003FF 08               [12]  726 	inc	r0
      000400 86 82            [24]  727 	mov	dpl,@r0
      000402 08               [12]  728 	inc	r0
      000403 86 83            [24]  729 	mov	dph,@r0
      000405 08               [12]  730 	inc	r0
      000406 86 F0            [24]  731 	mov	b,@r0
      000408 08               [12]  732 	inc	r0
      000409 E6               [12]  733 	mov	a,@r0
      00040A 12r00r00         [24]  734 	lcall	___fsadd
      00040D AC 82            [24]  735 	mov	r4,dpl
      00040F AD 83            [24]  736 	mov	r5,dph
      000411 AE F0            [24]  737 	mov	r6,b
      000413 FF               [12]  738 	mov	r7,a
      000414 E5 81            [12]  739 	mov	a,sp
      000416 24 FC            [12]  740 	add	a,#0xfc
      000418 F5 81            [12]  741 	mov	sp,a
      00041A 8C 82            [24]  742 	mov	dpl,r4
      00041C 8D 83            [24]  743 	mov	dph,r5
      00041E 8E F0            [24]  744 	mov	b,r6
      000420 EF               [12]  745 	mov	a,r7
      000421                        746 00106$:
      000421 85*00 81         [24]  747 	mov	sp,_bp
      000424 D0*00            [24]  748 	pop	_bp
      000426 22               [24]  749 	ret
                                    750 	.area CSEG    (CODE)
                                    751 	.area CONST   (CODE)
                                    752 	.area XINIT   (CODE)
                                    753 	.area CABS    (ABS,CODE)
