                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:13 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module logf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _frexpf
                                     13 	.globl _logf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'logf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +5
                                     95 ;Rz                        Allocated to stack - _bp +9
                                     96 ;f                         Allocated to registers r4 r3 r6 r7 
                                     97 ;z                         Allocated to stack - _bp +13
                                     98 ;w                         Allocated to registers r7 r6 r5 r4 
                                     99 ;znum                      Allocated to stack - _bp +17
                                    100 ;zden                      Allocated to stack - _bp +21
                                    101 ;xn                        Allocated to stack - _bp +25
                                    102 ;n                         Allocated to stack - _bp +29
                                    103 ;sloc0                     Allocated to stack - _bp +1
                                    104 ;------------------------------------------------------------
                                    105 ;	logf.c:216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                    106 ;	-----------------------------------------
                                    107 ;	 function logf
                                    108 ;	-----------------------------------------
      000000                        109 _logf:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
      000000 C0*00            [24]  118 	push	_bp
      000002 85 81*00         [24]  119 	mov	_bp,sp
      000005 C8               [12]  120 	xch	a,r0
      000006 E5 81            [12]  121 	mov	a,sp
      000008 24 1E            [12]  122 	add	a,#0x1E
      00000A F5 81            [12]  123 	mov	sp,a
      00000C E5*00            [12]  124 	mov	a,_bp
      00000E 24 05            [12]  125 	add	a,#0x05
      000010 C8               [12]  126 	xch	a,r0
      000011 A6 82            [24]  127 	mov	@r0,dpl
      000013 08               [12]  128 	inc	r0
      000014 A6 83            [24]  129 	mov	@r0,dph
      000016 08               [12]  130 	inc	r0
      000017 A6 F0            [24]  131 	mov	@r0,b
      000019 08               [12]  132 	inc	r0
      00001A F6               [12]  133 	mov	@r0,a
                                    134 ;	logf.c:226: if (x<=0.0)
      00001B E4               [12]  135 	clr	a
      00001C C0 E0            [24]  136 	push	acc
      00001E C0 E0            [24]  137 	push	acc
      000020 C0 E0            [24]  138 	push	acc
      000022 C0 E0            [24]  139 	push	acc
      000024 E5*00            [12]  140 	mov	a,_bp
      000026 24 05            [12]  141 	add	a,#0x05
      000028 F8               [12]  142 	mov	r0,a
      000029 86 82            [24]  143 	mov	dpl,@r0
      00002B 08               [12]  144 	inc	r0
      00002C 86 83            [24]  145 	mov	dph,@r0
      00002E 08               [12]  146 	inc	r0
      00002F 86 F0            [24]  147 	mov	b,@r0
      000031 08               [12]  148 	inc	r0
      000032 E6               [12]  149 	mov	a,@r0
      000033 12r00r00         [24]  150 	lcall	___fsgt
      000036 AB 82            [24]  151 	mov	r3,dpl
      000038 E5 81            [12]  152 	mov	a,sp
      00003A 24 FC            [12]  153 	add	a,#0xfc
      00003C F5 81            [12]  154 	mov	sp,a
      00003E EB               [12]  155 	mov	a,r3
      00003F 70 12            [24]  156 	jnz	00102$
                                    157 ;	logf.c:228: errno=EDOM;
      000041 90r00r00         [24]  158 	mov	dptr,#_errno
      000044 74 21            [12]  159 	mov	a,#0x21
      000046 F0               [24]  160 	movx	@dptr,a
      000047 E4               [12]  161 	clr	a
      000048 A3               [24]  162 	inc	dptr
      000049 F0               [24]  163 	movx	@dptr,a
                                    164 ;	logf.c:229: return 0.0;
      00004A 90 00 00         [24]  165 	mov	dptr,#(0x00&0x00ff)
      00004D E4               [12]  166 	clr	a
      00004E F5 F0            [12]  167 	mov	b,a
      000050 02r04r28         [24]  168 	ljmp	00106$
      000053                        169 00102$:
                                    170 ;	logf.c:231: f=frexpf(x, &n);
      000053 E5*00            [12]  171 	mov	a,_bp
      000055 24 1D            [12]  172 	add	a,#0x1D
      000057 FA               [12]  173 	mov	r2,a
      000058 7B 00            [12]  174 	mov	r3,#0x00
      00005A 7F 40            [12]  175 	mov	r7,#0x40
      00005C C0 02            [24]  176 	push	ar2
      00005E C0 03            [24]  177 	push	ar3
      000060 C0 07            [24]  178 	push	ar7
      000062 E5*00            [12]  179 	mov	a,_bp
      000064 24 05            [12]  180 	add	a,#0x05
      000066 F8               [12]  181 	mov	r0,a
      000067 86 82            [24]  182 	mov	dpl,@r0
      000069 08               [12]  183 	inc	r0
      00006A 86 83            [24]  184 	mov	dph,@r0
      00006C 08               [12]  185 	inc	r0
      00006D 86 F0            [24]  186 	mov	b,@r0
      00006F 08               [12]  187 	inc	r0
      000070 E6               [12]  188 	mov	a,@r0
      000071 78r00            [12]  189 	mov	r0,#_frexpf
      000073 79s00            [12]  190 	mov	r1,#(_frexpf >> 8)
      000075 7As00            [12]  191 	mov	r2,#(_frexpf >> 16)
      000077 12r00r00         [24]  192 	lcall	__sdcc_banked_call
      00007A AC 82            [24]  193 	mov	r4,dpl
      00007C AD 83            [24]  194 	mov	r5,dph
      00007E AE F0            [24]  195 	mov	r6,b
      000080 FF               [12]  196 	mov	r7,a
      000081 15 81            [12]  197 	dec	sp
      000083 15 81            [12]  198 	dec	sp
      000085 15 81            [12]  199 	dec	sp
      000087 8D 03            [24]  200 	mov	ar3,r5
                                    201 ;	logf.c:232: znum=f-0.5;
      000089 C0 07            [24]  202 	push	ar7
      00008B C0 06            [24]  203 	push	ar6
      00008D C0 04            [24]  204 	push	ar4
      00008F C0 03            [24]  205 	push	ar3
      000091 E4               [12]  206 	clr	a
      000092 C0 E0            [24]  207 	push	acc
      000094 C0 E0            [24]  208 	push	acc
      000096 C0 E0            [24]  209 	push	acc
      000098 74 3F            [12]  210 	mov	a,#0x3F
      00009A C0 E0            [24]  211 	push	acc
      00009C 8C 82            [24]  212 	mov	dpl,r4
      00009E 8B 83            [24]  213 	mov	dph,r3
      0000A0 8E F0            [24]  214 	mov	b,r6
      0000A2 EF               [12]  215 	mov	a,r7
      0000A3 12r00r00         [24]  216 	lcall	___fssub
      0000A6 C8               [12]  217 	xch	a,r0
      0000A7 E5*00            [12]  218 	mov	a,_bp
      0000A9 24 11            [12]  219 	add	a,#0x11
      0000AB C8               [12]  220 	xch	a,r0
      0000AC A6 82            [24]  221 	mov	@r0,dpl
      0000AE 08               [12]  222 	inc	r0
      0000AF A6 83            [24]  223 	mov	@r0,dph
      0000B1 08               [12]  224 	inc	r0
      0000B2 A6 F0            [24]  225 	mov	@r0,b
      0000B4 08               [12]  226 	inc	r0
      0000B5 F6               [12]  227 	mov	@r0,a
      0000B6 E5 81            [12]  228 	mov	a,sp
      0000B8 24 FC            [12]  229 	add	a,#0xfc
      0000BA F5 81            [12]  230 	mov	sp,a
      0000BC D0 03            [24]  231 	pop	ar3
      0000BE D0 04            [24]  232 	pop	ar4
      0000C0 D0 06            [24]  233 	pop	ar6
      0000C2 D0 07            [24]  234 	pop	ar7
      0000C4 E5*00            [12]  235 	mov	a,_bp
      0000C6 24 11            [12]  236 	add	a,#0x11
                                    237 ;	logf.c:233: if (f>C0)
      0000C8 C0 07            [24]  238 	push	ar7
      0000CA C0 06            [24]  239 	push	ar6
      0000CC C0 04            [24]  240 	push	ar4
      0000CE C0 03            [24]  241 	push	ar3
      0000D0 74 F3            [12]  242 	mov	a,#0xF3
      0000D2 C0 E0            [24]  243 	push	acc
      0000D4 74 04            [12]  244 	mov	a,#0x04
      0000D6 C0 E0            [24]  245 	push	acc
      0000D8 74 35            [12]  246 	mov	a,#0x35
      0000DA C0 E0            [24]  247 	push	acc
      0000DC 74 3F            [12]  248 	mov	a,#0x3F
      0000DE C0 E0            [24]  249 	push	acc
      0000E0 8C 82            [24]  250 	mov	dpl,r4
      0000E2 8B 83            [24]  251 	mov	dph,r3
      0000E4 8E F0            [24]  252 	mov	b,r6
      0000E6 EF               [12]  253 	mov	a,r7
      0000E7 12r00r00         [24]  254 	lcall	___fsgt
      0000EA AD 82            [24]  255 	mov	r5,dpl
      0000EC E5 81            [12]  256 	mov	a,sp
      0000EE 24 FC            [12]  257 	add	a,#0xfc
      0000F0 F5 81            [12]  258 	mov	sp,a
      0000F2 D0 03            [24]  259 	pop	ar3
      0000F4 D0 04            [24]  260 	pop	ar4
      0000F6 D0 06            [24]  261 	pop	ar6
      0000F8 D0 07            [24]  262 	pop	ar7
      0000FA ED               [12]  263 	mov	a,r5
      0000FB 70 03            [24]  264 	jnz	00115$
      0000FD 02r01r9A         [24]  265 	ljmp	00104$
      000100                        266 00115$:
                                    267 ;	logf.c:235: znum-=0.5;
      000100 C0 07            [24]  268 	push	ar7
      000102 C0 06            [24]  269 	push	ar6
      000104 C0 04            [24]  270 	push	ar4
      000106 C0 03            [24]  271 	push	ar3
      000108 E4               [12]  272 	clr	a
      000109 C0 E0            [24]  273 	push	acc
      00010B C0 E0            [24]  274 	push	acc
      00010D C0 E0            [24]  275 	push	acc
      00010F 74 3F            [12]  276 	mov	a,#0x3F
      000111 C0 E0            [24]  277 	push	acc
      000113 E5*00            [12]  278 	mov	a,_bp
      000115 24 11            [12]  279 	add	a,#0x11
      000117 F8               [12]  280 	mov	r0,a
      000118 86 82            [24]  281 	mov	dpl,@r0
      00011A 08               [12]  282 	inc	r0
      00011B 86 83            [24]  283 	mov	dph,@r0
      00011D 08               [12]  284 	inc	r0
      00011E 86 F0            [24]  285 	mov	b,@r0
      000120 08               [12]  286 	inc	r0
      000121 E6               [12]  287 	mov	a,@r0
      000122 12r00r00         [24]  288 	lcall	___fssub
      000125 A8*00            [24]  289 	mov	r0,_bp
      000127 08               [12]  290 	inc	r0
      000128 A6 82            [24]  291 	mov	@r0,dpl
      00012A 08               [12]  292 	inc	r0
      00012B A6 83            [24]  293 	mov	@r0,dph
      00012D 08               [12]  294 	inc	r0
      00012E A6 F0            [24]  295 	mov	@r0,b
      000130 08               [12]  296 	inc	r0
      000131 F6               [12]  297 	mov	@r0,a
      000132 E5 81            [12]  298 	mov	a,sp
      000134 24 FC            [12]  299 	add	a,#0xfc
      000136 F5 81            [12]  300 	mov	sp,a
      000138 D0 03            [24]  301 	pop	ar3
      00013A D0 04            [24]  302 	pop	ar4
      00013C D0 06            [24]  303 	pop	ar6
      00013E D0 07            [24]  304 	pop	ar7
      000140 A8*00            [24]  305 	mov	r0,_bp
      000142 08               [12]  306 	inc	r0
      000143 E5*00            [12]  307 	mov	a,_bp
      000145 24 11            [12]  308 	add	a,#0x11
      000147 F9               [12]  309 	mov	r1,a
      000148 E6               [12]  310 	mov	a,@r0
      000149 F7               [12]  311 	mov	@r1,a
      00014A 08               [12]  312 	inc	r0
      00014B 09               [12]  313 	inc	r1
      00014C E6               [12]  314 	mov	a,@r0
      00014D F7               [12]  315 	mov	@r1,a
      00014E 08               [12]  316 	inc	r0
      00014F 09               [12]  317 	inc	r1
      000150 E6               [12]  318 	mov	a,@r0
      000151 F7               [12]  319 	mov	@r1,a
      000152 08               [12]  320 	inc	r0
      000153 09               [12]  321 	inc	r1
      000154 E6               [12]  322 	mov	a,@r0
      000155 F7               [12]  323 	mov	@r1,a
                                    324 ;	logf.c:236: zden=(f*0.5)+0.5;
      000156 C0 04            [24]  325 	push	ar4
      000158 C0 03            [24]  326 	push	ar3
      00015A C0 06            [24]  327 	push	ar6
      00015C C0 07            [24]  328 	push	ar7
      00015E 90 00 00         [24]  329 	mov	dptr,#(0x00&0x00ff)
      000161 E4               [12]  330 	clr	a
      000162 F5 F0            [12]  331 	mov	b,a
      000164 74 3F            [12]  332 	mov	a,#0x3F
      000166 12r00r00         [24]  333 	lcall	___fsmul
      000169 AC 82            [24]  334 	mov	r4,dpl
      00016B AD 83            [24]  335 	mov	r5,dph
      00016D AE F0            [24]  336 	mov	r6,b
      00016F FF               [12]  337 	mov	r7,a
      000170 E5 81            [12]  338 	mov	a,sp
      000172 24 FC            [12]  339 	add	a,#0xfc
      000174 F5 81            [12]  340 	mov	sp,a
      000176 E4               [12]  341 	clr	a
      000177 C0 E0            [24]  342 	push	acc
      000179 C0 E0            [24]  343 	push	acc
      00017B C0 E0            [24]  344 	push	acc
      00017D 74 3F            [12]  345 	mov	a,#0x3F
      00017F C0 E0            [24]  346 	push	acc
      000181 8C 82            [24]  347 	mov	dpl,r4
      000183 8D 83            [24]  348 	mov	dph,r5
      000185 8E F0            [24]  349 	mov	b,r6
      000187 EF               [12]  350 	mov	a,r7
      000188 12r00r00         [24]  351 	lcall	___fsadd
      00018B AC 82            [24]  352 	mov	r4,dpl
      00018D AD 83            [24]  353 	mov	r5,dph
      00018F AE F0            [24]  354 	mov	r6,b
      000191 FF               [12]  355 	mov	r7,a
      000192 E5 81            [12]  356 	mov	a,sp
      000194 24 FC            [12]  357 	add	a,#0xfc
      000196 F5 81            [12]  358 	mov	sp,a
      000198 80 72            [24]  359 	sjmp	00105$
      00019A                        360 00104$:
                                    361 ;	logf.c:240: n--;
      00019A E5*00            [12]  362 	mov	a,_bp
      00019C 24 1D            [12]  363 	add	a,#0x1d
      00019E F8               [12]  364 	mov	r0,a
      00019F 16               [12]  365 	dec	@r0
      0001A0 B6 FF 02         [24]  366 	cjne	@r0,#0xFF,00116$
      0001A3 08               [12]  367 	inc	r0
      0001A4 16               [12]  368 	dec	@r0
      0001A5                        369 00116$:
                                    370 ;	logf.c:241: zden=znum*0.5+0.5;
      0001A5 E5*00            [12]  371 	mov	a,_bp
      0001A7 24 11            [12]  372 	add	a,#0x11
      0001A9 F8               [12]  373 	mov	r0,a
      0001AA E6               [12]  374 	mov	a,@r0
      0001AB C0 E0            [24]  375 	push	acc
      0001AD 08               [12]  376 	inc	r0
      0001AE E6               [12]  377 	mov	a,@r0
      0001AF C0 E0            [24]  378 	push	acc
      0001B1 08               [12]  379 	inc	r0
      0001B2 E6               [12]  380 	mov	a,@r0
      0001B3 C0 E0            [24]  381 	push	acc
      0001B5 08               [12]  382 	inc	r0
      0001B6 E6               [12]  383 	mov	a,@r0
      0001B7 C0 E0            [24]  384 	push	acc
      0001B9 90 00 00         [24]  385 	mov	dptr,#(0x00&0x00ff)
      0001BC E4               [12]  386 	clr	a
      0001BD F5 F0            [12]  387 	mov	b,a
      0001BF 74 3F            [12]  388 	mov	a,#0x3F
      0001C1 12r00r00         [24]  389 	lcall	___fsmul
      0001C4 AF 82            [24]  390 	mov	r7,dpl
      0001C6 AE 83            [24]  391 	mov	r6,dph
      0001C8 AD F0            [24]  392 	mov	r5,b
      0001CA FC               [12]  393 	mov	r4,a
      0001CB E5 81            [12]  394 	mov	a,sp
      0001CD 24 FC            [12]  395 	add	a,#0xfc
      0001CF F5 81            [12]  396 	mov	sp,a
      0001D1 E4               [12]  397 	clr	a
      0001D2 C0 E0            [24]  398 	push	acc
      0001D4 C0 E0            [24]  399 	push	acc
      0001D6 C0 E0            [24]  400 	push	acc
      0001D8 74 3F            [12]  401 	mov	a,#0x3F
      0001DA C0 E0            [24]  402 	push	acc
      0001DC 8F 82            [24]  403 	mov	dpl,r7
      0001DE 8E 83            [24]  404 	mov	dph,r6
      0001E0 8D F0            [24]  405 	mov	b,r5
      0001E2 EC               [12]  406 	mov	a,r4
      0001E3 12r00r00         [24]  407 	lcall	___fsadd
      0001E6 C8               [12]  408 	xch	a,r0
      0001E7 E5*00            [12]  409 	mov	a,_bp
      0001E9 24 15            [12]  410 	add	a,#0x15
      0001EB C8               [12]  411 	xch	a,r0
      0001EC A6 82            [24]  412 	mov	@r0,dpl
      0001EE 08               [12]  413 	inc	r0
      0001EF A6 83            [24]  414 	mov	@r0,dph
      0001F1 08               [12]  415 	inc	r0
      0001F2 A6 F0            [24]  416 	mov	@r0,b
      0001F4 08               [12]  417 	inc	r0
      0001F5 F6               [12]  418 	mov	@r0,a
      0001F6 E5 81            [12]  419 	mov	a,sp
      0001F8 24 FC            [12]  420 	add	a,#0xfc
      0001FA F5 81            [12]  421 	mov	sp,a
      0001FC E5*00            [12]  422 	mov	a,_bp
      0001FE 24 15            [12]  423 	add	a,#0x15
      000200 F8               [12]  424 	mov	r0,a
      000201 86 04            [24]  425 	mov	ar4,@r0
      000203 08               [12]  426 	inc	r0
      000204 86 05            [24]  427 	mov	ar5,@r0
      000206 08               [12]  428 	inc	r0
      000207 86 06            [24]  429 	mov	ar6,@r0
      000209 08               [12]  430 	inc	r0
      00020A 86 07            [24]  431 	mov	ar7,@r0
      00020C                        432 00105$:
                                    433 ;	logf.c:243: z=znum/zden;
      00020C C0 04            [24]  434 	push	ar4
      00020E C0 05            [24]  435 	push	ar5
      000210 C0 06            [24]  436 	push	ar6
      000212 C0 07            [24]  437 	push	ar7
      000214 E5*00            [12]  438 	mov	a,_bp
      000216 24 11            [12]  439 	add	a,#0x11
      000218 F8               [12]  440 	mov	r0,a
      000219 86 82            [24]  441 	mov	dpl,@r0
      00021B 08               [12]  442 	inc	r0
      00021C 86 83            [24]  443 	mov	dph,@r0
      00021E 08               [12]  444 	inc	r0
      00021F 86 F0            [24]  445 	mov	b,@r0
      000221 08               [12]  446 	inc	r0
      000222 E6               [12]  447 	mov	a,@r0
      000223 12r00r00         [24]  448 	lcall	___fsdiv
      000226 AC 82            [24]  449 	mov	r4,dpl
      000228 AD 83            [24]  450 	mov	r5,dph
      00022A AE F0            [24]  451 	mov	r6,b
      00022C FF               [12]  452 	mov	r7,a
      00022D E5 81            [12]  453 	mov	a,sp
      00022F 24 FC            [12]  454 	add	a,#0xfc
      000231 F5 81            [12]  455 	mov	sp,a
      000233 E5*00            [12]  456 	mov	a,_bp
      000235 24 0D            [12]  457 	add	a,#0x0d
      000237 F8               [12]  458 	mov	r0,a
      000238 A6 04            [24]  459 	mov	@r0,ar4
      00023A 08               [12]  460 	inc	r0
      00023B A6 05            [24]  461 	mov	@r0,ar5
      00023D 08               [12]  462 	inc	r0
      00023E A6 06            [24]  463 	mov	@r0,ar6
      000240 08               [12]  464 	inc	r0
      000241 A6 07            [24]  465 	mov	@r0,ar7
                                    466 ;	logf.c:244: w=z*z;
      000243 E5*00            [12]  467 	mov	a,_bp
      000245 24 0D            [12]  468 	add	a,#0x0d
      000247 F8               [12]  469 	mov	r0,a
      000248 E6               [12]  470 	mov	a,@r0
      000249 C0 E0            [24]  471 	push	acc
      00024B 08               [12]  472 	inc	r0
      00024C E6               [12]  473 	mov	a,@r0
      00024D C0 E0            [24]  474 	push	acc
      00024F 08               [12]  475 	inc	r0
      000250 E6               [12]  476 	mov	a,@r0
      000251 C0 E0            [24]  477 	push	acc
      000253 08               [12]  478 	inc	r0
      000254 E6               [12]  479 	mov	a,@r0
      000255 C0 E0            [24]  480 	push	acc
      000257 E5*00            [12]  481 	mov	a,_bp
      000259 24 0D            [12]  482 	add	a,#0x0d
      00025B F8               [12]  483 	mov	r0,a
      00025C 86 82            [24]  484 	mov	dpl,@r0
      00025E 08               [12]  485 	inc	r0
      00025F 86 83            [24]  486 	mov	dph,@r0
      000261 08               [12]  487 	inc	r0
      000262 86 F0            [24]  488 	mov	b,@r0
      000264 08               [12]  489 	inc	r0
      000265 E6               [12]  490 	mov	a,@r0
      000266 12r00r00         [24]  491 	lcall	___fsmul
      000269 AF 82            [24]  492 	mov	r7,dpl
      00026B AE 83            [24]  493 	mov	r6,dph
      00026D AD F0            [24]  494 	mov	r5,b
      00026F FC               [12]  495 	mov	r4,a
      000270 E5 81            [12]  496 	mov	a,sp
      000272 24 FC            [12]  497 	add	a,#0xfc
      000274 F5 81            [12]  498 	mov	sp,a
                                    499 ;	logf.c:246: Rz=z+z*(w*A(w)/B(w));
      000276 C0 07            [24]  500 	push	ar7
      000278 C0 06            [24]  501 	push	ar6
      00027A C0 05            [24]  502 	push	ar5
      00027C C0 04            [24]  503 	push	ar4
      00027E C0 07            [24]  504 	push	ar7
      000280 C0 06            [24]  505 	push	ar6
      000282 C0 05            [24]  506 	push	ar5
      000284 C0 04            [24]  507 	push	ar4
      000286 90 7E 3D         [24]  508 	mov	dptr,#0x7E3D
      000289 75 F0 0D         [24]  509 	mov	b,#0x0D
      00028C 74 BF            [12]  510 	mov	a,#0xBF
      00028E 12r00r00         [24]  511 	lcall	___fsmul
      000291 A8*00            [24]  512 	mov	r0,_bp
      000293 08               [12]  513 	inc	r0
      000294 A6 82            [24]  514 	mov	@r0,dpl
      000296 08               [12]  515 	inc	r0
      000297 A6 83            [24]  516 	mov	@r0,dph
      000299 08               [12]  517 	inc	r0
      00029A A6 F0            [24]  518 	mov	@r0,b
      00029C 08               [12]  519 	inc	r0
      00029D F6               [12]  520 	mov	@r0,a
      00029E E5 81            [12]  521 	mov	a,sp
      0002A0 24 FC            [12]  522 	add	a,#0xfc
      0002A2 F5 81            [12]  523 	mov	sp,a
      0002A4 D0 04            [24]  524 	pop	ar4
      0002A6 D0 05            [24]  525 	pop	ar5
      0002A8 D0 06            [24]  526 	pop	ar6
      0002AA D0 07            [24]  527 	pop	ar7
      0002AC 74 3A            [12]  528 	mov	a,#0x3A
      0002AE C0 E0            [24]  529 	push	acc
      0002B0 74 3F            [12]  530 	mov	a,#0x3F
      0002B2 C0 E0            [24]  531 	push	acc
      0002B4 74 D4            [12]  532 	mov	a,#0xD4
      0002B6 C0 E0            [24]  533 	push	acc
      0002B8 74 C0            [12]  534 	mov	a,#0xC0
      0002BA C0 E0            [24]  535 	push	acc
      0002BC 8F 82            [24]  536 	mov	dpl,r7
      0002BE 8E 83            [24]  537 	mov	dph,r6
      0002C0 8D F0            [24]  538 	mov	b,r5
      0002C2 EC               [12]  539 	mov	a,r4
      0002C3 12r00r00         [24]  540 	lcall	___fsadd
      0002C6 AC 82            [24]  541 	mov	r4,dpl
      0002C8 AD 83            [24]  542 	mov	r5,dph
      0002CA AE F0            [24]  543 	mov	r6,b
      0002CC FF               [12]  544 	mov	r7,a
      0002CD E5 81            [12]  545 	mov	a,sp
      0002CF 24 FC            [12]  546 	add	a,#0xfc
      0002D1 F5 81            [12]  547 	mov	sp,a
      0002D3 C0 04            [24]  548 	push	ar4
      0002D5 C0 05            [24]  549 	push	ar5
      0002D7 C0 06            [24]  550 	push	ar6
      0002D9 C0 07            [24]  551 	push	ar7
      0002DB A8*00            [24]  552 	mov	r0,_bp
      0002DD 08               [12]  553 	inc	r0
      0002DE 86 82            [24]  554 	mov	dpl,@r0
      0002E0 08               [12]  555 	inc	r0
      0002E1 86 83            [24]  556 	mov	dph,@r0
      0002E3 08               [12]  557 	inc	r0
      0002E4 86 F0            [24]  558 	mov	b,@r0
      0002E6 08               [12]  559 	inc	r0
      0002E7 E6               [12]  560 	mov	a,@r0
      0002E8 12r00r00         [24]  561 	lcall	___fsdiv
      0002EB AC 82            [24]  562 	mov	r4,dpl
      0002ED AD 83            [24]  563 	mov	r5,dph
      0002EF AE F0            [24]  564 	mov	r6,b
      0002F1 FF               [12]  565 	mov	r7,a
      0002F2 E5 81            [12]  566 	mov	a,sp
      0002F4 24 FC            [12]  567 	add	a,#0xfc
      0002F6 F5 81            [12]  568 	mov	sp,a
      0002F8 C0 04            [24]  569 	push	ar4
      0002FA C0 05            [24]  570 	push	ar5
      0002FC C0 06            [24]  571 	push	ar6
      0002FE C0 07            [24]  572 	push	ar7
      000300 E5*00            [12]  573 	mov	a,_bp
      000302 24 0D            [12]  574 	add	a,#0x0d
      000304 F8               [12]  575 	mov	r0,a
      000305 86 82            [24]  576 	mov	dpl,@r0
      000307 08               [12]  577 	inc	r0
      000308 86 83            [24]  578 	mov	dph,@r0
      00030A 08               [12]  579 	inc	r0
      00030B 86 F0            [24]  580 	mov	b,@r0
      00030D 08               [12]  581 	inc	r0
      00030E E6               [12]  582 	mov	a,@r0
      00030F 12r00r00         [24]  583 	lcall	___fsmul
      000312 AC 82            [24]  584 	mov	r4,dpl
      000314 AD 83            [24]  585 	mov	r5,dph
      000316 AE F0            [24]  586 	mov	r6,b
      000318 FF               [12]  587 	mov	r7,a
      000319 E5 81            [12]  588 	mov	a,sp
      00031B 24 FC            [12]  589 	add	a,#0xfc
      00031D F5 81            [12]  590 	mov	sp,a
      00031F C0 04            [24]  591 	push	ar4
      000321 C0 05            [24]  592 	push	ar5
      000323 C0 06            [24]  593 	push	ar6
      000325 C0 07            [24]  594 	push	ar7
      000327 E5*00            [12]  595 	mov	a,_bp
      000329 24 0D            [12]  596 	add	a,#0x0d
      00032B F8               [12]  597 	mov	r0,a
      00032C 86 82            [24]  598 	mov	dpl,@r0
      00032E 08               [12]  599 	inc	r0
      00032F 86 83            [24]  600 	mov	dph,@r0
      000331 08               [12]  601 	inc	r0
      000332 86 F0            [24]  602 	mov	b,@r0
      000334 08               [12]  603 	inc	r0
      000335 E6               [12]  604 	mov	a,@r0
      000336 12r00r00         [24]  605 	lcall	___fsadd
      000339 C8               [12]  606 	xch	a,r0
      00033A E5*00            [12]  607 	mov	a,_bp
      00033C 24 09            [12]  608 	add	a,#0x09
      00033E C8               [12]  609 	xch	a,r0
      00033F A6 82            [24]  610 	mov	@r0,dpl
      000341 08               [12]  611 	inc	r0
      000342 A6 83            [24]  612 	mov	@r0,dph
      000344 08               [12]  613 	inc	r0
      000345 A6 F0            [24]  614 	mov	@r0,b
      000347 08               [12]  615 	inc	r0
      000348 F6               [12]  616 	mov	@r0,a
      000349 E5 81            [12]  617 	mov	a,sp
      00034B 24 FC            [12]  618 	add	a,#0xfc
      00034D F5 81            [12]  619 	mov	sp,a
                                    620 ;	logf.c:247: xn=n;
      00034F E5*00            [12]  621 	mov	a,_bp
      000351 24 1D            [12]  622 	add	a,#0x1d
      000353 F8               [12]  623 	mov	r0,a
      000354 86 82            [24]  624 	mov	dpl,@r0
      000356 08               [12]  625 	inc	r0
      000357 86 83            [24]  626 	mov	dph,@r0
      000359 12r00r00         [24]  627 	lcall	___sint2fs
      00035C AA 82            [24]  628 	mov	r2,dpl
      00035E AB 83            [24]  629 	mov	r3,dph
      000360 AE F0            [24]  630 	mov	r6,b
      000362 FF               [12]  631 	mov	r7,a
      000363 E5*00            [12]  632 	mov	a,_bp
      000365 24 19            [12]  633 	add	a,#0x19
      000367 F8               [12]  634 	mov	r0,a
      000368 A6 02            [24]  635 	mov	@r0,ar2
      00036A 08               [12]  636 	inc	r0
      00036B A6 03            [24]  637 	mov	@r0,ar3
      00036D 08               [12]  638 	inc	r0
      00036E A6 06            [24]  639 	mov	@r0,ar6
      000370 08               [12]  640 	inc	r0
      000371 A6 07            [24]  641 	mov	@r0,ar7
                                    642 ;	logf.c:248: return ((xn*C2+Rz)+xn*C1);
      000373 E5*00            [12]  643 	mov	a,_bp
      000375 24 19            [12]  644 	add	a,#0x19
      000377 F8               [12]  645 	mov	r0,a
      000378 E6               [12]  646 	mov	a,@r0
      000379 C0 E0            [24]  647 	push	acc
      00037B 08               [12]  648 	inc	r0
      00037C E6               [12]  649 	mov	a,@r0
      00037D C0 E0            [24]  650 	push	acc
      00037F 08               [12]  651 	inc	r0
      000380 E6               [12]  652 	mov	a,@r0
      000381 C0 E0            [24]  653 	push	acc
      000383 08               [12]  654 	inc	r0
      000384 E6               [12]  655 	mov	a,@r0
      000385 C0 E0            [24]  656 	push	acc
      000387 90 80 83         [24]  657 	mov	dptr,#0x8083
      00038A 75 F0 5E         [24]  658 	mov	b,#0x5E
      00038D 74 B9            [12]  659 	mov	a,#0xB9
      00038F 12r00r00         [24]  660 	lcall	___fsmul
      000392 AC 82            [24]  661 	mov	r4,dpl
      000394 AD 83            [24]  662 	mov	r5,dph
      000396 AE F0            [24]  663 	mov	r6,b
      000398 FF               [12]  664 	mov	r7,a
      000399 E5 81            [12]  665 	mov	a,sp
      00039B 24 FC            [12]  666 	add	a,#0xfc
      00039D F5 81            [12]  667 	mov	sp,a
      00039F E5*00            [12]  668 	mov	a,_bp
      0003A1 24 09            [12]  669 	add	a,#0x09
      0003A3 F8               [12]  670 	mov	r0,a
      0003A4 E6               [12]  671 	mov	a,@r0
      0003A5 C0 E0            [24]  672 	push	acc
      0003A7 08               [12]  673 	inc	r0
      0003A8 E6               [12]  674 	mov	a,@r0
      0003A9 C0 E0            [24]  675 	push	acc
      0003AB 08               [12]  676 	inc	r0
      0003AC E6               [12]  677 	mov	a,@r0
      0003AD C0 E0            [24]  678 	push	acc
      0003AF 08               [12]  679 	inc	r0
      0003B0 E6               [12]  680 	mov	a,@r0
      0003B1 C0 E0            [24]  681 	push	acc
      0003B3 8C 82            [24]  682 	mov	dpl,r4
      0003B5 8D 83            [24]  683 	mov	dph,r5
      0003B7 8E F0            [24]  684 	mov	b,r6
      0003B9 EF               [12]  685 	mov	a,r7
      0003BA 12r00r00         [24]  686 	lcall	___fsadd
      0003BD A8*00            [24]  687 	mov	r0,_bp
      0003BF 08               [12]  688 	inc	r0
      0003C0 A6 82            [24]  689 	mov	@r0,dpl
      0003C2 08               [12]  690 	inc	r0
      0003C3 A6 83            [24]  691 	mov	@r0,dph
      0003C5 08               [12]  692 	inc	r0
      0003C6 A6 F0            [24]  693 	mov	@r0,b
      0003C8 08               [12]  694 	inc	r0
      0003C9 F6               [12]  695 	mov	@r0,a
      0003CA E5 81            [12]  696 	mov	a,sp
      0003CC 24 FC            [12]  697 	add	a,#0xfc
      0003CE F5 81            [12]  698 	mov	sp,a
      0003D0 E5*00            [12]  699 	mov	a,_bp
      0003D2 24 19            [12]  700 	add	a,#0x19
      0003D4 F8               [12]  701 	mov	r0,a
      0003D5 E6               [12]  702 	mov	a,@r0
      0003D6 C0 E0            [24]  703 	push	acc
      0003D8 08               [12]  704 	inc	r0
      0003D9 E6               [12]  705 	mov	a,@r0
      0003DA C0 E0            [24]  706 	push	acc
      0003DC 08               [12]  707 	inc	r0
      0003DD E6               [12]  708 	mov	a,@r0
      0003DE C0 E0            [24]  709 	push	acc
      0003E0 08               [12]  710 	inc	r0
      0003E1 E6               [12]  711 	mov	a,@r0
      0003E2 C0 E0            [24]  712 	push	acc
      0003E4 90 80 00         [24]  713 	mov	dptr,#0x8000
      0003E7 75 F0 31         [24]  714 	mov	b,#0x31
      0003EA 74 3F            [12]  715 	mov	a,#0x3F
      0003EC 12r00r00         [24]  716 	lcall	___fsmul
      0003EF AA 82            [24]  717 	mov	r2,dpl
      0003F1 AB 83            [24]  718 	mov	r3,dph
      0003F3 AE F0            [24]  719 	mov	r6,b
      0003F5 FF               [12]  720 	mov	r7,a
      0003F6 E5 81            [12]  721 	mov	a,sp
      0003F8 24 FC            [12]  722 	add	a,#0xfc
      0003FA F5 81            [12]  723 	mov	sp,a
      0003FC C0 02            [24]  724 	push	ar2
      0003FE C0 03            [24]  725 	push	ar3
      000400 C0 06            [24]  726 	push	ar6
      000402 C0 07            [24]  727 	push	ar7
      000404 A8*00            [24]  728 	mov	r0,_bp
      000406 08               [12]  729 	inc	r0
      000407 86 82            [24]  730 	mov	dpl,@r0
      000409 08               [12]  731 	inc	r0
      00040A 86 83            [24]  732 	mov	dph,@r0
      00040C 08               [12]  733 	inc	r0
      00040D 86 F0            [24]  734 	mov	b,@r0
      00040F 08               [12]  735 	inc	r0
      000410 E6               [12]  736 	mov	a,@r0
      000411 12r00r00         [24]  737 	lcall	___fsadd
      000414 AC 82            [24]  738 	mov	r4,dpl
      000416 AD 83            [24]  739 	mov	r5,dph
      000418 AE F0            [24]  740 	mov	r6,b
      00041A FF               [12]  741 	mov	r7,a
      00041B E5 81            [12]  742 	mov	a,sp
      00041D 24 FC            [12]  743 	add	a,#0xfc
      00041F F5 81            [12]  744 	mov	sp,a
      000421 8C 82            [24]  745 	mov	dpl,r4
      000423 8D 83            [24]  746 	mov	dph,r5
      000425 8E F0            [24]  747 	mov	b,r6
      000427 EF               [12]  748 	mov	a,r7
      000428                        749 00106$:
      000428 85*00 81         [24]  750 	mov	sp,_bp
      00042B D0*00            [24]  751 	pop	_bp
      00042D 02r00r00         [24]  752 	ljmp	__sdcc_banked_ret
                                    753 	.area CSEG    (CODE)
                                    754 	.area CONST   (CODE)
                                    755 	.area XINIT   (CODE)
                                    756 	.area CABS    (ABS,CODE)
