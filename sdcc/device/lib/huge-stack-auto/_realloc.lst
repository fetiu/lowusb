                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:19 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _realloc
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __sdcc_find_memheader
                                     13 	.globl _memmove
                                     14 	.globl _memcpy
                                     15 	.globl _free
                                     16 	.globl _malloc
                                     17 	.globl _realloc
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; special function bits
                                     25 ;--------------------------------------------------------
                                     26 	.area RSEG    (ABS,DATA)
      000000                         27 	.org 0x0000
                                     28 ;--------------------------------------------------------
                                     29 ; overlayable register banks
                                     30 ;--------------------------------------------------------
                                     31 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         32 	.ds 8
                                     33 ;--------------------------------------------------------
                                     34 ; internal ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DSEG    (DATA)
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable items in internal ram 
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; indirectly addressable internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area ISEG    (DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; absolute internal ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area IABS    (ABS,DATA)
                                     48 	.area IABS    (ABS,DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; bit data
                                     51 ;--------------------------------------------------------
                                     52 	.area BSEG    (BIT)
                                     53 ;--------------------------------------------------------
                                     54 ; paged external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area PSEG    (PAG,XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XSEG    (XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; absolute external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XABS    (ABS,XDATA)
                                     65 ;--------------------------------------------------------
                                     66 ; external initialized ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area XISEG   (XDATA)
                                     69 	.area HOME    (CODE)
                                     70 	.area GSINIT0 (CODE)
                                     71 	.area GSINIT1 (CODE)
                                     72 	.area GSINIT2 (CODE)
                                     73 	.area GSINIT3 (CODE)
                                     74 	.area GSINIT4 (CODE)
                                     75 	.area GSINIT5 (CODE)
                                     76 	.area GSINIT  (CODE)
                                     77 	.area GSFINAL (CODE)
                                     78 	.area CSEG    (CODE)
                                     79 ;--------------------------------------------------------
                                     80 ; global & static initialisations
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME    (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 	.area GSFINAL (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; Home
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME    (CODE)
                                     90 	.area HOME    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; code
                                     93 ;--------------------------------------------------------
                                     94 	.area CSEG    (CODE)
                                     95 ;------------------------------------------------------------
                                     96 ;Allocation info for local variables in function 'realloc'
                                     97 ;------------------------------------------------------------
                                     98 ;size                      Allocated to stack - _bp -5
                                     99 ;p                         Allocated to stack - _bp +3
                                    100 ;pthis                     Allocated to stack - _bp +6
                                    101 ;pnew                      Allocated to stack - _bp +8
                                    102 ;ret                       Allocated to stack - _bp +10
                                    103 ;sloc0                     Allocated to stack - _bp +1
                                    104 ;------------------------------------------------------------
                                    105 ;	_realloc.c:84: void __xdata * realloc (void * p, size_t size)
                                    106 ;	-----------------------------------------
                                    107 ;	 function realloc
                                    108 ;	-----------------------------------------
      000000                        109 _realloc:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
      000000 C0*00            [24]  118 	push	_bp
      000002 E5 81            [12]  119 	mov	a,sp
      000004 F5*00            [12]  120 	mov	_bp,a
      000006 24 0B            [12]  121 	add	a,#0x0B
      000008 F5 81            [12]  122 	mov	sp,a
      00000A A8*00            [24]  123 	mov	r0,_bp
      00000C 08               [12]  124 	inc	r0
      00000D 08               [12]  125 	inc	r0
      00000E 08               [12]  126 	inc	r0
      00000F A6 82            [24]  127 	mov	@r0,dpl
      000011 08               [12]  128 	inc	r0
      000012 A6 83            [24]  129 	mov	@r0,dph
      000014 08               [12]  130 	inc	r0
      000015 A6 F0            [24]  131 	mov	@r0,b
                                    132 ;	_realloc.c:142: }
      000017 D3               [12]  133 	setb	c
      000018 10 AF 01         [24]  134 	jbc	ea,00136$
      00001B C3               [12]  135 	clr	c
      00001C                        136 00136$:
      00001C C0 D0            [24]  137 	push	psw
                                    138 ;	_realloc.c:92: pthis = _sdcc_find_memheader(p);
      00001E E5*00            [12]  139 	mov	a,_bp
      000020 24 03            [12]  140 	add	a,#0x03
      000022 F8               [12]  141 	mov	r0,a
      000023 86 03            [24]  142 	mov	ar3,@r0
      000025 08               [12]  143 	inc	r0
      000026 86 04            [24]  144 	mov	ar4,@r0
      000028 8B 82            [24]  145 	mov	dpl,r3
      00002A 8C 83            [24]  146 	mov	dph,r4
      00002C 78r00            [12]  147 	mov	r0,#__sdcc_find_memheader
      00002E 79s00            [12]  148 	mov	r1,#(__sdcc_find_memheader >> 8)
      000030 7As00            [12]  149 	mov	r2,#(__sdcc_find_memheader >> 16)
      000032 12r00r00         [24]  150 	lcall	__sdcc_banked_call
      000035 AB 82            [24]  151 	mov	r3,dpl
      000037 AC 83            [24]  152 	mov	r4,dph
      000039 E5*00            [12]  153 	mov	a,_bp
      00003B 24 06            [12]  154 	add	a,#0x06
      00003D F8               [12]  155 	mov	r0,a
      00003E A6 03            [24]  156 	mov	@r0,ar3
      000040 08               [12]  157 	inc	r0
      000041 A6 04            [24]  158 	mov	@r0,ar4
                                    159 ;	_realloc.c:93: if (pthis)
      000043 E5*00            [12]  160 	mov	a,_bp
      000045 24 06            [12]  161 	add	a,#0x06
      000047 F8               [12]  162 	mov	r0,a
      000048 E6               [12]  163 	mov	a,@r0
      000049 08               [12]  164 	inc	r0
      00004A 46               [12]  165 	orl	a,@r0
      00004B 70 03            [24]  166 	jnz	00137$
      00004D 02r02r5F         [24]  167 	ljmp	00114$
      000050                        168 00137$:
                                    169 ;	_realloc.c:95: if (size > (0xFFFF-HEADER_SIZE))
      000050 E5*00            [12]  170 	mov	a,_bp
      000052 24 FB            [12]  171 	add	a,#0xfb
      000054 F8               [12]  172 	mov	r0,a
      000055 C3               [12]  173 	clr	c
      000056 74 FB            [12]  174 	mov	a,#0xFB
      000058 96               [12]  175 	subb	a,@r0
      000059 74 FF            [12]  176 	mov	a,#0xFF
      00005B 08               [12]  177 	inc	r0
      00005C 96               [12]  178 	subb	a,@r0
      00005D 50 0C            [24]  179 	jnc	00111$
                                    180 ;	_realloc.c:97: ret = (void __xdata *) NULL; //To prevent overflow in next line
      00005F E5*00            [12]  181 	mov	a,_bp
      000061 24 0A            [12]  182 	add	a,#0x0a
      000063 F8               [12]  183 	mov	r0,a
      000064 E4               [12]  184 	clr	a
      000065 F6               [12]  185 	mov	@r0,a
      000066 08               [12]  186 	inc	r0
      000067 F6               [12]  187 	mov	@r0,a
      000068 02r02r80         [24]  188 	ljmp	00115$
      00006B                        189 00111$:
                                    190 ;	_realloc.c:101: size += HEADER_SIZE; //We need a memory for header too
      00006B E5*00            [12]  191 	mov	a,_bp
      00006D 24 FB            [12]  192 	add	a,#0xfb
      00006F F8               [12]  193 	mov	r0,a
      000070 74 04            [12]  194 	mov	a,#0x04
      000072 26               [12]  195 	add	a,@r0
      000073 F6               [12]  196 	mov	@r0,a
      000074 E4               [12]  197 	clr	a
      000075 08               [12]  198 	inc	r0
      000076 36               [12]  199 	addc	a,@r0
      000077 F6               [12]  200 	mov	@r0,a
                                    201 ;	_realloc.c:103: if ((((unsigned int)pthis->next) - ((unsigned int)pthis)) >= size)
      000078 E5*00            [12]  202 	mov	a,_bp
      00007A 24 06            [12]  203 	add	a,#0x06
      00007C F8               [12]  204 	mov	r0,a
      00007D 86 82            [24]  205 	mov	dpl,@r0
      00007F 08               [12]  206 	inc	r0
      000080 86 83            [24]  207 	mov	dph,@r0
      000082 E0               [24]  208 	movx	a,@dptr
      000083 FA               [12]  209 	mov	r2,a
      000084 A3               [24]  210 	inc	dptr
      000085 E0               [24]  211 	movx	a,@dptr
      000086 FF               [12]  212 	mov	r7,a
      000087 8A 05            [24]  213 	mov	ar5,r2
      000089 8F 06            [24]  214 	mov	ar6,r7
      00008B E5*00            [12]  215 	mov	a,_bp
      00008D 24 06            [12]  216 	add	a,#0x06
      00008F F8               [12]  217 	mov	r0,a
      000090 86 03            [24]  218 	mov	ar3,@r0
      000092 08               [12]  219 	inc	r0
      000093 86 04            [24]  220 	mov	ar4,@r0
      000095 ED               [12]  221 	mov	a,r5
      000096 C3               [12]  222 	clr	c
      000097 9B               [12]  223 	subb	a,r3
      000098 FD               [12]  224 	mov	r5,a
      000099 EE               [12]  225 	mov	a,r6
      00009A 9C               [12]  226 	subb	a,r4
      00009B FE               [12]  227 	mov	r6,a
      00009C E5*00            [12]  228 	mov	a,_bp
      00009E 24 FB            [12]  229 	add	a,#0xfb
      0000A0 F8               [12]  230 	mov	r0,a
      0000A1 C3               [12]  231 	clr	c
      0000A2 ED               [12]  232 	mov	a,r5
      0000A3 96               [12]  233 	subb	a,@r0
      0000A4 EE               [12]  234 	mov	a,r6
      0000A5 08               [12]  235 	inc	r0
      0000A6 96               [12]  236 	subb	a,@r0
      0000A7 40 2A            [24]  237 	jc	00108$
                                    238 ;	_realloc.c:105: pthis->len = size;
      0000A9 E5*00            [12]  239 	mov	a,_bp
      0000AB 24 06            [12]  240 	add	a,#0x06
      0000AD F8               [12]  241 	mov	r0,a
      0000AE 86 82            [24]  242 	mov	dpl,@r0
      0000B0 08               [12]  243 	inc	r0
      0000B1 86 83            [24]  244 	mov	dph,@r0
      0000B3 A3               [24]  245 	inc	dptr
      0000B4 A3               [24]  246 	inc	dptr
      0000B5 E5*00            [12]  247 	mov	a,_bp
      0000B7 24 FB            [12]  248 	add	a,#0xfb
      0000B9 F8               [12]  249 	mov	r0,a
      0000BA E6               [12]  250 	mov	a,@r0
      0000BB F0               [24]  251 	movx	@dptr,a
      0000BC 08               [12]  252 	inc	r0
      0000BD E6               [12]  253 	mov	a,@r0
      0000BE A3               [24]  254 	inc	dptr
      0000BF F0               [24]  255 	movx	@dptr,a
                                    256 ;	_realloc.c:106: ret = p;
      0000C0 E5*00            [12]  257 	mov	a,_bp
      0000C2 24 03            [12]  258 	add	a,#0x03
      0000C4 F8               [12]  259 	mov	r0,a
      0000C5 E5*00            [12]  260 	mov	a,_bp
      0000C7 24 0A            [12]  261 	add	a,#0x0a
      0000C9 F9               [12]  262 	mov	r1,a
      0000CA E6               [12]  263 	mov	a,@r0
      0000CB F7               [12]  264 	mov	@r1,a
      0000CC 08               [12]  265 	inc	r0
      0000CD 09               [12]  266 	inc	r1
      0000CE E6               [12]  267 	mov	a,@r0
      0000CF F7               [12]  268 	mov	@r1,a
      0000D0 02r02r80         [24]  269 	ljmp	00115$
      0000D3                        270 00108$:
                                    271 ;	_realloc.c:110: if ((_sdcc_prev_memheader) &&
      0000D3 90r00r00         [24]  272 	mov	dptr,#__sdcc_prev_memheader
      0000D6 E0               [24]  273 	movx	a,@dptr
      0000D7 FD               [12]  274 	mov	r5,a
      0000D8 A3               [24]  275 	inc	dptr
      0000D9 E0               [24]  276 	movx	a,@dptr
      0000DA FE               [12]  277 	mov	r6,a
      0000DB 4D               [12]  278 	orl	a,r5
      0000DC 70 03            [24]  279 	jnz	00140$
      0000DE 02r01rB4         [24]  280 	ljmp	00104$
      0000E1                        281 00140$:
                                    282 ;	_realloc.c:111: ((((unsigned int)pthis->next) -
                                    283 ;	_realloc.c:112: ((unsigned int)_sdcc_prev_memheader) -
      0000E1 8D 03            [24]  284 	mov	ar3,r5
      0000E3 8E 04            [24]  285 	mov	ar4,r6
      0000E5 EA               [12]  286 	mov	a,r2
      0000E6 C3               [12]  287 	clr	c
      0000E7 9B               [12]  288 	subb	a,r3
      0000E8 FA               [12]  289 	mov	r2,a
      0000E9 EF               [12]  290 	mov	a,r7
      0000EA 9C               [12]  291 	subb	a,r4
      0000EB FF               [12]  292 	mov	r7,a
                                    293 ;	_realloc.c:113: _sdcc_prev_memheader->len) >= size))
      0000EC 8D 82            [24]  294 	mov	dpl,r5
      0000EE 8E 83            [24]  295 	mov	dph,r6
      0000F0 A3               [24]  296 	inc	dptr
      0000F1 A3               [24]  297 	inc	dptr
      0000F2 E0               [24]  298 	movx	a,@dptr
      0000F3 FB               [12]  299 	mov	r3,a
      0000F4 A3               [24]  300 	inc	dptr
      0000F5 E0               [24]  301 	movx	a,@dptr
      0000F6 FC               [12]  302 	mov	r4,a
      0000F7 EA               [12]  303 	mov	a,r2
      0000F8 C3               [12]  304 	clr	c
      0000F9 9B               [12]  305 	subb	a,r3
      0000FA FA               [12]  306 	mov	r2,a
      0000FB EF               [12]  307 	mov	a,r7
      0000FC 9C               [12]  308 	subb	a,r4
      0000FD FF               [12]  309 	mov	r7,a
      0000FE E5*00            [12]  310 	mov	a,_bp
      000100 24 FB            [12]  311 	add	a,#0xfb
      000102 F8               [12]  312 	mov	r0,a
      000103 C3               [12]  313 	clr	c
      000104 EA               [12]  314 	mov	a,r2
      000105 96               [12]  315 	subb	a,@r0
      000106 EF               [12]  316 	mov	a,r7
      000107 08               [12]  317 	inc	r0
      000108 96               [12]  318 	subb	a,@r0
      000109 50 03            [24]  319 	jnc	00141$
      00010B 02r01rB4         [24]  320 	ljmp	00104$
      00010E                        321 00141$:
                                    322 ;	_realloc.c:115: pnew = (MEMHEADER __xdata * )((char __xdata *)_sdcc_prev_memheader + _sdcc_prev_memheader->len);
      00010E 8D 02            [24]  323 	mov	ar2,r5
      000110 8E 07            [24]  324 	mov	ar7,r6
      000112 EB               [12]  325 	mov	a,r3
      000113 2A               [12]  326 	add	a,r2
      000114 FB               [12]  327 	mov	r3,a
      000115 EC               [12]  328 	mov	a,r4
      000116 3F               [12]  329 	addc	a,r7
      000117 FC               [12]  330 	mov	r4,a
      000118 E5*00            [12]  331 	mov	a,_bp
      00011A 24 08            [12]  332 	add	a,#0x08
      00011C F8               [12]  333 	mov	r0,a
      00011D A6 03            [24]  334 	mov	@r0,ar3
      00011F 08               [12]  335 	inc	r0
      000120 A6 04            [24]  336 	mov	@r0,ar4
                                    337 ;	_realloc.c:116: _sdcc_prev_memheader->next = pnew;
      000122 8D 82            [24]  338 	mov	dpl,r5
      000124 8E 83            [24]  339 	mov	dph,r6
      000126 E5*00            [12]  340 	mov	a,_bp
      000128 24 08            [12]  341 	add	a,#0x08
      00012A F8               [12]  342 	mov	r0,a
      00012B E6               [12]  343 	mov	a,@r0
      00012C F0               [24]  344 	movx	@dptr,a
      00012D 08               [12]  345 	inc	r0
      00012E E6               [12]  346 	mov	a,@r0
      00012F A3               [24]  347 	inc	dptr
      000130 F0               [24]  348 	movx	@dptr,a
                                    349 ;	_realloc.c:122: memmove(pnew, pthis, pthis->len);
      000131 E5*00            [12]  350 	mov	a,_bp
      000133 24 06            [12]  351 	add	a,#0x06
      000135 F8               [12]  352 	mov	r0,a
      000136 86 82            [24]  353 	mov	dpl,@r0
      000138 08               [12]  354 	inc	r0
      000139 86 83            [24]  355 	mov	dph,@r0
      00013B A3               [24]  356 	inc	dptr
      00013C A3               [24]  357 	inc	dptr
      00013D A8*00            [24]  358 	mov	r0,_bp
      00013F 08               [12]  359 	inc	r0
      000140 E0               [24]  360 	movx	a,@dptr
      000141 F6               [12]  361 	mov	@r0,a
      000142 A3               [24]  362 	inc	dptr
      000143 E0               [24]  363 	movx	a,@dptr
      000144 08               [12]  364 	inc	r0
      000145 F6               [12]  365 	mov	@r0,a
      000146 E5*00            [12]  366 	mov	a,_bp
      000148 24 06            [12]  367 	add	a,#0x06
      00014A F8               [12]  368 	mov	r0,a
      00014B 86 02            [24]  369 	mov	ar2,@r0
      00014D 08               [12]  370 	inc	r0
      00014E 86 04            [24]  371 	mov	ar4,@r0
      000150 7D 00            [12]  372 	mov	r5,#0x00
      000152 E5*00            [12]  373 	mov	a,_bp
      000154 24 08            [12]  374 	add	a,#0x08
      000156 F8               [12]  375 	mov	r0,a
      000157 86 03            [24]  376 	mov	ar3,@r0
      000159 08               [12]  377 	inc	r0
      00015A 86 06            [24]  378 	mov	ar6,@r0
      00015C 7F 00            [12]  379 	mov	r7,#0x00
      00015E A8*00            [24]  380 	mov	r0,_bp
      000160 08               [12]  381 	inc	r0
      000161 E6               [12]  382 	mov	a,@r0
      000162 C0 E0            [24]  383 	push	acc
      000164 08               [12]  384 	inc	r0
      000165 E6               [12]  385 	mov	a,@r0
      000166 C0 E0            [24]  386 	push	acc
      000168 C0 02            [24]  387 	push	ar2
      00016A C0 04            [24]  388 	push	ar4
      00016C C0 05            [24]  389 	push	ar5
      00016E 8B 82            [24]  390 	mov	dpl,r3
      000170 8E 83            [24]  391 	mov	dph,r6
      000172 8F F0            [24]  392 	mov	b,r7
      000174 78r00            [12]  393 	mov	r0,#_memmove
      000176 79s00            [12]  394 	mov	r1,#(_memmove >> 8)
      000178 7As00            [12]  395 	mov	r2,#(_memmove >> 16)
      00017A 12r00r00         [24]  396 	lcall	__sdcc_banked_call
      00017D E5 81            [12]  397 	mov	a,sp
      00017F 24 FB            [12]  398 	add	a,#0xfb
      000181 F5 81            [12]  399 	mov	sp,a
                                    400 ;	_realloc.c:123: pnew->len = size;
      000183 E5*00            [12]  401 	mov	a,_bp
      000185 24 08            [12]  402 	add	a,#0x08
      000187 F8               [12]  403 	mov	r0,a
      000188 86 82            [24]  404 	mov	dpl,@r0
      00018A 08               [12]  405 	inc	r0
      00018B 86 83            [24]  406 	mov	dph,@r0
      00018D A3               [24]  407 	inc	dptr
      00018E A3               [24]  408 	inc	dptr
      00018F E5*00            [12]  409 	mov	a,_bp
      000191 24 FB            [12]  410 	add	a,#0xfb
      000193 F8               [12]  411 	mov	r0,a
      000194 E6               [12]  412 	mov	a,@r0
      000195 F0               [24]  413 	movx	@dptr,a
      000196 08               [12]  414 	inc	r0
      000197 E6               [12]  415 	mov	a,@r0
      000198 A3               [24]  416 	inc	dptr
      000199 F0               [24]  417 	movx	@dptr,a
                                    418 ;	_realloc.c:124: ret = MEM(pnew);
      00019A E5*00            [12]  419 	mov	a,_bp
      00019C 24 08            [12]  420 	add	a,#0x08
      00019E F8               [12]  421 	mov	r0,a
      00019F 74 04            [12]  422 	mov	a,#0x04
      0001A1 26               [12]  423 	add	a,@r0
      0001A2 FE               [12]  424 	mov	r6,a
      0001A3 E4               [12]  425 	clr	a
      0001A4 08               [12]  426 	inc	r0
      0001A5 36               [12]  427 	addc	a,@r0
      0001A6 FF               [12]  428 	mov	r7,a
      0001A7 E5*00            [12]  429 	mov	a,_bp
      0001A9 24 0A            [12]  430 	add	a,#0x0a
      0001AB F8               [12]  431 	mov	r0,a
      0001AC A6 06            [24]  432 	mov	@r0,ar6
      0001AE 08               [12]  433 	inc	r0
      0001AF A6 07            [24]  434 	mov	@r0,ar7
      0001B1 02r02r80         [24]  435 	ljmp	00115$
      0001B4                        436 00104$:
                                    437 ;	_realloc.c:128: ret = malloc(size - HEADER_SIZE);
      0001B4 E5*00            [12]  438 	mov	a,_bp
      0001B6 24 FB            [12]  439 	add	a,#0xfb
      0001B8 F8               [12]  440 	mov	r0,a
      0001B9 E6               [12]  441 	mov	a,@r0
      0001BA 24 FC            [12]  442 	add	a,#0xFC
      0001BC FE               [12]  443 	mov	r6,a
      0001BD 08               [12]  444 	inc	r0
      0001BE E6               [12]  445 	mov	a,@r0
      0001BF 34 FF            [12]  446 	addc	a,#0xFF
      0001C1 FF               [12]  447 	mov	r7,a
      0001C2 8E 82            [24]  448 	mov	dpl,r6
      0001C4 8F 83            [24]  449 	mov	dph,r7
      0001C6 78r00            [12]  450 	mov	r0,#_malloc
      0001C8 79s00            [12]  451 	mov	r1,#(_malloc >> 8)
      0001CA 7As00            [12]  452 	mov	r2,#(_malloc >> 16)
      0001CC 12r00r00         [24]  453 	lcall	__sdcc_banked_call
      0001CF AE 82            [24]  454 	mov	r6,dpl
      0001D1 AF 83            [24]  455 	mov	r7,dph
      0001D3 E5*00            [12]  456 	mov	a,_bp
      0001D5 24 0A            [12]  457 	add	a,#0x0a
      0001D7 F8               [12]  458 	mov	r0,a
      0001D8 A6 06            [24]  459 	mov	@r0,ar6
      0001DA 08               [12]  460 	inc	r0
      0001DB A6 07            [24]  461 	mov	@r0,ar7
                                    462 ;	_realloc.c:129: if (ret)
      0001DD E5*00            [12]  463 	mov	a,_bp
      0001DF 24 0A            [12]  464 	add	a,#0x0a
      0001E1 F8               [12]  465 	mov	r0,a
      0001E2 E6               [12]  466 	mov	a,@r0
      0001E3 08               [12]  467 	inc	r0
      0001E4 46               [12]  468 	orl	a,@r0
      0001E5 70 03            [24]  469 	jnz	00142$
      0001E7 02r02r80         [24]  470 	ljmp	00115$
      0001EA                        471 00142$:
                                    472 ;	_realloc.c:131: memcpy(ret, MEM(pthis), pthis->len - HEADER_SIZE);
      0001EA E5*00            [12]  473 	mov	a,_bp
      0001EC 24 06            [12]  474 	add	a,#0x06
      0001EE F8               [12]  475 	mov	r0,a
      0001EF 86 82            [24]  476 	mov	dpl,@r0
      0001F1 08               [12]  477 	inc	r0
      0001F2 86 83            [24]  478 	mov	dph,@r0
      0001F4 A3               [24]  479 	inc	dptr
      0001F5 A3               [24]  480 	inc	dptr
      0001F6 E0               [24]  481 	movx	a,@dptr
      0001F7 FE               [12]  482 	mov	r6,a
      0001F8 A3               [24]  483 	inc	dptr
      0001F9 E0               [24]  484 	movx	a,@dptr
      0001FA FF               [12]  485 	mov	r7,a
      0001FB A8*00            [24]  486 	mov	r0,_bp
      0001FD 08               [12]  487 	inc	r0
      0001FE EE               [12]  488 	mov	a,r6
      0001FF 24 FC            [12]  489 	add	a,#0xFC
      000201 F6               [12]  490 	mov	@r0,a
      000202 EF               [12]  491 	mov	a,r7
      000203 34 FF            [12]  492 	addc	a,#0xFF
      000205 08               [12]  493 	inc	r0
      000206 F6               [12]  494 	mov	@r0,a
      000207 E5*00            [12]  495 	mov	a,_bp
      000209 24 06            [12]  496 	add	a,#0x06
      00020B F8               [12]  497 	mov	r0,a
      00020C 74 04            [12]  498 	mov	a,#0x04
      00020E 26               [12]  499 	add	a,@r0
      00020F FC               [12]  500 	mov	r4,a
      000210 E4               [12]  501 	clr	a
      000211 08               [12]  502 	inc	r0
      000212 36               [12]  503 	addc	a,@r0
      000213 FD               [12]  504 	mov	r5,a
      000214 7B 00            [12]  505 	mov	r3,#0x00
      000216 E5*00            [12]  506 	mov	a,_bp
      000218 24 0A            [12]  507 	add	a,#0x0a
      00021A F8               [12]  508 	mov	r0,a
      00021B 86 02            [24]  509 	mov	ar2,@r0
      00021D 08               [12]  510 	inc	r0
      00021E 86 06            [24]  511 	mov	ar6,@r0
      000220 7F 00            [12]  512 	mov	r7,#0x00
      000222 A8*00            [24]  513 	mov	r0,_bp
      000224 08               [12]  514 	inc	r0
      000225 E6               [12]  515 	mov	a,@r0
      000226 C0 E0            [24]  516 	push	acc
      000228 08               [12]  517 	inc	r0
      000229 E6               [12]  518 	mov	a,@r0
      00022A C0 E0            [24]  519 	push	acc
      00022C C0 04            [24]  520 	push	ar4
      00022E C0 05            [24]  521 	push	ar5
      000230 C0 03            [24]  522 	push	ar3
      000232 8A 82            [24]  523 	mov	dpl,r2
      000234 8E 83            [24]  524 	mov	dph,r6
      000236 8F F0            [24]  525 	mov	b,r7
      000238 78r00            [12]  526 	mov	r0,#_memcpy
      00023A 79s00            [12]  527 	mov	r1,#(_memcpy >> 8)
      00023C 7As00            [12]  528 	mov	r2,#(_memcpy >> 16)
      00023E 12r00r00         [24]  529 	lcall	__sdcc_banked_call
      000241 E5 81            [12]  530 	mov	a,sp
      000243 24 FB            [12]  531 	add	a,#0xfb
      000245 F5 81            [12]  532 	mov	sp,a
                                    533 ;	_realloc.c:132: free(p);
      000247 E5*00            [12]  534 	mov	a,_bp
      000249 24 03            [12]  535 	add	a,#0x03
      00024B F8               [12]  536 	mov	r0,a
      00024C 86 82            [24]  537 	mov	dpl,@r0
      00024E 08               [12]  538 	inc	r0
      00024F 86 83            [24]  539 	mov	dph,@r0
      000251 08               [12]  540 	inc	r0
      000252 86 F0            [24]  541 	mov	b,@r0
      000254 78r00            [12]  542 	mov	r0,#_free
      000256 79s00            [12]  543 	mov	r1,#(_free >> 8)
      000258 7As00            [12]  544 	mov	r2,#(_free >> 16)
      00025A 12r00r00         [24]  545 	lcall	__sdcc_banked_call
      00025D 80 21            [24]  546 	sjmp	00115$
      00025F                        547 00114$:
                                    548 ;	_realloc.c:140: ret = malloc(size);
      00025F E5*00            [12]  549 	mov	a,_bp
      000261 24 FB            [12]  550 	add	a,#0xfb
      000263 F8               [12]  551 	mov	r0,a
      000264 86 82            [24]  552 	mov	dpl,@r0
      000266 08               [12]  553 	inc	r0
      000267 86 83            [24]  554 	mov	dph,@r0
      000269 78r00            [12]  555 	mov	r0,#_malloc
      00026B 79s00            [12]  556 	mov	r1,#(_malloc >> 8)
      00026D 7As00            [12]  557 	mov	r2,#(_malloc >> 16)
      00026F 12r00r00         [24]  558 	lcall	__sdcc_banked_call
      000272 AE 82            [24]  559 	mov	r6,dpl
      000274 AF 83            [24]  560 	mov	r7,dph
      000276 E5*00            [12]  561 	mov	a,_bp
      000278 24 0A            [12]  562 	add	a,#0x0a
      00027A F8               [12]  563 	mov	r0,a
      00027B A6 06            [24]  564 	mov	@r0,ar6
      00027D 08               [12]  565 	inc	r0
      00027E A6 07            [24]  566 	mov	@r0,ar7
      000280                        567 00115$:
      000280 D0 D0            [24]  568 	pop	psw
      000282 92 AF            [24]  569 	mov	ea,c
                                    570 ;	_realloc.c:143: return ret;
      000284 E5*00            [12]  571 	mov	a,_bp
      000286 24 0A            [12]  572 	add	a,#0x0a
      000288 F8               [12]  573 	mov	r0,a
      000289 86 82            [24]  574 	mov	dpl,@r0
      00028B 08               [12]  575 	inc	r0
      00028C 86 83            [24]  576 	mov	dph,@r0
      00028E 85*00 81         [24]  577 	mov	sp,_bp
      000291 D0*00            [24]  578 	pop	_bp
      000293 02r00r00         [24]  579 	ljmp	__sdcc_banked_ret
                                    580 	.area CSEG    (CODE)
                                    581 	.area CONST   (CODE)
                                    582 	.area XINIT   (CODE)
                                    583 	.area CABS    (ABS,CODE)
