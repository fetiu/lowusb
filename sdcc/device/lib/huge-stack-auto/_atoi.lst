                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:18 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _atoi
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'atoi'
                                     92 ;------------------------------------------------------------
                                     93 ;s                         Allocated to stack - _bp +4
                                     94 ;rv                        Allocated to registers r3 r4 
                                     95 ;sign                      Allocated to registers r5 
                                     96 ;sloc0                     Allocated to stack - _bp +7
                                     97 ;sloc1                     Allocated to stack - _bp +1
                                     98 ;------------------------------------------------------------
                                     99 ;	_atoi.c:29: int atoi(const char * s)
                                    100 ;	-----------------------------------------
                                    101 ;	 function atoi
                                    102 ;	-----------------------------------------
      000000                        103 _atoi:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 E5 81            [12]  113 	mov	a,sp
      000004 F5*00            [12]  114 	mov	_bp,a
      000006 24 06            [12]  115 	add	a,#0x06
      000008 F5 81            [12]  116 	mov	sp,a
      00000A C8               [12]  117 	xch	a,r0
      00000B E5*00            [12]  118 	mov	a,_bp
      00000D 24 04            [12]  119 	add	a,#0x04
      00000F C8               [12]  120 	xch	a,r0
      000010 A6 82            [24]  121 	mov	@r0,dpl
      000012 08               [12]  122 	inc	r0
      000013 A6 83            [24]  123 	mov	@r0,dph
      000015 08               [12]  124 	inc	r0
      000016 A6 F0            [24]  125 	mov	@r0,b
                                    126 ;	_atoi.c:31: register int rv=0; 
                                    127 ;	_atoi.c:35: while (*s) {
      000018 E4               [12]  128 	clr	a
      000019 FB               [12]  129 	mov	r3,a
      00001A FC               [12]  130 	mov	r4,a
      00001B E5*00            [12]  131 	mov	a,_bp
      00001D 24 04            [12]  132 	add	a,#0x04
      00001F F8               [12]  133 	mov	r0,a
      000020 86 02            [24]  134 	mov	ar2,@r0
      000022 08               [12]  135 	inc	r0
      000023 86 06            [24]  136 	mov	ar6,@r0
      000025 08               [12]  137 	inc	r0
      000026 86 07            [24]  138 	mov	ar7,@r0
      000028                        139 00107$:
      000028 8A 82            [24]  140 	mov	dpl,r2
      00002A 8E 83            [24]  141 	mov	dph,r6
      00002C 8F F0            [24]  142 	mov	b,r7
      00002E 12r00r00         [24]  143 	lcall	__gptrget
      000031 FD               [12]  144 	mov	r5,a
      000032 60 2E            [24]  145 	jz	00133$
                                    146 ;	_atoi.c:36: if (*s <= '9' && *s >= '0')
      000034 C3               [12]  147 	clr	c
      000035 74 B9            [12]  148 	mov	a,#(0x39 ^ 0x80)
      000037 8D F0            [24]  149 	mov	b,r5
      000039 63 F0 80         [24]  150 	xrl	b,#0x80
      00003C 95 F0            [12]  151 	subb	a,b
      00003E 40 07            [24]  152 	jc	00102$
      000040 ED               [12]  153 	mov	a,r5
      000041 64 80            [12]  154 	xrl	a,#0x80
      000043 94 B0            [12]  155 	subb	a,#0xb0
      000045 50 1B            [24]  156 	jnc	00133$
                                    157 ;	_atoi.c:37: break;
      000047                        158 00102$:
                                    159 ;	_atoi.c:38: if (*s == '-' || *s == '+') 
      000047 8A 82            [24]  160 	mov	dpl,r2
      000049 8E 83            [24]  161 	mov	dph,r6
      00004B 8F F0            [24]  162 	mov	b,r7
      00004D 12r00r00         [24]  163 	lcall	__gptrget
      000050 FD               [12]  164 	mov	r5,a
      000051 BD 2D 02         [24]  165 	cjne	r5,#0x2D,00160$
      000054 80 0C            [24]  166 	sjmp	00133$
      000056                        167 00160$:
      000056 BD 2B 02         [24]  168 	cjne	r5,#0x2B,00161$
      000059 80 07            [24]  169 	sjmp	00133$
      00005B                        170 00161$:
                                    171 ;	_atoi.c:40: s++;
      00005B 0A               [12]  172 	inc	r2
      00005C BA 00 C9         [24]  173 	cjne	r2,#0x00,00107$
      00005F 0E               [12]  174 	inc	r6
      000060 80 C6            [24]  175 	sjmp	00107$
      000062                        176 00133$:
      000062 E5*00            [12]  177 	mov	a,_bp
      000064 24 04            [12]  178 	add	a,#0x04
      000066 F8               [12]  179 	mov	r0,a
      000067 A6 02            [24]  180 	mov	@r0,ar2
      000069 08               [12]  181 	inc	r0
      00006A A6 06            [24]  182 	mov	@r0,ar6
      00006C 08               [12]  183 	inc	r0
      00006D A6 07            [24]  184 	mov	@r0,ar7
                                    185 ;	_atoi.c:43: sign = (*s == '-');
      00006F 8A 82            [24]  186 	mov	dpl,r2
      000071 8E 83            [24]  187 	mov	dph,r6
      000073 8F F0            [24]  188 	mov	b,r7
      000075 12r00r00         [24]  189 	lcall	__gptrget
      000078 FF               [12]  190 	mov	r7,a
      000079 E4               [12]  191 	clr	a
      00007A BF 2D 01         [24]  192 	cjne	r7,#0x2D,00163$
      00007D 04               [12]  193 	inc	a
      00007E                        194 00163$:
                                    195 ;	_atoi.c:44: if (*s == '-' || *s == '+') s++;
      00007E FE               [12]  196 	mov	r6,a
      00007F FD               [12]  197 	mov	r5,a
      000080 70 03            [24]  198 	jnz	00110$
      000082 BF 2B 0B         [24]  199 	cjne	r7,#0x2B,00131$
      000085                        200 00110$:
      000085 E5*00            [12]  201 	mov	a,_bp
      000087 24 04            [12]  202 	add	a,#0x04
      000089 F8               [12]  203 	mov	r0,a
      00008A 06               [12]  204 	inc	@r0
      00008B B6 00 02         [24]  205 	cjne	@r0,#0x00,00168$
      00008E 08               [12]  206 	inc	r0
      00008F 06               [12]  207 	inc	@r0
      000090                        208 00168$:
                                    209 ;	_atoi.c:46: while (*s && *s >= '0' && *s <= '9') {
      000090                        210 00131$:
      000090 E5*00            [12]  211 	mov	a,_bp
      000092 24 04            [12]  212 	add	a,#0x04
      000094 F8               [12]  213 	mov	r0,a
      000095 A9*00            [24]  214 	mov	r1,_bp
      000097 09               [12]  215 	inc	r1
      000098 E6               [12]  216 	mov	a,@r0
      000099 F7               [12]  217 	mov	@r1,a
      00009A 08               [12]  218 	inc	r0
      00009B 09               [12]  219 	inc	r1
      00009C E6               [12]  220 	mov	a,@r0
      00009D F7               [12]  221 	mov	@r1,a
      00009E 08               [12]  222 	inc	r0
      00009F 09               [12]  223 	inc	r1
      0000A0 E6               [12]  224 	mov	a,@r0
      0000A1 F7               [12]  225 	mov	@r1,a
      0000A2                        226 00115$:
      0000A2 A8*00            [24]  227 	mov	r0,_bp
      0000A4 08               [12]  228 	inc	r0
      0000A5 86 82            [24]  229 	mov	dpl,@r0
      0000A7 08               [12]  230 	inc	r0
      0000A8 86 83            [24]  231 	mov	dph,@r0
      0000AA 08               [12]  232 	inc	r0
      0000AB 86 F0            [24]  233 	mov	b,@r0
      0000AD 12r00r00         [24]  234 	lcall	__gptrget
      0000B0 FE               [12]  235 	mov	r6,a
      0000B1 60 50            [24]  236 	jz	00117$
      0000B3 C3               [12]  237 	clr	c
      0000B4 EE               [12]  238 	mov	a,r6
      0000B5 64 80            [12]  239 	xrl	a,#0x80
      0000B7 94 B0            [12]  240 	subb	a,#0xb0
      0000B9 40 48            [24]  241 	jc	00117$
      0000BB 74 B9            [12]  242 	mov	a,#(0x39 ^ 0x80)
      0000BD 8E F0            [24]  243 	mov	b,r6
      0000BF 63 F0 80         [24]  244 	xrl	b,#0x80
      0000C2 95 F0            [12]  245 	subb	a,b
      0000C4 40 3D            [24]  246 	jc	00117$
                                    247 ;	_atoi.c:47: rv = (rv * 10) + (*s - '0');
      0000C6 C0 05            [24]  248 	push	ar5
      0000C8 C0 06            [24]  249 	push	ar6
      0000CA C0 03            [24]  250 	push	ar3
      0000CC C0 04            [24]  251 	push	ar4
      0000CE 90 00 0A         [24]  252 	mov	dptr,#0x000A
      0000D1 12r00r00         [24]  253 	lcall	__mulint
      0000D4 AD 82            [24]  254 	mov	r5,dpl
      0000D6 AF 83            [24]  255 	mov	r7,dph
      0000D8 15 81            [12]  256 	dec	sp
      0000DA 15 81            [12]  257 	dec	sp
      0000DC D0 06            [24]  258 	pop	ar6
      0000DE EE               [12]  259 	mov	a,r6
      0000DF FA               [12]  260 	mov	r2,a
      0000E0 33               [12]  261 	rlc	a
      0000E1 95 E0            [12]  262 	subb	a,acc
      0000E3 FE               [12]  263 	mov	r6,a
      0000E4 EA               [12]  264 	mov	a,r2
      0000E5 24 D0            [12]  265 	add	a,#0xD0
      0000E7 FA               [12]  266 	mov	r2,a
      0000E8 EE               [12]  267 	mov	a,r6
      0000E9 34 FF            [12]  268 	addc	a,#0xFF
      0000EB FE               [12]  269 	mov	r6,a
      0000EC EA               [12]  270 	mov	a,r2
      0000ED 2D               [12]  271 	add	a,r5
      0000EE FD               [12]  272 	mov	r5,a
      0000EF EE               [12]  273 	mov	a,r6
      0000F0 3F               [12]  274 	addc	a,r7
      0000F1 FF               [12]  275 	mov	r7,a
      0000F2 8D 03            [24]  276 	mov	ar3,r5
      0000F4 8F 04            [24]  277 	mov	ar4,r7
                                    278 ;	_atoi.c:48: s++;
      0000F6 A8*00            [24]  279 	mov	r0,_bp
      0000F8 08               [12]  280 	inc	r0
      0000F9 06               [12]  281 	inc	@r0
      0000FA B6 00 02         [24]  282 	cjne	@r0,#0x00,00172$
      0000FD 08               [12]  283 	inc	r0
      0000FE 06               [12]  284 	inc	@r0
      0000FF                        285 00172$:
      0000FF D0 05            [24]  286 	pop	ar5
      000101 80 9F            [24]  287 	sjmp	00115$
      000103                        288 00117$:
                                    289 ;	_atoi.c:51: return (sign ? -rv : rv);
      000103 ED               [12]  290 	mov	a,r5
      000104 60 09            [24]  291 	jz	00120$
      000106 C3               [12]  292 	clr	c
      000107 E4               [12]  293 	clr	a
      000108 9B               [12]  294 	subb	a,r3
      000109 FE               [12]  295 	mov	r6,a
      00010A E4               [12]  296 	clr	a
      00010B 9C               [12]  297 	subb	a,r4
      00010C FF               [12]  298 	mov	r7,a
      00010D 80 04            [24]  299 	sjmp	00121$
      00010F                        300 00120$:
      00010F 8B 06            [24]  301 	mov	ar6,r3
      000111 8C 07            [24]  302 	mov	ar7,r4
      000113                        303 00121$:
      000113 8E 82            [24]  304 	mov	dpl,r6
      000115 8F 83            [24]  305 	mov	dph,r7
      000117 85*00 81         [24]  306 	mov	sp,_bp
      00011A D0*00            [24]  307 	pop	_bp
      00011C 02r00r00         [24]  308 	ljmp	__sdcc_banked_ret
                                    309 	.area CSEG    (CODE)
                                    310 	.area CONST   (CODE)
                                    311 	.area XINIT   (CODE)
                                    312 	.area CABS    (ABS,CODE)
