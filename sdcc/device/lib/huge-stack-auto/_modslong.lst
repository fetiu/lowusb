                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:15 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _modslong
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __modslong
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function '_modslong'
                                     92 ;------------------------------------------------------------
                                     93 ;b                         Allocated to stack - _bp -6
                                     94 ;a                         Allocated to registers r4 r5 r6 r7 
                                     95 ;r                         Allocated to stack - _bp +9
                                     96 ;sloc0                     Allocated to stack - _bp +1
                                     97 ;sloc1                     Allocated to stack - _bp +5
                                     98 ;------------------------------------------------------------
                                     99 ;	_modslong.c:259: _modslong (long a, long b)
                                    100 ;	-----------------------------------------
                                    101 ;	 function _modslong
                                    102 ;	-----------------------------------------
      000000                        103 __modslong:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 85 81*00         [24]  113 	mov	_bp,sp
      000005 AC 82            [24]  114 	mov	r4,dpl
      000007 AD 83            [24]  115 	mov	r5,dph
      000009 AE F0            [24]  116 	mov	r6,b
      00000B FF               [12]  117 	mov	r7,a
      00000C E5 81            [12]  118 	mov	a,sp
      00000E 24 0C            [12]  119 	add	a,#0x0C
      000010 F5 81            [12]  120 	mov	sp,a
                                    121 ;	_modslong.c:263: r = (unsigned long)(a < 0 ? -a : a) % (unsigned long)(b < 0 ? -b : b);
      000012 EF               [12]  122 	mov	a,r7
      000013 33               [12]  123 	rlc	a
      000014 E4               [12]  124 	clr	a
      000015 33               [12]  125 	rlc	a
      000016 FB               [12]  126 	mov	r3,a
      000017 60 15            [24]  127 	jz	00106$
      000019 A8*00            [24]  128 	mov	r0,_bp
      00001B 08               [12]  129 	inc	r0
      00001C C3               [12]  130 	clr	c
      00001D E4               [12]  131 	clr	a
      00001E 9C               [12]  132 	subb	a,r4
      00001F F6               [12]  133 	mov	@r0,a
      000020 E4               [12]  134 	clr	a
      000021 9D               [12]  135 	subb	a,r5
      000022 08               [12]  136 	inc	r0
      000023 F6               [12]  137 	mov	@r0,a
      000024 E4               [12]  138 	clr	a
      000025 9E               [12]  139 	subb	a,r6
      000026 08               [12]  140 	inc	r0
      000027 F6               [12]  141 	mov	@r0,a
      000028 E4               [12]  142 	clr	a
      000029 9F               [12]  143 	subb	a,r7
      00002A 08               [12]  144 	inc	r0
      00002B F6               [12]  145 	mov	@r0,a
      00002C 80 0E            [24]  146 	sjmp	00107$
      00002E                        147 00106$:
      00002E A8*00            [24]  148 	mov	r0,_bp
      000030 08               [12]  149 	inc	r0
      000031 A6 04            [24]  150 	mov	@r0,ar4
      000033 08               [12]  151 	inc	r0
      000034 A6 05            [24]  152 	mov	@r0,ar5
      000036 08               [12]  153 	inc	r0
      000037 A6 06            [24]  154 	mov	@r0,ar6
      000039 08               [12]  155 	inc	r0
      00003A A6 07            [24]  156 	mov	@r0,ar7
      00003C                        157 00107$:
      00003C A8*00            [24]  158 	mov	r0,_bp
      00003E 08               [12]  159 	inc	r0
      00003F E5*00            [12]  160 	mov	a,_bp
      000041 24 05            [12]  161 	add	a,#0x05
      000043 F9               [12]  162 	mov	r1,a
      000044 E6               [12]  163 	mov	a,@r0
      000045 F7               [12]  164 	mov	@r1,a
      000046 08               [12]  165 	inc	r0
      000047 09               [12]  166 	inc	r1
      000048 E6               [12]  167 	mov	a,@r0
      000049 F7               [12]  168 	mov	@r1,a
      00004A 08               [12]  169 	inc	r0
      00004B 09               [12]  170 	inc	r1
      00004C E6               [12]  171 	mov	a,@r0
      00004D F7               [12]  172 	mov	@r1,a
      00004E 08               [12]  173 	inc	r0
      00004F 09               [12]  174 	inc	r1
      000050 E6               [12]  175 	mov	a,@r0
      000051 F7               [12]  176 	mov	@r1,a
      000052 E5*00            [12]  177 	mov	a,_bp
      000054 24 FA            [12]  178 	add	a,#0xfa
      000056 F8               [12]  179 	mov	r0,a
      000057 08               [12]  180 	inc	r0
      000058 08               [12]  181 	inc	r0
      000059 08               [12]  182 	inc	r0
      00005A E6               [12]  183 	mov	a,@r0
      00005B 30 E7 17         [24]  184 	jnb	acc.7,00108$
      00005E E5*00            [12]  185 	mov	a,_bp
      000060 24 FA            [12]  186 	add	a,#0xfa
      000062 F8               [12]  187 	mov	r0,a
      000063 C3               [12]  188 	clr	c
      000064 E4               [12]  189 	clr	a
      000065 96               [12]  190 	subb	a,@r0
      000066 FC               [12]  191 	mov	r4,a
      000067 08               [12]  192 	inc	r0
      000068 E4               [12]  193 	clr	a
      000069 96               [12]  194 	subb	a,@r0
      00006A FD               [12]  195 	mov	r5,a
      00006B 08               [12]  196 	inc	r0
      00006C E4               [12]  197 	clr	a
      00006D 96               [12]  198 	subb	a,@r0
      00006E FE               [12]  199 	mov	r6,a
      00006F 08               [12]  200 	inc	r0
      000070 E4               [12]  201 	clr	a
      000071 96               [12]  202 	subb	a,@r0
      000072 FF               [12]  203 	mov	r7,a
      000073 80 10            [24]  204 	sjmp	00109$
      000075                        205 00108$:
      000075 E5*00            [12]  206 	mov	a,_bp
      000077 24 FA            [12]  207 	add	a,#0xfa
      000079 F8               [12]  208 	mov	r0,a
      00007A 86 04            [24]  209 	mov	ar4,@r0
      00007C 08               [12]  210 	inc	r0
      00007D 86 05            [24]  211 	mov	ar5,@r0
      00007F 08               [12]  212 	inc	r0
      000080 86 06            [24]  213 	mov	ar6,@r0
      000082 08               [12]  214 	inc	r0
      000083 86 07            [24]  215 	mov	ar7,@r0
      000085                        216 00109$:
      000085 8C 02            [24]  217 	mov	ar2,r4
      000087 C0 03            [24]  218 	push	ar3
      000089 C0 02            [24]  219 	push	ar2
      00008B C0 05            [24]  220 	push	ar5
      00008D C0 06            [24]  221 	push	ar6
      00008F C0 07            [24]  222 	push	ar7
      000091 E5*00            [12]  223 	mov	a,_bp
      000093 24 05            [12]  224 	add	a,#0x05
      000095 F8               [12]  225 	mov	r0,a
      000096 86 82            [24]  226 	mov	dpl,@r0
      000098 08               [12]  227 	inc	r0
      000099 86 83            [24]  228 	mov	dph,@r0
      00009B 08               [12]  229 	inc	r0
      00009C 86 F0            [24]  230 	mov	b,@r0
      00009E 08               [12]  231 	inc	r0
      00009F E6               [12]  232 	mov	a,@r0
      0000A0 12r00r00         [24]  233 	lcall	__modulong
      0000A3 AC 82            [24]  234 	mov	r4,dpl
      0000A5 AD 83            [24]  235 	mov	r5,dph
      0000A7 AE F0            [24]  236 	mov	r6,b
      0000A9 FF               [12]  237 	mov	r7,a
      0000AA E5 81            [12]  238 	mov	a,sp
      0000AC 24 FC            [12]  239 	add	a,#0xfc
      0000AE F5 81            [12]  240 	mov	sp,a
      0000B0 D0 03            [24]  241 	pop	ar3
      0000B2 E5*00            [12]  242 	mov	a,_bp
      0000B4 24 09            [12]  243 	add	a,#0x09
      0000B6 F8               [12]  244 	mov	r0,a
      0000B7 A6 04            [24]  245 	mov	@r0,ar4
      0000B9 08               [12]  246 	inc	r0
      0000BA A6 05            [24]  247 	mov	@r0,ar5
      0000BC 08               [12]  248 	inc	r0
      0000BD A6 06            [24]  249 	mov	@r0,ar6
      0000BF 08               [12]  250 	inc	r0
      0000C0 A6 07            [24]  251 	mov	@r0,ar7
                                    252 ;	_modslong.c:265: if (a < 0)
      0000C2 EB               [12]  253 	mov	a,r3
      0000C3 60 1D            [24]  254 	jz	00102$
                                    255 ;	_modslong.c:266: return -r;
      0000C5 E5*00            [12]  256 	mov	a,_bp
      0000C7 24 09            [12]  257 	add	a,#0x09
      0000C9 F8               [12]  258 	mov	r0,a
      0000CA C3               [12]  259 	clr	c
      0000CB E4               [12]  260 	clr	a
      0000CC 96               [12]  261 	subb	a,@r0
      0000CD FA               [12]  262 	mov	r2,a
      0000CE 08               [12]  263 	inc	r0
      0000CF E4               [12]  264 	clr	a
      0000D0 96               [12]  265 	subb	a,@r0
      0000D1 FB               [12]  266 	mov	r3,a
      0000D2 08               [12]  267 	inc	r0
      0000D3 E4               [12]  268 	clr	a
      0000D4 96               [12]  269 	subb	a,@r0
      0000D5 FE               [12]  270 	mov	r6,a
      0000D6 08               [12]  271 	inc	r0
      0000D7 E4               [12]  272 	clr	a
      0000D8 96               [12]  273 	subb	a,@r0
      0000D9 FF               [12]  274 	mov	r7,a
      0000DA 8A 82            [24]  275 	mov	dpl,r2
      0000DC 8B 83            [24]  276 	mov	dph,r3
      0000DE 8E F0            [24]  277 	mov	b,r6
      0000E0 80 0F            [24]  278 	sjmp	00104$
      0000E2                        279 00102$:
                                    280 ;	_modslong.c:268: return r;
      0000E2 E5*00            [12]  281 	mov	a,_bp
      0000E4 24 09            [12]  282 	add	a,#0x09
      0000E6 F8               [12]  283 	mov	r0,a
      0000E7 86 82            [24]  284 	mov	dpl,@r0
      0000E9 08               [12]  285 	inc	r0
      0000EA 86 83            [24]  286 	mov	dph,@r0
      0000EC 08               [12]  287 	inc	r0
      0000ED 86 F0            [24]  288 	mov	b,@r0
      0000EF 08               [12]  289 	inc	r0
      0000F0 E6               [12]  290 	mov	a,@r0
      0000F1                        291 00104$:
      0000F1 85*00 81         [24]  292 	mov	sp,_bp
      0000F4 D0*00            [24]  293 	pop	_bp
      0000F6 22               [24]  294 	ret
                                    295 	.area CSEG    (CODE)
                                    296 	.area CONST   (CODE)
                                    297 	.area XINIT   (CODE)
                                    298 	.area CABS    (ABS,CODE)
