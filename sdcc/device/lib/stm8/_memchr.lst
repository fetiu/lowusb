                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:40:58 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _memchr
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memchr
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_memchr.c: 31: void *memchr(const void *s, int c, size_t n)
                                     42 ;	-----------------------------------------
                                     43 ;	 function memchr
                                     44 ;	-----------------------------------------
      000000                         45 _memchr:
      000000 52 04            [ 2]   46 	sub	sp, #4
                                     47 ;	../_memchr.c: 33: unsigned char *p = (unsigned char *)s;
      000002 16 07            [ 2]   48 	ldw	y, (0x07, sp)
                                     49 ;	../_memchr.c: 34: unsigned char *end = p + n;
      000004 93               [ 1]   50 	ldw	x, y
      000005 72 FB 0B         [ 2]   51 	addw	x, (0x0b, sp)
      000008 1F 01            [ 2]   52 	ldw	(0x01, sp), x
                                     53 ;	../_memchr.c: 38: return(0);
      00000A 93               [ 1]   54 	ldw	x, y
      00000B                         55 00105$:
                                     56 ;	../_memchr.c: 35: for(; p != end; p++)
      00000B 13 01            [ 2]   57 	cpw	x, (0x01, sp)
      00000D 27 15            [ 1]   58 	jreq	00103$
                                     59 ;	../_memchr.c: 36: if(*p == c)
      00000F F6               [ 1]   60 	ld	a, (x)
      000010 0F 03            [ 1]   61 	clr	(0x03, sp)
      000012 89               [ 2]   62 	pushw	x
      000013 97               [ 1]   63 	ld	xl, a
      000014 7B 05            [ 1]   64 	ld	a, (0x05, sp)
      000016 95               [ 1]   65 	ld	xh, a
      000017 13 0B            [ 2]   66 	cpw	x, (0x0b, sp)
      000019 85               [ 2]   67 	popw	x
      00001A 26 03            [ 1]   68 	jrne	00106$
                                     69 ;	../_memchr.c: 37: return((void *)p);
      00001C 93               [ 1]   70 	ldw	x, y
      00001D 20 06            [ 2]   71 	jra	00107$
      00001F                         72 00106$:
                                     73 ;	../_memchr.c: 35: for(; p != end; p++)
      00001F 5C               [ 2]   74 	incw	x
      000020 90 93            [ 1]   75 	ldw	y, x
      000022 20 E7            [ 2]   76 	jra	00105$
      000024                         77 00103$:
                                     78 ;	../_memchr.c: 38: return(0);
      000024 5F               [ 1]   79 	clrw	x
      000025                         80 00107$:
      000025 5B 04            [ 2]   81 	addw	sp, #4
      000027 81               [ 4]   82 	ret
                                     83 	.area CODE
                                     84 	.area INITIALIZER
                                     85 	.area CABS (ABS)
