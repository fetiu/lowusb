                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:40:36 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module logf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _frexpf
                                     13 	.globl _logf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../logf.c: 216: float logf(float x) _FLOAT_FUNC_REENTRANT
                                     43 ;	-----------------------------------------
                                     44 ;	 function logf
                                     45 ;	-----------------------------------------
      000000                         46 _logf:
      000000 52 32            [ 2]   47 	sub	sp, #50
                                     48 ;	../logf.c: 226: if (x<=0.0)
      000002 5F               [ 1]   49 	clrw	x
      000003 89               [ 2]   50 	pushw	x
      000004 5F               [ 1]   51 	clrw	x
      000005 89               [ 2]   52 	pushw	x
      000006 1E 3B            [ 2]   53 	ldw	x, (0x3b, sp)
      000008 89               [ 2]   54 	pushw	x
      000009 1E 3B            [ 2]   55 	ldw	x, (0x3b, sp)
      00000B 89               [ 2]   56 	pushw	x
      00000C CDr00r00         [ 4]   57 	call	___fsgt
      00000F 5B 08            [ 2]   58 	addw	sp, #8
      000011 6B 32            [ 1]   59 	ld	(0x32, sp), a
      000013 0D 32            [ 1]   60 	tnz	(0x32, sp)
      000015 26 0C            [ 1]   61 	jrne	00102$
                                     62 ;	../logf.c: 228: errno=EDOM;
      000017 AE 00 21         [ 2]   63 	ldw	x, #0x0021
      00001A CFu00u00         [ 2]   64 	ldw	_errno+0, x
                                     65 ;	../logf.c: 229: return 0.0;
      00001D 5F               [ 1]   66 	clrw	x
      00001E 90 5F            [ 1]   67 	clrw	y
      000020 CCr01rA8         [ 2]   68 	jp	00106$
      000023                         69 00102$:
                                     70 ;	../logf.c: 231: f=frexpf(x, &n);
      000023 96               [ 1]   71 	ldw	x, sp
      000024 5C               [ 2]   72 	incw	x
      000025 89               [ 2]   73 	pushw	x
      000026 1E 39            [ 2]   74 	ldw	x, (0x39, sp)
      000028 89               [ 2]   75 	pushw	x
      000029 1E 39            [ 2]   76 	ldw	x, (0x39, sp)
      00002B 89               [ 2]   77 	pushw	x
      00002C CDr00r00         [ 4]   78 	call	_frexpf
      00002F 5B 06            [ 2]   79 	addw	sp, #6
      000031 1F 15            [ 2]   80 	ldw	(0x15, sp), x
      000033 17 13            [ 2]   81 	ldw	(0x13, sp), y
                                     82 ;	../logf.c: 232: znum=f-0.5;
      000035 5F               [ 1]   83 	clrw	x
      000036 89               [ 2]   84 	pushw	x
      000037 4B 00            [ 1]   85 	push	#0x00
      000039 4B 3F            [ 1]   86 	push	#0x3f
      00003B 1E 19            [ 2]   87 	ldw	x, (0x19, sp)
      00003D 89               [ 2]   88 	pushw	x
      00003E 1E 19            [ 2]   89 	ldw	x, (0x19, sp)
      000040 89               [ 2]   90 	pushw	x
      000041 CDr00r00         [ 4]   91 	call	___fssub
      000044 5B 08            [ 2]   92 	addw	sp, #8
      000046 1F 0D            [ 2]   93 	ldw	(0x0d, sp), x
      000048 17 0B            [ 2]   94 	ldw	(0x0b, sp), y
                                     95 ;	../logf.c: 233: if (f>C0)
      00004A 4B F3            [ 1]   96 	push	#0xf3
      00004C 4B 04            [ 1]   97 	push	#0x04
      00004E 4B 35            [ 1]   98 	push	#0x35
      000050 4B 3F            [ 1]   99 	push	#0x3f
      000052 1E 19            [ 2]  100 	ldw	x, (0x19, sp)
      000054 89               [ 2]  101 	pushw	x
      000055 1E 19            [ 2]  102 	ldw	x, (0x19, sp)
      000057 89               [ 2]  103 	pushw	x
      000058 CDr00r00         [ 4]  104 	call	___fsgt
      00005B 5B 08            [ 2]  105 	addw	sp, #8
      00005D 6B 31            [ 1]  106 	ld	(0x31, sp), a
      00005F 0D 31            [ 1]  107 	tnz	(0x31, sp)
      000061 27 3A            [ 1]  108 	jreq	00104$
                                    109 ;	../logf.c: 235: znum-=0.5;
      000063 5F               [ 1]  110 	clrw	x
      000064 89               [ 2]  111 	pushw	x
      000065 4B 00            [ 1]  112 	push	#0x00
      000067 4B 3F            [ 1]  113 	push	#0x3f
      000069 1E 11            [ 2]  114 	ldw	x, (0x11, sp)
      00006B 89               [ 2]  115 	pushw	x
      00006C 1E 11            [ 2]  116 	ldw	x, (0x11, sp)
      00006E 89               [ 2]  117 	pushw	x
      00006F CDr00r00         [ 4]  118 	call	___fssub
      000072 5B 08            [ 2]  119 	addw	sp, #8
      000074 1F 0D            [ 2]  120 	ldw	(0x0d, sp), x
      000076 17 0B            [ 2]  121 	ldw	(0x0b, sp), y
                                    122 ;	../logf.c: 236: zden=(f*0.5)+0.5;
      000078 1E 15            [ 2]  123 	ldw	x, (0x15, sp)
      00007A 89               [ 2]  124 	pushw	x
      00007B 1E 15            [ 2]  125 	ldw	x, (0x15, sp)
      00007D 89               [ 2]  126 	pushw	x
      00007E 5F               [ 1]  127 	clrw	x
      00007F 89               [ 2]  128 	pushw	x
      000080 4B 00            [ 1]  129 	push	#0x00
      000082 4B 3F            [ 1]  130 	push	#0x3f
      000084 CDr00r00         [ 4]  131 	call	___fsmul
      000087 5B 08            [ 2]  132 	addw	sp, #8
      000089 4B 00            [ 1]  133 	push	#0x00
      00008B 4B 00            [ 1]  134 	push	#0x00
      00008D 4B 00            [ 1]  135 	push	#0x00
      00008F 4B 3F            [ 1]  136 	push	#0x3f
      000091 89               [ 2]  137 	pushw	x
      000092 90 89            [ 2]  138 	pushw	y
      000094 CDr00r00         [ 4]  139 	call	___fsadd
      000097 5B 08            [ 2]  140 	addw	sp, #8
      000099 17 2D            [ 2]  141 	ldw	(0x2d, sp), y
      00009B 20 39            [ 2]  142 	jra	00105$
      00009D                        143 00104$:
                                    144 ;	../logf.c: 240: n--;
      00009D 1E 01            [ 2]  145 	ldw	x, (0x01, sp)
      00009F 5A               [ 2]  146 	decw	x
      0000A0 1F 2B            [ 2]  147 	ldw	(0x2b, sp), x
      0000A2 16 2B            [ 2]  148 	ldw	y, (0x2b, sp)
      0000A4 17 01            [ 2]  149 	ldw	(0x01, sp), y
                                    150 ;	../logf.c: 241: zden=znum*0.5+0.5;
      0000A6 1E 0D            [ 2]  151 	ldw	x, (0x0d, sp)
      0000A8 89               [ 2]  152 	pushw	x
      0000A9 1E 0D            [ 2]  153 	ldw	x, (0x0d, sp)
      0000AB 89               [ 2]  154 	pushw	x
      0000AC 5F               [ 1]  155 	clrw	x
      0000AD 89               [ 2]  156 	pushw	x
      0000AE 4B 00            [ 1]  157 	push	#0x00
      0000B0 4B 3F            [ 1]  158 	push	#0x3f
      0000B2 CDr00r00         [ 4]  159 	call	___fsmul
      0000B5 5B 08            [ 2]  160 	addw	sp, #8
      0000B7 1F 29            [ 2]  161 	ldw	(0x29, sp), x
      0000B9 17 27            [ 2]  162 	ldw	(0x27, sp), y
      0000BB 5F               [ 1]  163 	clrw	x
      0000BC 89               [ 2]  164 	pushw	x
      0000BD 4B 00            [ 1]  165 	push	#0x00
      0000BF 4B 3F            [ 1]  166 	push	#0x3f
      0000C1 1E 2D            [ 2]  167 	ldw	x, (0x2d, sp)
      0000C3 89               [ 2]  168 	pushw	x
      0000C4 1E 2D            [ 2]  169 	ldw	x, (0x2d, sp)
      0000C6 89               [ 2]  170 	pushw	x
      0000C7 CDr00r00         [ 4]  171 	call	___fsadd
      0000CA 5B 08            [ 2]  172 	addw	sp, #8
      0000CC 1F 09            [ 2]  173 	ldw	(0x09, sp), x
      0000CE 17 07            [ 2]  174 	ldw	(0x07, sp), y
      0000D0 16 07            [ 2]  175 	ldw	y, (0x07, sp)
      0000D2 17 2D            [ 2]  176 	ldw	(0x2d, sp), y
      0000D4 1E 09            [ 2]  177 	ldw	x, (0x09, sp)
      0000D6                        178 00105$:
                                    179 ;	../logf.c: 243: z=znum/zden;
      0000D6 89               [ 2]  180 	pushw	x
      0000D7 1E 2F            [ 2]  181 	ldw	x, (0x2f, sp)
      0000D9 89               [ 2]  182 	pushw	x
      0000DA 1E 11            [ 2]  183 	ldw	x, (0x11, sp)
      0000DC 89               [ 2]  184 	pushw	x
      0000DD 1E 11            [ 2]  185 	ldw	x, (0x11, sp)
      0000DF 89               [ 2]  186 	pushw	x
      0000E0 CDr00r00         [ 4]  187 	call	___fsdiv
      0000E3 5B 08            [ 2]  188 	addw	sp, #8
      0000E5 1F 11            [ 2]  189 	ldw	(0x11, sp), x
      0000E7 17 0F            [ 2]  190 	ldw	(0x0f, sp), y
                                    191 ;	../logf.c: 244: w=z*z;
      0000E9 1E 11            [ 2]  192 	ldw	x, (0x11, sp)
      0000EB 89               [ 2]  193 	pushw	x
      0000EC 1E 11            [ 2]  194 	ldw	x, (0x11, sp)
      0000EE 89               [ 2]  195 	pushw	x
      0000EF 1E 15            [ 2]  196 	ldw	x, (0x15, sp)
      0000F1 89               [ 2]  197 	pushw	x
      0000F2 1E 15            [ 2]  198 	ldw	x, (0x15, sp)
      0000F4 89               [ 2]  199 	pushw	x
      0000F5 CDr00r00         [ 4]  200 	call	___fsmul
      0000F8 5B 08            [ 2]  201 	addw	sp, #8
                                    202 ;	../logf.c: 246: Rz=z+z*(w*A(w)/B(w));
      0000FA 89               [ 2]  203 	pushw	x
      0000FB 90 89            [ 2]  204 	pushw	y
      0000FD 89               [ 2]  205 	pushw	x
      0000FE 90 89            [ 2]  206 	pushw	y
      000100 4B 3D            [ 1]  207 	push	#0x3d
      000102 4B 7E            [ 1]  208 	push	#0x7e
      000104 4B 0D            [ 1]  209 	push	#0x0d
      000106 4B BF            [ 1]  210 	push	#0xbf
      000108 CDr00r00         [ 4]  211 	call	___fsmul
      00010B 5B 08            [ 2]  212 	addw	sp, #8
      00010D 1F 29            [ 2]  213 	ldw	(0x29, sp), x
      00010F 17 27            [ 2]  214 	ldw	(0x27, sp), y
      000111 90 85            [ 2]  215 	popw	y
      000113 85               [ 2]  216 	popw	x
      000114 4B 3A            [ 1]  217 	push	#0x3a
      000116 4B 3F            [ 1]  218 	push	#0x3f
      000118 4B D4            [ 1]  219 	push	#0xd4
      00011A 4B C0            [ 1]  220 	push	#0xc0
      00011C 89               [ 2]  221 	pushw	x
      00011D 90 89            [ 2]  222 	pushw	y
      00011F CDr00r00         [ 4]  223 	call	___fsadd
      000122 5B 08            [ 2]  224 	addw	sp, #8
      000124 89               [ 2]  225 	pushw	x
      000125 90 89            [ 2]  226 	pushw	y
      000127 1E 29            [ 2]  227 	ldw	x, (0x29, sp)
      000129 89               [ 2]  228 	pushw	x
      00012A 1E 29            [ 2]  229 	ldw	x, (0x29, sp)
      00012C 89               [ 2]  230 	pushw	x
      00012D CDr00r00         [ 4]  231 	call	___fsdiv
      000130 5B 08            [ 2]  232 	addw	sp, #8
      000132 89               [ 2]  233 	pushw	x
      000133 90 89            [ 2]  234 	pushw	y
      000135 1E 15            [ 2]  235 	ldw	x, (0x15, sp)
      000137 89               [ 2]  236 	pushw	x
      000138 1E 15            [ 2]  237 	ldw	x, (0x15, sp)
      00013A 89               [ 2]  238 	pushw	x
      00013B CDr00r00         [ 4]  239 	call	___fsmul
      00013E 5B 08            [ 2]  240 	addw	sp, #8
      000140 89               [ 2]  241 	pushw	x
      000141 90 89            [ 2]  242 	pushw	y
      000143 1E 15            [ 2]  243 	ldw	x, (0x15, sp)
      000145 89               [ 2]  244 	pushw	x
      000146 1E 15            [ 2]  245 	ldw	x, (0x15, sp)
      000148 89               [ 2]  246 	pushw	x
      000149 CDr00r00         [ 4]  247 	call	___fsadd
      00014C 5B 08            [ 2]  248 	addw	sp, #8
      00014E 1F 19            [ 2]  249 	ldw	(0x19, sp), x
      000150 17 17            [ 2]  250 	ldw	(0x17, sp), y
                                    251 ;	../logf.c: 247: xn=n;
      000152 1E 01            [ 2]  252 	ldw	x, (0x01, sp)
      000154 89               [ 2]  253 	pushw	x
      000155 CDr00r00         [ 4]  254 	call	___sint2fs
      000158 5B 02            [ 2]  255 	addw	sp, #2
      00015A 1F 05            [ 2]  256 	ldw	(0x05, sp), x
      00015C 17 03            [ 2]  257 	ldw	(0x03, sp), y
                                    258 ;	../logf.c: 248: return ((xn*C2+Rz)+xn*C1);
      00015E 1E 05            [ 2]  259 	ldw	x, (0x05, sp)
      000160 89               [ 2]  260 	pushw	x
      000161 1E 05            [ 2]  261 	ldw	x, (0x05, sp)
      000163 89               [ 2]  262 	pushw	x
      000164 4B 83            [ 1]  263 	push	#0x83
      000166 4B 80            [ 1]  264 	push	#0x80
      000168 4B 5E            [ 1]  265 	push	#0x5e
      00016A 4B B9            [ 1]  266 	push	#0xb9
      00016C CDr00r00         [ 4]  267 	call	___fsmul
      00016F 5B 08            [ 2]  268 	addw	sp, #8
      000171 1F 21            [ 2]  269 	ldw	(0x21, sp), x
      000173 1E 19            [ 2]  270 	ldw	x, (0x19, sp)
      000175 89               [ 2]  271 	pushw	x
      000176 1E 19            [ 2]  272 	ldw	x, (0x19, sp)
      000178 89               [ 2]  273 	pushw	x
      000179 1E 25            [ 2]  274 	ldw	x, (0x25, sp)
      00017B 89               [ 2]  275 	pushw	x
      00017C 90 89            [ 2]  276 	pushw	y
      00017E CDr00r00         [ 4]  277 	call	___fsadd
      000181 5B 08            [ 2]  278 	addw	sp, #8
      000183 1F 1D            [ 2]  279 	ldw	(0x1d, sp), x
      000185 17 1B            [ 2]  280 	ldw	(0x1b, sp), y
      000187 1E 05            [ 2]  281 	ldw	x, (0x05, sp)
      000189 89               [ 2]  282 	pushw	x
      00018A 1E 05            [ 2]  283 	ldw	x, (0x05, sp)
      00018C 89               [ 2]  284 	pushw	x
      00018D 4B 00            [ 1]  285 	push	#0x00
      00018F 4B 80            [ 1]  286 	push	#0x80
      000191 4B 31            [ 1]  287 	push	#0x31
      000193 4B 3F            [ 1]  288 	push	#0x3f
      000195 CDr00r00         [ 4]  289 	call	___fsmul
      000198 5B 08            [ 2]  290 	addw	sp, #8
      00019A 89               [ 2]  291 	pushw	x
      00019B 90 89            [ 2]  292 	pushw	y
      00019D 1E 21            [ 2]  293 	ldw	x, (0x21, sp)
      00019F 89               [ 2]  294 	pushw	x
      0001A0 1E 21            [ 2]  295 	ldw	x, (0x21, sp)
      0001A2 89               [ 2]  296 	pushw	x
      0001A3 CDr00r00         [ 4]  297 	call	___fsadd
      0001A6 5B 08            [ 2]  298 	addw	sp, #8
      0001A8                        299 00106$:
      0001A8 5B 32            [ 2]  300 	addw	sp, #50
      0001AA 81               [ 4]  301 	ret
                                    302 	.area CODE
                                    303 	.area INITIALIZER
                                    304 	.area CABS (ABS)
