                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:40:57 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strstr
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strstr
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_strstr.c: 31: char * strstr ( const char * str1, const char * str2 )
                                     42 ;	-----------------------------------------
                                     43 ;	 function strstr
                                     44 ;	-----------------------------------------
      000000                         45 _strstr:
      000000 52 10            [ 2]   46 	sub	sp, #16
                                     47 ;	../_strstr.c: 33: const char * cp = str1;
      000002 16 13            [ 2]   48 	ldw	y, (0x13, sp)
      000004 17 05            [ 2]   49 	ldw	(0x05, sp), y
                                     50 ;	../_strstr.c: 37: if ( !*str2 )
      000006 16 15            [ 2]   51 	ldw	y, (0x15, sp)
      000008 17 01            [ 2]   52 	ldw	(0x01, sp), y
      00000A 1E 01            [ 2]   53 	ldw	x, (0x01, sp)
      00000C F6               [ 1]   54 	ld	a, (x)
      00000D 4D               [ 1]   55 	tnz	a
      00000E 26 04            [ 1]   56 	jrne	00122$
                                     57 ;	../_strstr.c: 38: return str1;
      000010 1E 05            [ 2]   58 	ldw	x, (0x05, sp)
      000012 20 64            [ 2]   59 	jra	00113$
                                     60 ;	../_strstr.c: 40: while (*cp)
      000014                         61 00122$:
      000014 16 05            [ 2]   62 	ldw	y, (0x05, sp)
      000016 17 03            [ 2]   63 	ldw	(0x03, sp), y
      000018                         64 00110$:
      000018 1E 03            [ 2]   65 	ldw	x, (0x03, sp)
      00001A F6               [ 1]   66 	ld	a, (x)
      00001B 4D               [ 1]   67 	tnz	a
      00001C 27 59            [ 1]   68 	jreq	00112$
                                     69 ;	../_strstr.c: 43: s2 = str2;
      00001E 16 01            [ 2]   70 	ldw	y, (0x01, sp)
                                     71 ;	../_strstr.c: 45: while ( *s1 && *s2 && !(*s1-*s2) )
      000020 1E 03            [ 2]   72 	ldw	x, (0x03, sp)
      000022 1F 0F            [ 2]   73 	ldw	(0x0f, sp), x
      000024 17 0D            [ 2]   74 	ldw	(0x0d, sp), y
      000026                         75 00105$:
      000026 1E 0F            [ 2]   76 	ldw	x, (0x0f, sp)
      000028 F6               [ 1]   77 	ld	a, (x)
      000029 6B 0C            [ 1]   78 	ld	(0x0c, sp), a
      00002B 1E 0D            [ 2]   79 	ldw	x, (0x0d, sp)
      00002D F6               [ 1]   80 	ld	a, (x)
      00002E 6B 0B            [ 1]   81 	ld	(0x0b, sp), a
      000030 0D 0C            [ 1]   82 	tnz	(0x0c, sp)
      000032 27 30            [ 1]   83 	jreq	00107$
      000034 0D 0B            [ 1]   84 	tnz	(0x0b, sp)
      000036 27 2C            [ 1]   85 	jreq	00107$
      000038 7B 0C            [ 1]   86 	ld	a, (0x0c, sp)
      00003A 6B 0A            [ 1]   87 	ld	(0x0a, sp), a
      00003C 7B 0A            [ 1]   88 	ld	a, (0x0a, sp)
      00003E 49               [ 1]   89 	rlc	a
      00003F 4F               [ 1]   90 	clr	a
      000040 A2 00            [ 1]   91 	sbc	a, #0x00
      000042 6B 09            [ 1]   92 	ld	(0x09, sp), a
      000044 7B 0B            [ 1]   93 	ld	a, (0x0b, sp)
      000046 6B 08            [ 1]   94 	ld	(0x08, sp), a
      000048 7B 08            [ 1]   95 	ld	a, (0x08, sp)
      00004A 49               [ 1]   96 	rlc	a
      00004B 4F               [ 1]   97 	clr	a
      00004C A2 00            [ 1]   98 	sbc	a, #0x00
      00004E 6B 07            [ 1]   99 	ld	(0x07, sp), a
      000050 1E 09            [ 2]  100 	ldw	x, (0x09, sp)
      000052 72 F0 07         [ 2]  101 	subw	x, (0x07, sp)
      000055 5D               [ 2]  102 	tnzw	x
      000056 26 0C            [ 1]  103 	jrne	00107$
                                    104 ;	../_strstr.c: 46: s1++, s2++;
      000058 1E 0F            [ 2]  105 	ldw	x, (0x0f, sp)
      00005A 5C               [ 2]  106 	incw	x
      00005B 1F 0F            [ 2]  107 	ldw	(0x0f, sp), x
      00005D 1E 0D            [ 2]  108 	ldw	x, (0x0d, sp)
      00005F 5C               [ 2]  109 	incw	x
      000060 1F 0D            [ 2]  110 	ldw	(0x0d, sp), x
      000062 20 C2            [ 2]  111 	jra	00105$
      000064                        112 00107$:
                                    113 ;	../_strstr.c: 48: if (!*s2)
      000064 0D 0B            [ 1]  114 	tnz	(0x0b, sp)
      000066 26 04            [ 1]  115 	jrne	00109$
                                    116 ;	../_strstr.c: 49: return( (char*)cp );
      000068 1E 05            [ 2]  117 	ldw	x, (0x05, sp)
      00006A 20 0C            [ 2]  118 	jra	00113$
      00006C                        119 00109$:
                                    120 ;	../_strstr.c: 51: cp++;
      00006C 1E 03            [ 2]  121 	ldw	x, (0x03, sp)
      00006E 5C               [ 2]  122 	incw	x
      00006F 1F 03            [ 2]  123 	ldw	(0x03, sp), x
      000071 16 03            [ 2]  124 	ldw	y, (0x03, sp)
      000073 17 05            [ 2]  125 	ldw	(0x05, sp), y
      000075 20 A1            [ 2]  126 	jra	00110$
      000077                        127 00112$:
                                    128 ;	../_strstr.c: 54: return (NULL) ;
      000077 5F               [ 1]  129 	clrw	x
      000078                        130 00113$:
      000078 5B 10            [ 2]  131 	addw	sp, #16
      00007A 81               [ 4]  132 	ret
                                    133 	.area CODE
                                    134 	.area INITIALIZER
                                    135 	.area CABS (ABS)
