                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:40:41 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module asincosf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _asincosf
                                     13 	.globl _ldexpf
                                     14 	.globl _fabsf
                                     15 	.globl _sqrtf
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area HOME
                                     32 	.area GSINIT
                                     33 	.area GSFINAL
                                     34 	.area GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area CODE
                                     44 ;	../asincosf.c: 47: float asincosf(float x, bool isacos)
                                     45 ;	-----------------------------------------
                                     46 ;	 function asincosf
                                     47 ;	-----------------------------------------
      000000                         48 _asincosf:
      000000 52 50            [ 2]   49 	sub	sp, #80
                                     50 ;	../asincosf.c: 51: bool quartPI = isacos;
      000002 7B 57            [ 1]   51 	ld	a, (0x57, sp)
      000004 6B 01            [ 1]   52 	ld	(0x01, sp), a
                                     53 ;	../asincosf.c: 56: y = fabsf(x);
      000006 1E 55            [ 2]   54 	ldw	x, (0x55, sp)
      000008 89               [ 2]   55 	pushw	x
      000009 1E 55            [ 2]   56 	ldw	x, (0x55, sp)
      00000B 89               [ 2]   57 	pushw	x
      00000C CDr00r00         [ 4]   58 	call	_fabsf
      00000F 5B 04            [ 2]   59 	addw	sp, #4
      000011 1F 4F            [ 2]   60 	ldw	(0x4f, sp), x
      000013 17 4D            [ 2]   61 	ldw	(0x4d, sp), y
                                     62 ;	../asincosf.c: 57: if (y < EPS)
      000015 5F               [ 1]   63 	clrw	x
      000016 89               [ 2]   64 	pushw	x
      000017 4B 80            [ 1]   65 	push	#0x80
      000019 4B 39            [ 1]   66 	push	#0x39
      00001B 1E 53            [ 2]   67 	ldw	x, (0x53, sp)
      00001D 89               [ 2]   68 	pushw	x
      00001E 1E 53            [ 2]   69 	ldw	x, (0x53, sp)
      000020 89               [ 2]   70 	pushw	x
      000021 CDr00r00         [ 4]   71 	call	___fslt
      000024 5B 08            [ 2]   72 	addw	sp, #8
      000026 4D               [ 1]   73 	tnz	a
      000027 27 0B            [ 1]   74 	jreq	00107$
                                     75 ;	../asincosf.c: 59: r = y;
      000029 16 4F            [ 2]   76 	ldw	y, (0x4f, sp)
      00002B 17 4B            [ 2]   77 	ldw	(0x4b, sp), y
      00002D 16 4D            [ 2]   78 	ldw	y, (0x4d, sp)
      00002F 17 49            [ 2]   79 	ldw	(0x49, sp), y
      000031 CCr01r66         [ 2]   80 	jp	00108$
      000034                         81 00107$:
                                     82 ;	../asincosf.c: 63: if (y > 0.5)
      000034 5F               [ 1]   83 	clrw	x
      000035 89               [ 2]   84 	pushw	x
      000036 4B 00            [ 1]   85 	push	#0x00
      000038 4B 3F            [ 1]   86 	push	#0x3f
      00003A 1E 53            [ 2]   87 	ldw	x, (0x53, sp)
      00003C 89               [ 2]   88 	pushw	x
      00003D 1E 53            [ 2]   89 	ldw	x, (0x53, sp)
      00003F 89               [ 2]   90 	pushw	x
      000040 CDr00r00         [ 4]   91 	call	___fsgt
      000043 5B 08            [ 2]   92 	addw	sp, #8
      000045 4D               [ 1]   93 	tnz	a
      000046 27 69            [ 1]   94 	jreq	00104$
                                     95 ;	../asincosf.c: 65: quartPI = !isacos;
      000048 7B 01            [ 1]   96 	ld	a, (0x01, sp)
      00004A A0 01            [ 1]   97 	sub	a, #0x01
      00004C 4F               [ 1]   98 	clr	a
      00004D 49               [ 1]   99 	rlc	a
      00004E 6B 01            [ 1]  100 	ld	(0x01, sp), a
                                    101 ;	../asincosf.c: 66: if (y > 1.0)
      000050 5F               [ 1]  102 	clrw	x
      000051 89               [ 2]  103 	pushw	x
      000052 4B 80            [ 1]  104 	push	#0x80
      000054 4B 3F            [ 1]  105 	push	#0x3f
      000056 1E 53            [ 2]  106 	ldw	x, (0x53, sp)
      000058 89               [ 2]  107 	pushw	x
      000059 1E 53            [ 2]  108 	ldw	x, (0x53, sp)
      00005B 89               [ 2]  109 	pushw	x
      00005C CDr00r00         [ 4]  110 	call	___fsgt
      00005F 5B 08            [ 2]  111 	addw	sp, #8
      000061 4D               [ 1]  112 	tnz	a
      000062 27 0C            [ 1]  113 	jreq	00102$
                                    114 ;	../asincosf.c: 68: errno = EDOM;
      000064 AE 00 21         [ 2]  115 	ldw	x, #0x0021
      000067 CFu00u00         [ 2]  116 	ldw	_errno+0, x
                                    117 ;	../asincosf.c: 69: return 0.0;
      00006A 5F               [ 1]  118 	clrw	x
      00006B 90 5F            [ 1]  119 	clrw	y
      00006D CCr02r76         [ 2]  120 	jp	00117$
      000070                        121 00102$:
                                    122 ;	../asincosf.c: 71: g = (0.5 - y) + 0.5;
      000070 1E 4F            [ 2]  123 	ldw	x, (0x4f, sp)
      000072 89               [ 2]  124 	pushw	x
      000073 1E 4F            [ 2]  125 	ldw	x, (0x4f, sp)
      000075 89               [ 2]  126 	pushw	x
      000076 5F               [ 1]  127 	clrw	x
      000077 89               [ 2]  128 	pushw	x
      000078 4B 80            [ 1]  129 	push	#0x80
      00007A 4B 3F            [ 1]  130 	push	#0x3f
      00007C CDr00r00         [ 4]  131 	call	___fssub
      00007F 5B 08            [ 2]  132 	addw	sp, #8
                                    133 ;	../asincosf.c: 72: g = ldexpf(g, -1);
      000081 4B FF            [ 1]  134 	push	#0xff
      000083 4B FF            [ 1]  135 	push	#0xff
      000085 89               [ 2]  136 	pushw	x
      000086 90 89            [ 2]  137 	pushw	y
      000088 CDr00r00         [ 4]  138 	call	_ldexpf
      00008B 5B 06            [ 2]  139 	addw	sp, #6
      00008D 1F 08            [ 2]  140 	ldw	(0x08, sp), x
      00008F 17 06            [ 2]  141 	ldw	(0x06, sp), y
                                    142 ;	../asincosf.c: 73: y = sqrtf(g);
      000091 1E 08            [ 2]  143 	ldw	x, (0x08, sp)
      000093 89               [ 2]  144 	pushw	x
      000094 1E 08            [ 2]  145 	ldw	x, (0x08, sp)
      000096 89               [ 2]  146 	pushw	x
      000097 CDr00r00         [ 4]  147 	call	_sqrtf
      00009A 5B 04            [ 2]  148 	addw	sp, #4
                                    149 ;	../asincosf.c: 74: y = -(y + y);
      00009C 89               [ 2]  150 	pushw	x
      00009D 90 89            [ 2]  151 	pushw	y
      00009F 89               [ 2]  152 	pushw	x
      0000A0 90 89            [ 2]  153 	pushw	y
      0000A2 CDr00r00         [ 4]  154 	call	___fsadd
      0000A5 5B 08            [ 2]  155 	addw	sp, #8
      0000A7 51               [ 1]  156 	exgw	x, y
      0000A8 58               [ 2]  157 	sllw	x
      0000A9 8C               [ 1]  158 	ccf
      0000AA 56               [ 2]  159 	rrcw	x
      0000AB 17 4F            [ 2]  160 	ldw	(0x4f, sp), y
      0000AD 1F 4D            [ 2]  161 	ldw	(0x4d, sp), x
      0000AF 20 15            [ 2]  162 	jra	00105$
      0000B1                        163 00104$:
                                    164 ;	../asincosf.c: 78: g = y * y;
      0000B1 1E 4F            [ 2]  165 	ldw	x, (0x4f, sp)
      0000B3 89               [ 2]  166 	pushw	x
      0000B4 1E 4F            [ 2]  167 	ldw	x, (0x4f, sp)
      0000B6 89               [ 2]  168 	pushw	x
      0000B7 1E 53            [ 2]  169 	ldw	x, (0x53, sp)
      0000B9 89               [ 2]  170 	pushw	x
      0000BA 1E 53            [ 2]  171 	ldw	x, (0x53, sp)
      0000BC 89               [ 2]  172 	pushw	x
      0000BD CDr00r00         [ 4]  173 	call	___fsmul
      0000C0 5B 08            [ 2]  174 	addw	sp, #8
      0000C2 1F 08            [ 2]  175 	ldw	(0x08, sp), x
      0000C4 17 06            [ 2]  176 	ldw	(0x06, sp), y
      0000C6                        177 00105$:
                                    178 ;	../asincosf.c: 80: r = y + y * ((P(g) * g) / Q(g));
      0000C6 1E 08            [ 2]  179 	ldw	x, (0x08, sp)
      0000C8 89               [ 2]  180 	pushw	x
      0000C9 1E 08            [ 2]  181 	ldw	x, (0x08, sp)
      0000CB 89               [ 2]  182 	pushw	x
      0000CC 4B 65            [ 1]  183 	push	#0x65
      0000CE 4B 20            [ 1]  184 	push	#0x20
      0000D0 4B 01            [ 1]  185 	push	#0x01
      0000D2 4B BF            [ 1]  186 	push	#0xbf
      0000D4 CDr00r00         [ 4]  187 	call	___fsmul
      0000D7 5B 08            [ 2]  188 	addw	sp, #8
      0000D9 4B 6B            [ 1]  189 	push	#0x6b
      0000DB 4B 16            [ 1]  190 	push	#0x16
      0000DD 4B 6F            [ 1]  191 	push	#0x6f
      0000DF 4B 3F            [ 1]  192 	push	#0x3f
      0000E1 89               [ 2]  193 	pushw	x
      0000E2 90 89            [ 2]  194 	pushw	y
      0000E4 CDr00r00         [ 4]  195 	call	___fsadd
      0000E7 5B 08            [ 2]  196 	addw	sp, #8
      0000E9 1F 47            [ 2]  197 	ldw	(0x47, sp), x
      0000EB 1E 08            [ 2]  198 	ldw	x, (0x08, sp)
      0000ED 89               [ 2]  199 	pushw	x
      0000EE 1E 08            [ 2]  200 	ldw	x, (0x08, sp)
      0000F0 89               [ 2]  201 	pushw	x
      0000F1 1E 4B            [ 2]  202 	ldw	x, (0x4b, sp)
      0000F3 89               [ 2]  203 	pushw	x
      0000F4 90 89            [ 2]  204 	pushw	y
      0000F6 CDr00r00         [ 4]  205 	call	___fsmul
      0000F9 5B 08            [ 2]  206 	addw	sp, #8
      0000FB 1F 43            [ 2]  207 	ldw	(0x43, sp), x
      0000FD 17 41            [ 2]  208 	ldw	(0x41, sp), y
      0000FF 4B 0B            [ 1]  209 	push	#0x0b
      000101 4B 8D            [ 1]  210 	push	#0x8d
      000103 4B B1            [ 1]  211 	push	#0xb1
      000105 4B C0            [ 1]  212 	push	#0xc0
      000107 1E 0C            [ 2]  213 	ldw	x, (0x0c, sp)
      000109 89               [ 2]  214 	pushw	x
      00010A 1E 0C            [ 2]  215 	ldw	x, (0x0c, sp)
      00010C 89               [ 2]  216 	pushw	x
      00010D CDr00r00         [ 4]  217 	call	___fsadd
      000110 5B 08            [ 2]  218 	addw	sp, #8
      000112 1F 3F            [ 2]  219 	ldw	(0x3f, sp), x
      000114 1E 08            [ 2]  220 	ldw	x, (0x08, sp)
      000116 89               [ 2]  221 	pushw	x
      000117 1E 08            [ 2]  222 	ldw	x, (0x08, sp)
      000119 89               [ 2]  223 	pushw	x
      00011A 1E 43            [ 2]  224 	ldw	x, (0x43, sp)
      00011C 89               [ 2]  225 	pushw	x
      00011D 90 89            [ 2]  226 	pushw	y
      00011F CDr00r00         [ 4]  227 	call	___fsmul
      000122 5B 08            [ 2]  228 	addw	sp, #8
      000124 4B F0            [ 1]  229 	push	#0xf0
      000126 4B 50            [ 1]  230 	push	#0x50
      000128 4B B3            [ 1]  231 	push	#0xb3
      00012A 4B 40            [ 1]  232 	push	#0x40
      00012C 89               [ 2]  233 	pushw	x
      00012D 90 89            [ 2]  234 	pushw	y
      00012F CDr00r00         [ 4]  235 	call	___fsadd
      000132 5B 08            [ 2]  236 	addw	sp, #8
      000134 89               [ 2]  237 	pushw	x
      000135 90 89            [ 2]  238 	pushw	y
      000137 1E 47            [ 2]  239 	ldw	x, (0x47, sp)
      000139 89               [ 2]  240 	pushw	x
      00013A 1E 47            [ 2]  241 	ldw	x, (0x47, sp)
      00013C 89               [ 2]  242 	pushw	x
      00013D CDr00r00         [ 4]  243 	call	___fsdiv
      000140 5B 08            [ 2]  244 	addw	sp, #8
      000142 89               [ 2]  245 	pushw	x
      000143 90 89            [ 2]  246 	pushw	y
      000145 1E 53            [ 2]  247 	ldw	x, (0x53, sp)
      000147 89               [ 2]  248 	pushw	x
      000148 1E 53            [ 2]  249 	ldw	x, (0x53, sp)
      00014A 89               [ 2]  250 	pushw	x
      00014B CDr00r00         [ 4]  251 	call	___fsmul
      00014E 5B 08            [ 2]  252 	addw	sp, #8
      000150 89               [ 2]  253 	pushw	x
      000151 90 89            [ 2]  254 	pushw	y
      000153 1E 53            [ 2]  255 	ldw	x, (0x53, sp)
      000155 89               [ 2]  256 	pushw	x
      000156 1E 53            [ 2]  257 	ldw	x, (0x53, sp)
      000158 89               [ 2]  258 	pushw	x
      000159 CDr00r00         [ 4]  259 	call	___fsadd
      00015C 5B 08            [ 2]  260 	addw	sp, #8
      00015E 1F 3B            [ 2]  261 	ldw	(0x3b, sp), x
      000160 17 49            [ 2]  262 	ldw	(0x49, sp), y
      000162 16 3B            [ 2]  263 	ldw	y, (0x3b, sp)
      000164 17 4B            [ 2]  264 	ldw	(0x4b, sp), y
      000166                        265 00108$:
                                    266 ;	../asincosf.c: 82: i = quartPI;
      000166 7B 01            [ 1]  267 	ld	a, (0x01, sp)
                                    268 ;	../asincosf.c: 85: if (x < 0.0)
      000168 88               [ 1]  269 	push	a
      000169 5F               [ 1]  270 	clrw	x
      00016A 89               [ 2]  271 	pushw	x
      00016B 5F               [ 1]  272 	clrw	x
      00016C 89               [ 2]  273 	pushw	x
      00016D 1E 5A            [ 2]  274 	ldw	x, (0x5a, sp)
      00016F 89               [ 2]  275 	pushw	x
      000170 1E 5A            [ 2]  276 	ldw	x, (0x5a, sp)
      000172 89               [ 2]  277 	pushw	x
                                    278 ;	../asincosf.c: 86: r = (b[i] + r) + b[i];
      000173 CDr00r00         [ 4]  279 	call	___fslt
      000176 5B 08            [ 2]  280 	addw	sp, #8
      000178 6B 39            [ 1]  281 	ld	(0x39, sp), a
      00017A 84               [ 1]  282 	pop	a
      00017B 5F               [ 1]  283 	clrw	x
      00017C 97               [ 1]  284 	ld	xl, a
      00017D 58               [ 2]  285 	sllw	x
      00017E 58               [ 2]  286 	sllw	x
      00017F 1F 36            [ 2]  287 	ldw	(0x36, sp), x
                                    288 ;	../asincosf.c: 83: if (isacos)
      000181 0D 57            [ 1]  289 	tnz	(0x57, sp)
      000183 26 03            [ 1]  290 	jrne	00146$
      000185 CCr02r27         [ 2]  291 	jp	00115$
      000188                        292 00146$:
                                    293 ;	../asincosf.c: 85: if (x < 0.0)
      000188 0D 38            [ 1]  294 	tnz	(0x38, sp)
      00018A 27 4E            [ 1]  295 	jreq	00110$
                                    296 ;	../asincosf.c: 86: r = (b[i] + r) + b[i];
      00018C AEr02r81         [ 2]  297 	ldw	x, #_asincosf_b_1_24+0
      00018F 1F 34            [ 2]  298 	ldw	(0x34, sp), x
      000191 1E 34            [ 2]  299 	ldw	x, (0x34, sp)
      000193 72 FB 36         [ 2]  300 	addw	x, (0x36, sp)
      000196 1F 32            [ 2]  301 	ldw	(0x32, sp), x
      000198 1E 32            [ 2]  302 	ldw	x, (0x32, sp)
      00019A E6 03            [ 1]  303 	ld	a, (0x3, x)
      00019C 6B 31            [ 1]  304 	ld	(0x31, sp), a
      00019E E6 02            [ 1]  305 	ld	a, (0x2, x)
      0001A0 6B 30            [ 1]  306 	ld	(0x30, sp), a
      0001A2 FE               [ 2]  307 	ldw	x, (x)
      0001A3 1F 2E            [ 2]  308 	ldw	(0x2e, sp), x
      0001A5 1E 4B            [ 2]  309 	ldw	x, (0x4b, sp)
      0001A7 89               [ 2]  310 	pushw	x
      0001A8 1E 4B            [ 2]  311 	ldw	x, (0x4b, sp)
      0001AA 89               [ 2]  312 	pushw	x
      0001AB 1E 34            [ 2]  313 	ldw	x, (0x34, sp)
      0001AD 89               [ 2]  314 	pushw	x
      0001AE 1E 34            [ 2]  315 	ldw	x, (0x34, sp)
      0001B0 89               [ 2]  316 	pushw	x
      0001B1 CDr00r00         [ 4]  317 	call	___fsadd
      0001B4 5B 08            [ 2]  318 	addw	sp, #8
      0001B6 1F 2C            [ 2]  319 	ldw	(0x2c, sp), x
      0001B8 17 2A            [ 2]  320 	ldw	(0x2a, sp), y
      0001BA 1E 30            [ 2]  321 	ldw	x, (0x30, sp)
      0001BC 89               [ 2]  322 	pushw	x
      0001BD 1E 30            [ 2]  323 	ldw	x, (0x30, sp)
      0001BF 89               [ 2]  324 	pushw	x
      0001C0 1E 30            [ 2]  325 	ldw	x, (0x30, sp)
      0001C2 89               [ 2]  326 	pushw	x
      0001C3 1E 30            [ 2]  327 	ldw	x, (0x30, sp)
      0001C5 89               [ 2]  328 	pushw	x
      0001C6 CDr00r00         [ 4]  329 	call	___fsadd
      0001C9 5B 08            [ 2]  330 	addw	sp, #8
      0001CB 1F 28            [ 2]  331 	ldw	(0x28, sp), x
      0001CD 17 26            [ 2]  332 	ldw	(0x26, sp), y
      0001CF 16 28            [ 2]  333 	ldw	y, (0x28, sp)
      0001D1 17 04            [ 2]  334 	ldw	(0x04, sp), y
      0001D3 16 26            [ 2]  335 	ldw	y, (0x26, sp)
      0001D5 17 02            [ 2]  336 	ldw	(0x02, sp), y
      0001D7 CCr02r72         [ 2]  337 	jp	00116$
      0001DA                        338 00110$:
                                    339 ;	../asincosf.c: 88: r = (a[i] - r) + a[i];
      0001DA AEr02r79         [ 2]  340 	ldw	x, #_asincosf_a_1_24+0
      0001DD 1F 24            [ 2]  341 	ldw	(0x24, sp), x
      0001DF 1E 24            [ 2]  342 	ldw	x, (0x24, sp)
      0001E1 72 FB 36         [ 2]  343 	addw	x, (0x36, sp)
      0001E4 1F 22            [ 2]  344 	ldw	(0x22, sp), x
      0001E6 1E 22            [ 2]  345 	ldw	x, (0x22, sp)
      0001E8 E6 03            [ 1]  346 	ld	a, (0x3, x)
      0001EA 6B 21            [ 1]  347 	ld	(0x21, sp), a
      0001EC E6 02            [ 1]  348 	ld	a, (0x2, x)
      0001EE 6B 20            [ 1]  349 	ld	(0x20, sp), a
      0001F0 FE               [ 2]  350 	ldw	x, (x)
      0001F1 1F 1E            [ 2]  351 	ldw	(0x1e, sp), x
      0001F3 1E 4B            [ 2]  352 	ldw	x, (0x4b, sp)
      0001F5 89               [ 2]  353 	pushw	x
      0001F6 1E 4B            [ 2]  354 	ldw	x, (0x4b, sp)
      0001F8 89               [ 2]  355 	pushw	x
      0001F9 1E 24            [ 2]  356 	ldw	x, (0x24, sp)
      0001FB 89               [ 2]  357 	pushw	x
      0001FC 1E 24            [ 2]  358 	ldw	x, (0x24, sp)
      0001FE 89               [ 2]  359 	pushw	x
      0001FF CDr00r00         [ 4]  360 	call	___fssub
      000202 5B 08            [ 2]  361 	addw	sp, #8
      000204 1F 1C            [ 2]  362 	ldw	(0x1c, sp), x
      000206 17 1A            [ 2]  363 	ldw	(0x1a, sp), y
      000208 1E 20            [ 2]  364 	ldw	x, (0x20, sp)
      00020A 89               [ 2]  365 	pushw	x
      00020B 1E 20            [ 2]  366 	ldw	x, (0x20, sp)
      00020D 89               [ 2]  367 	pushw	x
      00020E 1E 20            [ 2]  368 	ldw	x, (0x20, sp)
      000210 89               [ 2]  369 	pushw	x
      000211 1E 20            [ 2]  370 	ldw	x, (0x20, sp)
      000213 89               [ 2]  371 	pushw	x
      000214 CDr00r00         [ 4]  372 	call	___fsadd
      000217 5B 08            [ 2]  373 	addw	sp, #8
      000219 1F 18            [ 2]  374 	ldw	(0x18, sp), x
      00021B 17 16            [ 2]  375 	ldw	(0x16, sp), y
      00021D 16 18            [ 2]  376 	ldw	y, (0x18, sp)
      00021F 17 04            [ 2]  377 	ldw	(0x04, sp), y
      000221 16 16            [ 2]  378 	ldw	y, (0x16, sp)
      000223 17 02            [ 2]  379 	ldw	(0x02, sp), y
      000225 20 4B            [ 2]  380 	jra	00116$
      000227                        381 00115$:
                                    382 ;	../asincosf.c: 92: r = (a[i] + r) + a[i];
      000227 AEr02r79         [ 2]  383 	ldw	x, #_asincosf_a_1_24+0
      00022A 72 FB 36         [ 2]  384 	addw	x, (0x36, sp)
      00022D E6 03            [ 1]  385 	ld	a, (0x3, x)
      00022F 6B 15            [ 1]  386 	ld	(0x15, sp), a
      000231 E6 02            [ 1]  387 	ld	a, (0x2, x)
      000233 6B 14            [ 1]  388 	ld	(0x14, sp), a
      000235 FE               [ 2]  389 	ldw	x, (x)
      000236 1F 12            [ 2]  390 	ldw	(0x12, sp), x
      000238 1E 4B            [ 2]  391 	ldw	x, (0x4b, sp)
      00023A 89               [ 2]  392 	pushw	x
      00023B 1E 4B            [ 2]  393 	ldw	x, (0x4b, sp)
      00023D 89               [ 2]  394 	pushw	x
      00023E 1E 18            [ 2]  395 	ldw	x, (0x18, sp)
      000240 89               [ 2]  396 	pushw	x
      000241 1E 18            [ 2]  397 	ldw	x, (0x18, sp)
      000243 89               [ 2]  398 	pushw	x
      000244 CDr00r00         [ 4]  399 	call	___fsadd
      000247 5B 08            [ 2]  400 	addw	sp, #8
      000249 1F 10            [ 2]  401 	ldw	(0x10, sp), x
      00024B 1E 14            [ 2]  402 	ldw	x, (0x14, sp)
      00024D 89               [ 2]  403 	pushw	x
      00024E 1E 14            [ 2]  404 	ldw	x, (0x14, sp)
      000250 89               [ 2]  405 	pushw	x
      000251 1E 14            [ 2]  406 	ldw	x, (0x14, sp)
      000253 89               [ 2]  407 	pushw	x
      000254 90 89            [ 2]  408 	pushw	y
      000256 CDr00r00         [ 4]  409 	call	___fsadd
      000259 5B 08            [ 2]  410 	addw	sp, #8
      00025B 1F 04            [ 2]  411 	ldw	(0x04, sp), x
      00025D 17 02            [ 2]  412 	ldw	(0x02, sp), y
                                    413 ;	../asincosf.c: 93: if (x < 0.0)
      00025F 0D 38            [ 1]  414 	tnz	(0x38, sp)
      000261 27 0F            [ 1]  415 	jreq	00116$
                                    416 ;	../asincosf.c: 94: r = -r;
      000263 16 04            [ 2]  417 	ldw	y, (0x04, sp)
      000265 17 0C            [ 2]  418 	ldw	(0x0c, sp), y
      000267 1E 02            [ 2]  419 	ldw	x, (0x02, sp)
      000269 58               [ 2]  420 	sllw	x
      00026A 8C               [ 1]  421 	ccf
      00026B 56               [ 2]  422 	rrcw	x
      00026C 1F 02            [ 2]  423 	ldw	(0x02, sp), x
      00026E 16 0C            [ 2]  424 	ldw	y, (0x0c, sp)
      000270 17 04            [ 2]  425 	ldw	(0x04, sp), y
      000272                        426 00116$:
                                    427 ;	../asincosf.c: 96: return r;
      000272 1E 04            [ 2]  428 	ldw	x, (0x04, sp)
      000274 16 02            [ 2]  429 	ldw	y, (0x02, sp)
      000276                        430 00117$:
      000276 5B 50            [ 2]  431 	addw	sp, #80
      000278 81               [ 4]  432 	ret
                                    433 	.area CODE
      000279                        434 _asincosf_a_1_24:
      000279 00 00 00 00            435 	.byte #0x00,#0x00,#0x00,#0x00	;  0.000000e+00
      00027D 3F 49 0F DB            436 	.byte #0x3F,#0x49,#0x0F,#0xDB	;  7.853982e-01
      000281                        437 _asincosf_b_1_24:
      000281 3F C9 0F DB            438 	.byte #0x3F,#0xC9,#0x0F,#0xDB	;  1.570796e+00
      000285 3F 49 0F DB            439 	.byte #0x3F,#0x49,#0x0F,#0xDB	;  7.853982e-01
                                    440 	.area INITIALIZER
                                    441 	.area CABS (ABS)
