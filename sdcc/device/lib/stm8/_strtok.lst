                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:40:57 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strtok
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strtok
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
      000000                         18 _strtok_s_1_22:
      000000                         19 	.ds 2
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area HOME
                                     32 	.area GSINIT
                                     33 	.area GSFINAL
                                     34 	.area GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
                                     39 	.area HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area CODE
                                     44 ;	../_strtok.c: 36: char * strtok ( char * str, const char * control )
                                     45 ;	-----------------------------------------
                                     46 ;	 function strtok
                                     47 ;	-----------------------------------------
      000000                         48 _strtok:
                                     49 ;	../_strtok.c: 41: if ( str )
      000000 1E 03            [ 2]   50 	ldw	x, (0x03, sp)
      000002 27 05            [ 1]   51 	jreq	00102$
                                     52 ;	../_strtok.c: 42: s = str;
      000004 1E 03            [ 2]   53 	ldw	x, (0x03, sp)
      000006 CFu00u00         [ 2]   54 	ldw	_strtok_s_1_22+0, x
      000009                         55 00102$:
                                     56 ;	../_strtok.c: 43: if ( !s )
      000009 CEu00u00         [ 2]   57 	ldw	x, _strtok_s_1_22+0
      00000C 26 03            [ 1]   58 	jrne	00108$
                                     59 ;	../_strtok.c: 44: return NULL;
      00000E 5F               [ 1]   60 	clrw	x
      00000F 20 67            [ 2]   61 	jra	00119$
                                     62 ;	../_strtok.c: 46: while (*s) {
      000011                         63 00108$:
      000011 CEu00u00         [ 2]   64 	ldw	x, _strtok_s_1_22+0
      000014 F6               [ 1]   65 	ld	a, (x)
      000015 4D               [ 1]   66 	tnz	a
      000016 27 1B            [ 1]   67 	jreq	00110$
                                     68 ;	../_strtok.c: 47: if (strchr(control,*s))
      000018 97               [ 1]   69 	ld	xl, a
      000019 49               [ 1]   70 	rlc	a
      00001A 4F               [ 1]   71 	clr	a
      00001B A2 00            [ 1]   72 	sbc	a, #0x00
      00001D 95               [ 1]   73 	ld	xh, a
      00001E 89               [ 2]   74 	pushw	x
      00001F 1E 07            [ 2]   75 	ldw	x, (0x07, sp)
      000021 89               [ 2]   76 	pushw	x
      000022 CDr00r00         [ 4]   77 	call	_strchr
      000025 5B 04            [ 2]   78 	addw	sp, #4
      000027 5D               [ 2]   79 	tnzw	x
      000028 27 09            [ 1]   80 	jreq	00110$
                                     81 ;	../_strtok.c: 48: s++;
      00002A CEu00u00         [ 2]   82 	ldw	x, _strtok_s_1_22+0
      00002D 5C               [ 2]   83 	incw	x
      00002E CFu00u00         [ 2]   84 	ldw	_strtok_s_1_22+0, x
      000031 20 DE            [ 2]   85 	jra	00108$
                                     86 ;	../_strtok.c: 50: break;
      000033                         87 00110$:
                                     88 ;	../_strtok.c: 53: s1 = s;
      000033 90 CEu00u00      [ 2]   89 	ldw	y, _strtok_s_1_22+0
                                     90 ;	../_strtok.c: 55: while (*s) {
      000037                         91 00113$:
                                     92 ;	../_strtok.c: 46: while (*s) {
      000037 CEu00u00         [ 2]   93 	ldw	x, _strtok_s_1_22+0
      00003A F6               [ 1]   94 	ld	a, (x)
                                     95 ;	../_strtok.c: 55: while (*s) {
      00003B 4D               [ 1]   96 	tnz	a
      00003C 27 2D            [ 1]   97 	jreq	00115$
                                     98 ;	../_strtok.c: 56: if (strchr(control,*s)) {
      00003E 97               [ 1]   99 	ld	xl, a
      00003F 49               [ 1]  100 	rlc	a
      000040 4F               [ 1]  101 	clr	a
      000041 A2 00            [ 1]  102 	sbc	a, #0x00
      000043 95               [ 1]  103 	ld	xh, a
      000044 90 89            [ 2]  104 	pushw	y
      000046 89               [ 2]  105 	pushw	x
      000047 1E 09            [ 2]  106 	ldw	x, (0x09, sp)
      000049 89               [ 2]  107 	pushw	x
      00004A CDr00r00         [ 4]  108 	call	_strchr
      00004D 5B 04            [ 2]  109 	addw	sp, #4
      00004F 90 85            [ 2]  110 	popw	y
      000051 5D               [ 2]  111 	tnzw	x
      000052 27 0E            [ 1]  112 	jreq	00112$
                                    113 ;	../_strtok.c: 57: *s++ = '\0';
      000054 CEu00u00         [ 2]  114 	ldw	x, _strtok_s_1_22+0
      000057 7F               [ 1]  115 	clr	(x)
      000058 CEu00u00         [ 2]  116 	ldw	x, _strtok_s_1_22+0
      00005B 5C               [ 2]  117 	incw	x
      00005C CFu00u00         [ 2]  118 	ldw	_strtok_s_1_22+0, x
                                    119 ;	../_strtok.c: 58: return s1;
      00005F 93               [ 1]  120 	ldw	x, y
      000060 20 16            [ 2]  121 	jra	00119$
      000062                        122 00112$:
                                    123 ;	../_strtok.c: 60: s++ ;
      000062 CEu00u00         [ 2]  124 	ldw	x, _strtok_s_1_22+0
      000065 5C               [ 2]  125 	incw	x
      000066 CFu00u00         [ 2]  126 	ldw	_strtok_s_1_22+0, x
      000069 20 CC            [ 2]  127 	jra	00113$
      00006B                        128 00115$:
                                    129 ;	../_strtok.c: 63: s = NULL;
      00006B 5F               [ 1]  130 	clrw	x
      00006C CFu00u00         [ 2]  131 	ldw	_strtok_s_1_22+0, x
                                    132 ;	../_strtok.c: 65: if (*s1)
      00006F 90 F6            [ 1]  133 	ld	a, (y)
      000071 4D               [ 1]  134 	tnz	a
      000072 27 03            [ 1]  135 	jreq	00117$
                                    136 ;	../_strtok.c: 66: return s1;
      000074 93               [ 1]  137 	ldw	x, y
      000075 20 01            [ 2]  138 	jra	00119$
      000077                        139 00117$:
                                    140 ;	../_strtok.c: 68: return NULL;
      000077 5F               [ 1]  141 	clrw	x
      000078                        142 00119$:
      000078 81               [ 4]  143 	ret
                                    144 	.area CODE
                                    145 	.area INITIALIZER
                                    146 	.area CABS (ABS)
