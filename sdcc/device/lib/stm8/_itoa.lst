                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:41:16 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _itoa
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __itoa
                                     13 	.globl __uitoa
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../_itoa.c: 40: void _uitoa(unsigned int value, char* string, unsigned char radix)
                                     43 ;	-----------------------------------------
                                     44 ;	 function _uitoa
                                     45 ;	-----------------------------------------
      000000                         46 __uitoa:
      000000 52 06            [ 2]   47 	sub	sp, #6
                                     48 ;	../_itoa.c: 45: do {
      000002 0F 03            [ 1]   49 	clr	(0x03, sp)
      000004                         50 00103$:
                                     51 ;	../_itoa.c: 46: string[index] = '0' + (value % radix);
      000004 5F               [ 1]   52 	clrw	x
      000005 7B 03            [ 1]   53 	ld	a, (0x03, sp)
      000007 97               [ 1]   54 	ld	xl, a
      000008 72 FB 0B         [ 2]   55 	addw	x, (0x0b, sp)
      00000B 7B 0D            [ 1]   56 	ld	a, (0x0d, sp)
      00000D 6B 06            [ 1]   57 	ld	(0x06, sp), a
      00000F 0F 05            [ 1]   58 	clr	(0x05, sp)
      000011 89               [ 2]   59 	pushw	x
      000012 1E 0B            [ 2]   60 	ldw	x, (0x0b, sp)
      000014 16 07            [ 2]   61 	ldw	y, (0x07, sp)
      000016 65               [ 2]   62 	divw	x, y
      000017 85               [ 2]   63 	popw	x
      000018 90 9F            [ 1]   64 	ld	a, yl
      00001A AB 30            [ 1]   65 	add	a, #0x30
      00001C F7               [ 1]   66 	ld	(x), a
                                     67 ;	../_itoa.c: 47: if (string[index] > '9')
      00001D A1 39            [ 1]   68 	cp	a, #0x39
      00001F 2D 04            [ 1]   69 	jrsle	00102$
                                     70 ;	../_itoa.c: 48: string[index] += 'A' - '9' - 1;
      000021 F6               [ 1]   71 	ld	a, (x)
      000022 AB 07            [ 1]   72 	add	a, #0x07
      000024 F7               [ 1]   73 	ld	(x), a
      000025                         74 00102$:
                                     75 ;	../_itoa.c: 49: value /= radix;
      000025 1E 09            [ 2]   76 	ldw	x, (0x09, sp)
      000027 16 05            [ 2]   77 	ldw	y, (0x05, sp)
      000029 65               [ 2]   78 	divw	x, y
      00002A 1F 09            [ 2]   79 	ldw	(0x09, sp), x
                                     80 ;	../_itoa.c: 50: ++index;
      00002C 0C 03            [ 1]   81 	inc	(0x03, sp)
                                     82 ;	../_itoa.c: 51: } while (value != 0);
      00002E 1E 09            [ 2]   83 	ldw	x, (0x09, sp)
      000030 26 D2            [ 1]   84 	jrne	00103$
                                     85 ;	../_itoa.c: 54: string[index--] = '\0';
      000032 7B 03            [ 1]   86 	ld	a, (0x03, sp)
      000034 4A               [ 1]   87 	dec	a
      000035 5F               [ 1]   88 	clrw	x
      000036 41               [ 1]   89 	exg	a, xl
      000037 7B 03            [ 1]   90 	ld	a, (0x03, sp)
      000039 41               [ 1]   91 	exg	a, xl
      00003A 72 FB 0B         [ 2]   92 	addw	x, (0x0b, sp)
      00003D 7F               [ 1]   93 	clr	(x)
                                     94 ;	../_itoa.c: 57: while (index > i) {
      00003E 0F 02            [ 1]   95 	clr	(0x02, sp)
      000040 6B 04            [ 1]   96 	ld	(0x04, sp), a
      000042                         97 00106$:
      000042 7B 04            [ 1]   98 	ld	a, (0x04, sp)
      000044 11 02            [ 1]   99 	cp	a, (0x02, sp)
      000046 2D 20            [ 1]  100 	jrsle	00109$
                                    101 ;	../_itoa.c: 58: char tmp = string[i];
      000048 5F               [ 1]  102 	clrw	x
      000049 7B 02            [ 1]  103 	ld	a, (0x02, sp)
      00004B 97               [ 1]  104 	ld	xl, a
      00004C 72 FB 0B         [ 2]  105 	addw	x, (0x0b, sp)
      00004F F6               [ 1]  106 	ld	a, (x)
      000050 6B 01            [ 1]  107 	ld	(0x01, sp), a
                                    108 ;	../_itoa.c: 59: string[i] = string[index];
      000052 90 5F            [ 1]  109 	clrw	y
      000054 7B 04            [ 1]  110 	ld	a, (0x04, sp)
      000056 90 97            [ 1]  111 	ld	yl, a
      000058 72 F9 0B         [ 2]  112 	addw	y, (0x0b, sp)
      00005B 90 F6            [ 1]  113 	ld	a, (y)
      00005D F7               [ 1]  114 	ld	(x), a
                                    115 ;	../_itoa.c: 60: string[index] = tmp;
      00005E 7B 01            [ 1]  116 	ld	a, (0x01, sp)
      000060 90 F7            [ 1]  117 	ld	(y), a
                                    118 ;	../_itoa.c: 61: ++i;
      000062 0C 02            [ 1]  119 	inc	(0x02, sp)
                                    120 ;	../_itoa.c: 62: --index;
      000064 0A 04            [ 1]  121 	dec	(0x04, sp)
      000066 20 DA            [ 2]  122 	jra	00106$
      000068                        123 00109$:
      000068 5B 06            [ 2]  124 	addw	sp, #6
      00006A 81               [ 4]  125 	ret
                                    126 ;	../_itoa.c: 66: void _itoa(int value, char* string, unsigned char radix)
                                    127 ;	-----------------------------------------
                                    128 ;	 function _itoa
                                    129 ;	-----------------------------------------
      00006B                        130 __itoa:
                                    131 ;	../_itoa.c: 68: if (value < 0 && radix == 10) {
      00006B 0D 03            [ 1]  132 	tnz	(0x03, sp)
      00006D 2A 13            [ 1]  133 	jrpl	00102$
      00006F 7B 07            [ 1]  134 	ld	a, (0x07, sp)
      000071 A1 0A            [ 1]  135 	cp	a, #0x0a
      000073 26 0D            [ 1]  136 	jrne	00102$
                                    137 ;	../_itoa.c: 69: *string++ = '-';
      000075 1E 05            [ 2]  138 	ldw	x, (0x05, sp)
      000077 A6 2D            [ 1]  139 	ld	a, #0x2d
      000079 F7               [ 1]  140 	ld	(x), a
      00007A 5C               [ 2]  141 	incw	x
      00007B 1F 05            [ 2]  142 	ldw	(0x05, sp), x
                                    143 ;	../_itoa.c: 70: value = -value;
      00007D 1E 03            [ 2]  144 	ldw	x, (0x03, sp)
      00007F 50               [ 2]  145 	negw	x
      000080 1F 03            [ 2]  146 	ldw	(0x03, sp), x
      000082                        147 00102$:
                                    148 ;	../_itoa.c: 72: _uitoa(value, string, radix);
      000082 7B 07            [ 1]  149 	ld	a, (0x07, sp)
      000084 88               [ 1]  150 	push	a
      000085 1E 06            [ 2]  151 	ldw	x, (0x06, sp)
      000087 89               [ 2]  152 	pushw	x
      000088 1E 06            [ 2]  153 	ldw	x, (0x06, sp)
      00008A 89               [ 2]  154 	pushw	x
      00008B CDr00r00         [ 4]  155 	call	__uitoa
      00008E 5B 05            [ 2]  156 	addw	sp, #5
      000090 81               [ 4]  157 	ret
                                    158 	.area CODE
                                    159 	.area INITIALIZER
                                    160 	.area CABS (ABS)
