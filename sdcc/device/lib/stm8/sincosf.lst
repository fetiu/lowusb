                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:40:34 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module sincosf
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _sincosf
                                     13 	.globl _fabsf
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../sincosf.c: 50: float sincosf(float x, bool iscos)
                                     43 ;	-----------------------------------------
                                     44 ;	 function sincosf
                                     45 ;	-----------------------------------------
      000000                         46 _sincosf:
      000000 52 3A            [ 2]   47 	sub	sp, #58
                                     48 ;	../sincosf.c: 56: if(iscos)
      000002 0D 41            [ 1]   49 	tnz	(0x41, sp)
      000004 27 23            [ 1]   50 	jreq	00105$
                                     51 ;	../sincosf.c: 58: y=fabsf(x)+HALF_PI;
      000006 1E 3F            [ 2]   52 	ldw	x, (0x3f, sp)
      000008 89               [ 2]   53 	pushw	x
      000009 1E 3F            [ 2]   54 	ldw	x, (0x3f, sp)
      00000B 89               [ 2]   55 	pushw	x
      00000C CDr00r00         [ 4]   56 	call	_fabsf
      00000F 5B 04            [ 2]   57 	addw	sp, #4
      000011 4B DB            [ 1]   58 	push	#0xdb
      000013 4B 0F            [ 1]   59 	push	#0x0f
      000015 4B C9            [ 1]   60 	push	#0xc9
      000017 4B 3F            [ 1]   61 	push	#0x3f
      000019 89               [ 2]   62 	pushw	x
      00001A 90 89            [ 2]   63 	pushw	y
      00001C CDr00r00         [ 4]   64 	call	___fsadd
      00001F 5B 08            [ 2]   65 	addw	sp, #8
      000021 1F 39            [ 2]   66 	ldw	(0x39, sp), x
      000023 17 37            [ 2]   67 	ldw	(0x37, sp), y
                                     68 ;	../sincosf.c: 59: sign=0;
      000025 0F 01            [ 1]   69 	clr	(0x01, sp)
      000027 20 2D            [ 2]   70 	jra	00106$
      000029                         71 00105$:
                                     72 ;	../sincosf.c: 63: if(x<0.0)
      000029 5F               [ 1]   73 	clrw	x
      00002A 89               [ 2]   74 	pushw	x
      00002B 5F               [ 1]   75 	clrw	x
      00002C 89               [ 2]   76 	pushw	x
      00002D 1E 43            [ 2]   77 	ldw	x, (0x43, sp)
      00002F 89               [ 2]   78 	pushw	x
      000030 1E 43            [ 2]   79 	ldw	x, (0x43, sp)
      000032 89               [ 2]   80 	pushw	x
      000033 CDr00r00         [ 4]   81 	call	___fslt
      000036 5B 08            [ 2]   82 	addw	sp, #8
      000038 4D               [ 1]   83 	tnz	a
      000039 27 11            [ 1]   84 	jreq	00102$
                                     85 ;	../sincosf.c: 64: { y=-x; sign=1; }
      00003B 16 3F            [ 2]   86 	ldw	y, (0x3f, sp)
      00003D 1E 3D            [ 2]   87 	ldw	x, (0x3d, sp)
      00003F 58               [ 2]   88 	sllw	x
      000040 8C               [ 1]   89 	ccf
      000041 56               [ 2]   90 	rrcw	x
      000042 17 39            [ 2]   91 	ldw	(0x39, sp), y
      000044 1F 37            [ 2]   92 	ldw	(0x37, sp), x
      000046 A6 01            [ 1]   93 	ld	a, #0x01
      000048 6B 01            [ 1]   94 	ld	(0x01, sp), a
      00004A 20 0A            [ 2]   95 	jra	00106$
      00004C                         96 00102$:
                                     97 ;	../sincosf.c: 66: { y=x; sign=0; }
      00004C 16 3F            [ 2]   98 	ldw	y, (0x3f, sp)
      00004E 17 39            [ 2]   99 	ldw	(0x39, sp), y
      000050 16 3D            [ 2]  100 	ldw	y, (0x3d, sp)
      000052 17 37            [ 2]  101 	ldw	(0x37, sp), y
      000054 0F 01            [ 1]  102 	clr	(0x01, sp)
      000056                        103 00106$:
                                    104 ;	../sincosf.c: 69: if(y>YMAX)
      000056 4B 00            [ 1]  105 	push	#0x00
      000058 4B 0C            [ 1]  106 	push	#0x0c
      00005A 4B 49            [ 1]  107 	push	#0x49
      00005C 4B 46            [ 1]  108 	push	#0x46
      00005E 1E 3D            [ 2]  109 	ldw	x, (0x3d, sp)
      000060 89               [ 2]  110 	pushw	x
      000061 1E 3D            [ 2]  111 	ldw	x, (0x3d, sp)
      000063 89               [ 2]  112 	pushw	x
      000064 CDr00r00         [ 4]  113 	call	___fsgt
      000067 5B 08            [ 2]  114 	addw	sp, #8
      000069 6B 36            [ 1]  115 	ld	(0x36, sp), a
      00006B 0D 36            [ 1]  116 	tnz	(0x36, sp)
      00006D 27 0C            [ 1]  117 	jreq	00108$
                                    118 ;	../sincosf.c: 71: errno=ERANGE;
      00006F AE 00 22         [ 2]  119 	ldw	x, #0x0022
      000072 CFu00u00         [ 2]  120 	ldw	_errno+0, x
                                    121 ;	../sincosf.c: 72: return 0.0;
      000075 5F               [ 1]  122 	clrw	x
      000076 90 5F            [ 1]  123 	clrw	y
      000078 CCr02r54         [ 2]  124 	jp	00115$
      00007B                        125 00108$:
                                    126 ;	../sincosf.c: 76: N=((y*iPI)+0.5); /*y is positive*/
      00007B 1E 39            [ 2]  127 	ldw	x, (0x39, sp)
      00007D 89               [ 2]  128 	pushw	x
      00007E 1E 39            [ 2]  129 	ldw	x, (0x39, sp)
      000080 89               [ 2]  130 	pushw	x
      000081 4B 83            [ 1]  131 	push	#0x83
      000083 4B F9            [ 1]  132 	push	#0xf9
      000085 4B A2            [ 1]  133 	push	#0xa2
      000087 4B 3E            [ 1]  134 	push	#0x3e
      000089 CDr00r00         [ 4]  135 	call	___fsmul
      00008C 5B 08            [ 2]  136 	addw	sp, #8
      00008E 4B 00            [ 1]  137 	push	#0x00
      000090 4B 00            [ 1]  138 	push	#0x00
      000092 4B 00            [ 1]  139 	push	#0x00
      000094 4B 3F            [ 1]  140 	push	#0x3f
      000096 89               [ 2]  141 	pushw	x
      000097 90 89            [ 2]  142 	pushw	y
      000099 CDr00r00         [ 4]  143 	call	___fsadd
      00009C 5B 08            [ 2]  144 	addw	sp, #8
      00009E 89               [ 2]  145 	pushw	x
      00009F 90 89            [ 2]  146 	pushw	y
      0000A1 CDr00r00         [ 4]  147 	call	___fs2sint
      0000A4 5B 04            [ 2]  148 	addw	sp, #4
                                    149 ;	../sincosf.c: 79: if(N&1) sign=!sign;
      0000A6 9F               [ 1]  150 	ld	a, xl
      0000A7 44               [ 1]  151 	srl	a
      0000A8 24 08            [ 1]  152 	jrnc	00110$
      0000AA 7B 01            [ 1]  153 	ld	a, (0x01, sp)
      0000AC A0 01            [ 1]  154 	sub	a, #0x01
      0000AE 4F               [ 1]  155 	clr	a
      0000AF 49               [ 1]  156 	rlc	a
      0000B0 6B 01            [ 1]  157 	ld	(0x01, sp), a
      0000B2                        158 00110$:
                                    159 ;	../sincosf.c: 81: XN=N;
      0000B2 89               [ 2]  160 	pushw	x
      0000B3 CDr00r00         [ 4]  161 	call	___sint2fs
      0000B6 5B 02            [ 2]  162 	addw	sp, #2
      0000B8 1F 04            [ 2]  163 	ldw	(0x04, sp), x
      0000BA 17 02            [ 2]  164 	ldw	(0x02, sp), y
                                    165 ;	../sincosf.c: 83: if(iscos) XN-=0.5;
      0000BC 0D 41            [ 1]  166 	tnz	(0x41, sp)
      0000BE 27 1D            [ 1]  167 	jreq	00112$
      0000C0 5F               [ 1]  168 	clrw	x
      0000C1 89               [ 2]  169 	pushw	x
      0000C2 4B 00            [ 1]  170 	push	#0x00
      0000C4 4B 3F            [ 1]  171 	push	#0x3f
      0000C6 1E 08            [ 2]  172 	ldw	x, (0x08, sp)
      0000C8 89               [ 2]  173 	pushw	x
      0000C9 1E 08            [ 2]  174 	ldw	x, (0x08, sp)
      0000CB 89               [ 2]  175 	pushw	x
      0000CC CDr00r00         [ 4]  176 	call	___fssub
      0000CF 5B 08            [ 2]  177 	addw	sp, #8
      0000D1 1F 34            [ 2]  178 	ldw	(0x34, sp), x
      0000D3 17 32            [ 2]  179 	ldw	(0x32, sp), y
      0000D5 16 34            [ 2]  180 	ldw	y, (0x34, sp)
      0000D7 17 04            [ 2]  181 	ldw	(0x04, sp), y
      0000D9 16 32            [ 2]  182 	ldw	y, (0x32, sp)
      0000DB 17 02            [ 2]  183 	ldw	(0x02, sp), y
      0000DD                        184 00112$:
                                    185 ;	../sincosf.c: 85: y=fabsf(x);
      0000DD 1E 3F            [ 2]  186 	ldw	x, (0x3f, sp)
      0000DF 89               [ 2]  187 	pushw	x
      0000E0 1E 3F            [ 2]  188 	ldw	x, (0x3f, sp)
      0000E2 89               [ 2]  189 	pushw	x
      0000E3 CDr00r00         [ 4]  190 	call	_fabsf
      0000E6 5B 04            [ 2]  191 	addw	sp, #4
      0000E8 1F 10            [ 2]  192 	ldw	(0x10, sp), x
      0000EA 17 0E            [ 2]  193 	ldw	(0x0e, sp), y
                                    194 ;	../sincosf.c: 86: r=(int)y;
      0000EC 1E 10            [ 2]  195 	ldw	x, (0x10, sp)
      0000EE 89               [ 2]  196 	pushw	x
      0000EF 1E 10            [ 2]  197 	ldw	x, (0x10, sp)
      0000F1 89               [ 2]  198 	pushw	x
      0000F2 CDr00r00         [ 4]  199 	call	___fs2sint
      0000F5 5B 04            [ 2]  200 	addw	sp, #4
      0000F7 89               [ 2]  201 	pushw	x
      0000F8 CDr00r00         [ 4]  202 	call	___sint2fs
      0000FB 5B 02            [ 2]  203 	addw	sp, #2
      0000FD 1F 30            [ 2]  204 	ldw	(0x30, sp), x
      0000FF 17 2E            [ 2]  205 	ldw	(0x2e, sp), y
                                    206 ;	../sincosf.c: 87: g=y-r;
      000101 1E 30            [ 2]  207 	ldw	x, (0x30, sp)
      000103 89               [ 2]  208 	pushw	x
      000104 1E 30            [ 2]  209 	ldw	x, (0x30, sp)
      000106 89               [ 2]  210 	pushw	x
      000107 1E 14            [ 2]  211 	ldw	x, (0x14, sp)
      000109 89               [ 2]  212 	pushw	x
      00010A 1E 14            [ 2]  213 	ldw	x, (0x14, sp)
      00010C 89               [ 2]  214 	pushw	x
      00010D CDr00r00         [ 4]  215 	call	___fssub
      000110 5B 08            [ 2]  216 	addw	sp, #8
      000112 1F 2C            [ 2]  217 	ldw	(0x2c, sp), x
      000114 17 2A            [ 2]  218 	ldw	(0x2a, sp), y
                                    219 ;	../sincosf.c: 88: f=((r-XN*C1)+g)-XN*C2;
      000116 1E 04            [ 2]  220 	ldw	x, (0x04, sp)
      000118 89               [ 2]  221 	pushw	x
      000119 1E 04            [ 2]  222 	ldw	x, (0x04, sp)
      00011B 89               [ 2]  223 	pushw	x
      00011C 5F               [ 1]  224 	clrw	x
      00011D 89               [ 2]  225 	pushw	x
      00011E 4B 49            [ 1]  226 	push	#0x49
      000120 4B 40            [ 1]  227 	push	#0x40
      000122 CDr00r00         [ 4]  228 	call	___fsmul
      000125 5B 08            [ 2]  229 	addw	sp, #8
      000127 89               [ 2]  230 	pushw	x
      000128 90 89            [ 2]  231 	pushw	y
      00012A 1E 34            [ 2]  232 	ldw	x, (0x34, sp)
      00012C 89               [ 2]  233 	pushw	x
      00012D 1E 34            [ 2]  234 	ldw	x, (0x34, sp)
      00012F 89               [ 2]  235 	pushw	x
      000130 CDr00r00         [ 4]  236 	call	___fssub
      000133 5B 08            [ 2]  237 	addw	sp, #8
      000135 1F 28            [ 2]  238 	ldw	(0x28, sp), x
      000137 1E 2C            [ 2]  239 	ldw	x, (0x2c, sp)
      000139 89               [ 2]  240 	pushw	x
      00013A 1E 2C            [ 2]  241 	ldw	x, (0x2c, sp)
      00013C 89               [ 2]  242 	pushw	x
      00013D 1E 2C            [ 2]  243 	ldw	x, (0x2c, sp)
      00013F 89               [ 2]  244 	pushw	x
      000140 90 89            [ 2]  245 	pushw	y
      000142 CDr00r00         [ 4]  246 	call	___fsadd
      000145 5B 08            [ 2]  247 	addw	sp, #8
      000147 1F 24            [ 2]  248 	ldw	(0x24, sp), x
      000149 17 22            [ 2]  249 	ldw	(0x22, sp), y
      00014B 1E 04            [ 2]  250 	ldw	x, (0x04, sp)
      00014D 89               [ 2]  251 	pushw	x
      00014E 1E 04            [ 2]  252 	ldw	x, (0x04, sp)
      000150 89               [ 2]  253 	pushw	x
      000151 4B 22            [ 1]  254 	push	#0x22
      000153 4B AA            [ 1]  255 	push	#0xaa
      000155 4B 7D            [ 1]  256 	push	#0x7d
      000157 4B 3A            [ 1]  257 	push	#0x3a
      000159 CDr00r00         [ 4]  258 	call	___fsmul
      00015C 5B 08            [ 2]  259 	addw	sp, #8
      00015E 89               [ 2]  260 	pushw	x
      00015F 90 89            [ 2]  261 	pushw	y
      000161 1E 28            [ 2]  262 	ldw	x, (0x28, sp)
      000163 89               [ 2]  263 	pushw	x
      000164 1E 28            [ 2]  264 	ldw	x, (0x28, sp)
      000166 89               [ 2]  265 	pushw	x
      000167 CDr00r00         [ 4]  266 	call	___fssub
      00016A 5B 08            [ 2]  267 	addw	sp, #8
      00016C 1F 0C            [ 2]  268 	ldw	(0x0c, sp), x
      00016E 17 0A            [ 2]  269 	ldw	(0x0a, sp), y
                                    270 ;	../sincosf.c: 90: g=f*f;
      000170 1E 0C            [ 2]  271 	ldw	x, (0x0c, sp)
      000172 89               [ 2]  272 	pushw	x
      000173 1E 0C            [ 2]  273 	ldw	x, (0x0c, sp)
      000175 89               [ 2]  274 	pushw	x
      000176 1E 10            [ 2]  275 	ldw	x, (0x10, sp)
      000178 89               [ 2]  276 	pushw	x
      000179 1E 10            [ 2]  277 	ldw	x, (0x10, sp)
      00017B 89               [ 2]  278 	pushw	x
      00017C CDr00r00         [ 4]  279 	call	___fsmul
      00017F 5B 08            [ 2]  280 	addw	sp, #8
      000181 1F 08            [ 2]  281 	ldw	(0x08, sp), x
      000183 17 06            [ 2]  282 	ldw	(0x06, sp), y
                                    283 ;	../sincosf.c: 91: if(g>EPS2) //Used to be if(fabsf(f)>EPS)
      000185 4B F3            [ 1]  284 	push	#0xf3
      000187 4B FF            [ 1]  285 	push	#0xff
      000189 4B 7F            [ 1]  286 	push	#0x7f
      00018B 4B 33            [ 1]  287 	push	#0x33
      00018D 1E 0C            [ 2]  288 	ldw	x, (0x0c, sp)
      00018F 89               [ 2]  289 	pushw	x
      000190 1E 0C            [ 2]  290 	ldw	x, (0x0c, sp)
      000192 89               [ 2]  291 	pushw	x
      000193 CDr00r00         [ 4]  292 	call	___fsgt
      000196 5B 08            [ 2]  293 	addw	sp, #8
      000198 4D               [ 1]  294 	tnz	a
      000199 26 03            [ 1]  295 	jrne	00152$
      00019B CCr02r37         [ 2]  296 	jp	00114$
      00019E                        297 00152$:
                                    298 ;	../sincosf.c: 93: r=(((r4*g+r3)*g+r2)*g+r1)*g;
      00019E 1E 08            [ 2]  299 	ldw	x, (0x08, sp)
      0001A0 89               [ 2]  300 	pushw	x
      0001A1 1E 08            [ 2]  301 	ldw	x, (0x08, sp)
      0001A3 89               [ 2]  302 	pushw	x
      0001A4 4B 5B            [ 1]  303 	push	#0x5b
      0001A6 4B 9C            [ 1]  304 	push	#0x9c
      0001A8 4B 2E            [ 1]  305 	push	#0x2e
      0001AA 4B 36            [ 1]  306 	push	#0x36
      0001AC CDr00r00         [ 4]  307 	call	___fsmul
      0001AF 5B 08            [ 2]  308 	addw	sp, #8
      0001B1 4B 22            [ 1]  309 	push	#0x22
      0001B3 4B B2            [ 1]  310 	push	#0xb2
      0001B5 4B 4F            [ 1]  311 	push	#0x4f
      0001B7 4B B9            [ 1]  312 	push	#0xb9
      0001B9 89               [ 2]  313 	pushw	x
      0001BA 90 89            [ 2]  314 	pushw	y
      0001BC CDr00r00         [ 4]  315 	call	___fsadd
      0001BF 5B 08            [ 2]  316 	addw	sp, #8
      0001C1 1F 20            [ 2]  317 	ldw	(0x20, sp), x
      0001C3 1E 08            [ 2]  318 	ldw	x, (0x08, sp)
      0001C5 89               [ 2]  319 	pushw	x
      0001C6 1E 08            [ 2]  320 	ldw	x, (0x08, sp)
      0001C8 89               [ 2]  321 	pushw	x
      0001C9 1E 24            [ 2]  322 	ldw	x, (0x24, sp)
      0001CB 89               [ 2]  323 	pushw	x
      0001CC 90 89            [ 2]  324 	pushw	y
      0001CE CDr00r00         [ 4]  325 	call	___fsmul
      0001D1 5B 08            [ 2]  326 	addw	sp, #8
      0001D3 4B 3E            [ 1]  327 	push	#0x3e
      0001D5 4B 87            [ 1]  328 	push	#0x87
      0001D7 4B 08            [ 1]  329 	push	#0x08
      0001D9 4B 3C            [ 1]  330 	push	#0x3c
      0001DB 89               [ 2]  331 	pushw	x
      0001DC 90 89            [ 2]  332 	pushw	y
      0001DE CDr00r00         [ 4]  333 	call	___fsadd
      0001E1 5B 08            [ 2]  334 	addw	sp, #8
      0001E3 1F 1C            [ 2]  335 	ldw	(0x1c, sp), x
      0001E5 1E 08            [ 2]  336 	ldw	x, (0x08, sp)
      0001E7 89               [ 2]  337 	pushw	x
      0001E8 1E 08            [ 2]  338 	ldw	x, (0x08, sp)
      0001EA 89               [ 2]  339 	pushw	x
      0001EB 1E 20            [ 2]  340 	ldw	x, (0x20, sp)
      0001ED 89               [ 2]  341 	pushw	x
      0001EE 90 89            [ 2]  342 	pushw	y
      0001F0 CDr00r00         [ 4]  343 	call	___fsmul
      0001F3 5B 08            [ 2]  344 	addw	sp, #8
      0001F5 4B A4            [ 1]  345 	push	#0xa4
      0001F7 4B AA            [ 1]  346 	push	#0xaa
      0001F9 4B 2A            [ 1]  347 	push	#0x2a
      0001FB 4B BE            [ 1]  348 	push	#0xbe
      0001FD 89               [ 2]  349 	pushw	x
      0001FE 90 89            [ 2]  350 	pushw	y
      000200 CDr00r00         [ 4]  351 	call	___fsadd
      000203 5B 08            [ 2]  352 	addw	sp, #8
      000205 1F 18            [ 2]  353 	ldw	(0x18, sp), x
      000207 1E 08            [ 2]  354 	ldw	x, (0x08, sp)
      000209 89               [ 2]  355 	pushw	x
      00020A 1E 08            [ 2]  356 	ldw	x, (0x08, sp)
      00020C 89               [ 2]  357 	pushw	x
      00020D 1E 1C            [ 2]  358 	ldw	x, (0x1c, sp)
      00020F 89               [ 2]  359 	pushw	x
      000210 90 89            [ 2]  360 	pushw	y
      000212 CDr00r00         [ 4]  361 	call	___fsmul
      000215 5B 08            [ 2]  362 	addw	sp, #8
                                    363 ;	../sincosf.c: 94: f+=f*r;
      000217 89               [ 2]  364 	pushw	x
      000218 90 89            [ 2]  365 	pushw	y
      00021A 1E 10            [ 2]  366 	ldw	x, (0x10, sp)
      00021C 89               [ 2]  367 	pushw	x
      00021D 1E 10            [ 2]  368 	ldw	x, (0x10, sp)
      00021F 89               [ 2]  369 	pushw	x
      000220 CDr00r00         [ 4]  370 	call	___fsmul
      000223 5B 08            [ 2]  371 	addw	sp, #8
      000225 89               [ 2]  372 	pushw	x
      000226 90 89            [ 2]  373 	pushw	y
      000228 1E 10            [ 2]  374 	ldw	x, (0x10, sp)
      00022A 89               [ 2]  375 	pushw	x
      00022B 1E 10            [ 2]  376 	ldw	x, (0x10, sp)
      00022D 89               [ 2]  377 	pushw	x
      00022E CDr00r00         [ 4]  378 	call	___fsadd
      000231 5B 08            [ 2]  379 	addw	sp, #8
      000233 1F 0C            [ 2]  380 	ldw	(0x0c, sp), x
      000235 17 0A            [ 2]  381 	ldw	(0x0a, sp), y
      000237                        382 00114$:
                                    383 ;	../sincosf.c: 96: return (sign?-f:f);
      000237 0D 01            [ 1]  384 	tnz	(0x01, sp)
      000239 27 0D            [ 1]  385 	jreq	00117$
      00023B 16 0C            [ 2]  386 	ldw	y, (0x0c, sp)
      00023D 1E 0A            [ 2]  387 	ldw	x, (0x0a, sp)
      00023F 58               [ 2]  388 	sllw	x
      000240 8C               [ 1]  389 	ccf
      000241 56               [ 2]  390 	rrcw	x
      000242 17 14            [ 2]  391 	ldw	(0x14, sp), y
      000244 1F 12            [ 2]  392 	ldw	(0x12, sp), x
      000246 20 08            [ 2]  393 	jra	00118$
      000248                        394 00117$:
      000248 16 0C            [ 2]  395 	ldw	y, (0x0c, sp)
      00024A 17 14            [ 2]  396 	ldw	(0x14, sp), y
      00024C 16 0A            [ 2]  397 	ldw	y, (0x0a, sp)
      00024E 17 12            [ 2]  398 	ldw	(0x12, sp), y
      000250                        399 00118$:
      000250 1E 14            [ 2]  400 	ldw	x, (0x14, sp)
      000252 16 12            [ 2]  401 	ldw	y, (0x12, sp)
      000254                        402 00115$:
      000254 5B 3A            [ 2]  403 	addw	sp, #58
      000256 81               [ 4]  404 	ret
                                    405 	.area CODE
                                    406 	.area INITIALIZER
                                    407 	.area CABS (ABS)
