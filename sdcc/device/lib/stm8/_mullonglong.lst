                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:40:51 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _mullonglong
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __mullonglong
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; absolute external ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DABS (ABS)
                                     25 ;--------------------------------------------------------
                                     26 ; global & static initialisations
                                     27 ;--------------------------------------------------------
                                     28 	.area HOME
                                     29 	.area GSINIT
                                     30 	.area GSFINAL
                                     31 	.area GSINIT
                                     32 ;--------------------------------------------------------
                                     33 ; Home
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
                                     36 	.area HOME
                                     37 ;--------------------------------------------------------
                                     38 ; code
                                     39 ;--------------------------------------------------------
                                     40 	.area CODE
                                     41 ;	../_mullonglong.c: 35: long long _mullonglong(long long ll, long long lr)
                                     42 ;	-----------------------------------------
                                     43 ;	 function _mullonglong
                                     44 ;	-----------------------------------------
      000000                         45 __mullonglong:
      000000 52 24            [ 2]   46 	sub	sp, #36
                                     47 ;	../_mullonglong.c: 37: unsigned long long ret = 0ull;
      000002 5F               [ 1]   48 	clrw	x
      000003 1F 0D            [ 2]   49 	ldw	(0x0d, sp), x
      000005 1F 0B            [ 2]   50 	ldw	(0x0b, sp), x
      000007 1F 09            [ 2]   51 	ldw	(0x09, sp), x
      000009 1F 07            [ 2]   52 	ldw	(0x07, sp), x
                                     53 ;	../_mullonglong.c: 38: unsigned char *l = (unsigned char *)(&ll);
      00000B 96               [ 1]   54 	ldw	x, sp
      00000C 1C 00 27         [ 2]   55 	addw	x, #39
      00000F 1F 05            [ 2]   56 	ldw	(0x05, sp), x
                                     57 ;	../_mullonglong.c: 39: unsigned char *r = (unsigned char *)(&lr);
      000011 96               [ 1]   58 	ldw	x, sp
      000012 1C 00 2F         [ 2]   59 	addw	x, #47
      000015 1F 03            [ 2]   60 	ldw	(0x03, sp), x
                                     61 ;	../_mullonglong.c: 42: for (i = 0; i < sizeof (long long); i++)
      000017 0F 02            [ 1]   62 	clr	(0x02, sp)
                                     63 ;	../_mullonglong.c: 44: for(j = 0; (i + j) < sizeof (long long); j++)
      000019                         64 00111$:
      000019 5F               [ 1]   65 	clrw	x
      00001A 7B 02            [ 1]   66 	ld	a, (0x02, sp)
      00001C 97               [ 1]   67 	ld	xl, a
      00001D 72 FB 05         [ 2]   68 	addw	x, (0x05, sp)
      000020 1F 23            [ 2]   69 	ldw	(0x23, sp), x
      000022 0F 01            [ 1]   70 	clr	(0x01, sp)
      000024                         71 00104$:
      000024 7B 02            [ 1]   72 	ld	a, (0x02, sp)
      000026 6B 22            [ 1]   73 	ld	(0x22, sp), a
      000028 0F 21            [ 1]   74 	clr	(0x21, sp)
      00002A 7B 01            [ 1]   75 	ld	a, (0x01, sp)
      00002C 6B 20            [ 1]   76 	ld	(0x20, sp), a
      00002E 0F 1F            [ 1]   77 	clr	(0x1f, sp)
      000030 1E 21            [ 2]   78 	ldw	x, (0x21, sp)
      000032 72 FB 1F         [ 2]   79 	addw	x, (0x1f, sp)
      000035 A3 00 08         [ 2]   80 	cpw	x, #0x0008
      000038 2E 61            [ 1]   81 	jrsge	00107$
                                     82 ;	../_mullonglong.c: 45: ret += ((unsigned short)(l[i] * r [j])) << ((i + j) * 8);
      00003A 16 23            [ 2]   83 	ldw	y, (0x23, sp)
      00003C 90 F6            [ 1]   84 	ld	a, (y)
      00003E 90 5F            [ 1]   85 	clrw	y
      000040 61               [ 1]   86 	exg	a, yl
      000041 7B 01            [ 1]   87 	ld	a, (0x01, sp)
      000043 61               [ 1]   88 	exg	a, yl
      000044 72 F9 03         [ 2]   89 	addw	y, (0x03, sp)
      000047 88               [ 1]   90 	push	a
      000048 90 F6            [ 1]   91 	ld	a, (y)
      00004A 90 97            [ 1]   92 	ld	yl, a
      00004C 84               [ 1]   93 	pop	a
      00004D 90 42            [ 4]   94 	mul	y, a
      00004F 58               [ 2]   95 	sllw	x
      000050 58               [ 2]   96 	sllw	x
      000051 58               [ 2]   97 	sllw	x
      000052 9F               [ 1]   98 	ld	a, xl
      000053 4D               [ 1]   99 	tnz	a
      000054 27 05            [ 1]  100 	jreq	00130$
      000056                        101 00129$:
      000056 90 58            [ 2]  102 	sllw	y
      000058 4A               [ 1]  103 	dec	a
      000059 26 FB            [ 1]  104 	jrne	00129$
      00005B                        105 00130$:
      00005B 5F               [ 1]  106 	clrw	x
      00005C 0F 1A            [ 1]  107 	clr	(0x1a, sp)
      00005E 0F 19            [ 1]  108 	clr	(0x19, sp)
      000060 0F 18            [ 1]  109 	clr	(0x18, sp)
      000062 0F 17            [ 1]  110 	clr	(0x17, sp)
      000064 72 F9 0D         [ 2]  111 	addw	y, (0x0d, sp)
      000067 17 15            [ 2]  112 	ldw	(0x15, sp), y
      000069 9F               [ 1]  113 	ld	a, xl
      00006A 19 0C            [ 1]  114 	adc	a, (0x0c, sp)
      00006C 6B 14            [ 1]  115 	ld	(0x14, sp), a
      00006E 9E               [ 1]  116 	ld	a, xh
      00006F 19 0B            [ 1]  117 	adc	a, (0x0b, sp)
      000071 88               [ 1]  118 	push	a
      000072 7B 1B            [ 1]  119 	ld	a, (0x1b, sp)
      000074 19 0B            [ 1]  120 	adc	a, (0x0b, sp)
      000076 90 97            [ 1]  121 	ld	yl, a
      000078 7B 1A            [ 1]  122 	ld	a, (0x1a, sp)
      00007A 19 0A            [ 1]  123 	adc	a, (0x0a, sp)
      00007C 90 95            [ 1]  124 	ld	yh, a
      00007E 7B 19            [ 1]  125 	ld	a, (0x19, sp)
      000080 19 09            [ 1]  126 	adc	a, (0x09, sp)
      000082 97               [ 1]  127 	ld	xl, a
      000083 7B 18            [ 1]  128 	ld	a, (0x18, sp)
      000085 19 08            [ 1]  129 	adc	a, (0x08, sp)
      000087 95               [ 1]  130 	ld	xh, a
      000088 84               [ 1]  131 	pop	a
      000089 6B 0B            [ 1]  132 	ld	(0x0b, sp), a
      00008B 17 09            [ 2]  133 	ldw	(0x09, sp), y
      00008D 1F 07            [ 2]  134 	ldw	(0x07, sp), x
      00008F 16 15            [ 2]  135 	ldw	y, (0x15, sp)
      000091 17 0D            [ 2]  136 	ldw	(0x0d, sp), y
      000093 7B 14            [ 1]  137 	ld	a, (0x14, sp)
      000095 6B 0C            [ 1]  138 	ld	(0x0c, sp), a
                                    139 ;	../_mullonglong.c: 44: for(j = 0; (i + j) < sizeof (long long); j++)
      000097 0C 01            [ 1]  140 	inc	(0x01, sp)
      000099 20 89            [ 2]  141 	jra	00104$
      00009B                        142 00107$:
                                    143 ;	../_mullonglong.c: 42: for (i = 0; i < sizeof (long long); i++)
      00009B 0C 02            [ 1]  144 	inc	(0x02, sp)
      00009D 7B 02            [ 1]  145 	ld	a, (0x02, sp)
      00009F A1 08            [ 1]  146 	cp	a, #0x08
      0000A1 24 03            [ 1]  147 	jrnc	00131$
      0000A3 CCr00r19         [ 2]  148 	jp	00111$
      0000A6                        149 00131$:
                                    150 ;	../_mullonglong.c: 48: return(ret);
      0000A6 1E 27            [ 2]  151 	ldw	x, (0x27, sp)
      0000A8 16 0D            [ 2]  152 	ldw	y, (0x0d, sp)
      0000AA EF 06            [ 2]  153 	ldw	(#6, x), y
      0000AC 16 0B            [ 2]  154 	ldw	y, (0x0b, sp)
      0000AE EF 04            [ 2]  155 	ldw	(#4, x), y
      0000B0 16 09            [ 2]  156 	ldw	y, (0x09, sp)
      0000B2 EF 02            [ 2]  157 	ldw	(#2, x), y
      0000B4 16 07            [ 2]  158 	ldw	y, (0x07, sp)
      0000B6 FF               [ 2]  159 	ldw	(x), y
      0000B7 5B 24            [ 2]  160 	addw	sp, #36
      0000B9 81               [ 4]  161 	ret
                                    162 	.area CODE
                                    163 	.area INITIALIZER
                                    164 	.area CABS (ABS)
