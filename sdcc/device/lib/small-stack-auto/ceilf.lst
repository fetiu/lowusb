                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:35 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module ceilf
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ceilf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'ceilf'
                                     92 ;------------------------------------------------------------
                                     93 ;x                         Allocated to stack - _bp +5
                                     94 ;r                         Allocated to stack - _bp +9
                                     95 ;sloc0                     Allocated to stack - _bp +1
                                     96 ;------------------------------------------------------------
                                     97 ;	ceilf.c:33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     98 ;	-----------------------------------------
                                     99 ;	 function ceilf
                                    100 ;	-----------------------------------------
      000000                        101 _ceilf:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 C0*00            [24]  110 	push	_bp
      000002 85 81*00         [24]  111 	mov	_bp,sp
      000005 C8               [12]  112 	xch	a,r0
      000006 E5 81            [12]  113 	mov	a,sp
      000008 24 0C            [12]  114 	add	a,#0x0C
      00000A F5 81            [12]  115 	mov	sp,a
      00000C E5*00            [12]  116 	mov	a,_bp
      00000E 24 05            [12]  117 	add	a,#0x05
      000010 C8               [12]  118 	xch	a,r0
      000011 A6 82            [24]  119 	mov	@r0,dpl
      000013 08               [12]  120 	inc	r0
      000014 A6 83            [24]  121 	mov	@r0,dph
      000016 08               [12]  122 	inc	r0
      000017 A6 F0            [24]  123 	mov	@r0,b
      000019 08               [12]  124 	inc	r0
      00001A F6               [12]  125 	mov	@r0,a
                                    126 ;	ceilf.c:36: r=x;
      00001B E5*00            [12]  127 	mov	a,_bp
      00001D 24 05            [12]  128 	add	a,#0x05
      00001F F8               [12]  129 	mov	r0,a
      000020 86 82            [24]  130 	mov	dpl,@r0
      000022 08               [12]  131 	inc	r0
      000023 86 83            [24]  132 	mov	dph,@r0
      000025 08               [12]  133 	inc	r0
      000026 86 F0            [24]  134 	mov	b,@r0
      000028 08               [12]  135 	inc	r0
      000029 E6               [12]  136 	mov	a,@r0
      00002A 12r00r00         [24]  137 	lcall	___fs2slong
      00002D AF 82            [24]  138 	mov	r7,dpl
      00002F AE 83            [24]  139 	mov	r6,dph
      000031 AD F0            [24]  140 	mov	r5,b
      000033 FC               [12]  141 	mov	r4,a
      000034 E5*00            [12]  142 	mov	a,_bp
      000036 24 09            [12]  143 	add	a,#0x09
      000038 F8               [12]  144 	mov	r0,a
      000039 A6 07            [24]  145 	mov	@r0,ar7
      00003B 08               [12]  146 	inc	r0
      00003C A6 06            [24]  147 	mov	@r0,ar6
      00003E 08               [12]  148 	inc	r0
      00003F A6 05            [24]  149 	mov	@r0,ar5
      000041 08               [12]  150 	inc	r0
      000042 A6 04            [24]  151 	mov	@r0,ar4
                                    152 ;	ceilf.c:37: if (r<0)
      000044 E5*00            [12]  153 	mov	a,_bp
      000046 24 09            [12]  154 	add	a,#0x09
      000048 F8               [12]  155 	mov	r0,a
      000049 08               [12]  156 	inc	r0
      00004A 08               [12]  157 	inc	r0
      00004B 08               [12]  158 	inc	r0
      00004C E6               [12]  159 	mov	a,@r0
      00004D 30 E7 2F         [24]  160 	jnb	acc.7,00102$
                                    161 ;	ceilf.c:38: return r;
      000050 E5*00            [12]  162 	mov	a,_bp
      000052 24 09            [12]  163 	add	a,#0x09
      000054 F8               [12]  164 	mov	r0,a
      000055 86 82            [24]  165 	mov	dpl,@r0
      000057 08               [12]  166 	inc	r0
      000058 86 83            [24]  167 	mov	dph,@r0
      00005A 08               [12]  168 	inc	r0
      00005B 86 F0            [24]  169 	mov	b,@r0
      00005D 08               [12]  170 	inc	r0
      00005E E6               [12]  171 	mov	a,@r0
      00005F 12r00r00         [24]  172 	lcall	___slong2fs
      000062 A8*00            [24]  173 	mov	r0,_bp
      000064 08               [12]  174 	inc	r0
      000065 A6 82            [24]  175 	mov	@r0,dpl
      000067 08               [12]  176 	inc	r0
      000068 A6 83            [24]  177 	mov	@r0,dph
      00006A 08               [12]  178 	inc	r0
      00006B A6 F0            [24]  179 	mov	@r0,b
      00006D 08               [12]  180 	inc	r0
      00006E F6               [12]  181 	mov	@r0,a
      00006F A8*00            [24]  182 	mov	r0,_bp
      000071 08               [12]  183 	inc	r0
      000072 86 82            [24]  184 	mov	dpl,@r0
      000074 08               [12]  185 	inc	r0
      000075 86 83            [24]  186 	mov	dph,@r0
      000077 08               [12]  187 	inc	r0
      000078 86 F0            [24]  188 	mov	b,@r0
      00007A 08               [12]  189 	inc	r0
      00007B E6               [12]  190 	mov	a,@r0
      00007C 02r00rF1         [24]  191 	ljmp	00104$
      00007F                        192 00102$:
                                    193 ;	ceilf.c:40: return (r+((r<x)?1:0));
      00007F E5*00            [12]  194 	mov	a,_bp
      000081 24 09            [12]  195 	add	a,#0x09
      000083 F8               [12]  196 	mov	r0,a
      000084 86 82            [24]  197 	mov	dpl,@r0
      000086 08               [12]  198 	inc	r0
      000087 86 83            [24]  199 	mov	dph,@r0
      000089 08               [12]  200 	inc	r0
      00008A 86 F0            [24]  201 	mov	b,@r0
      00008C 08               [12]  202 	inc	r0
      00008D E6               [12]  203 	mov	a,@r0
      00008E 12r00r00         [24]  204 	lcall	___slong2fs
      000091 AC 82            [24]  205 	mov	r4,dpl
      000093 AD 83            [24]  206 	mov	r5,dph
      000095 AE F0            [24]  207 	mov	r6,b
      000097 FF               [12]  208 	mov	r7,a
      000098 E5*00            [12]  209 	mov	a,_bp
      00009A 24 05            [12]  210 	add	a,#0x05
      00009C F8               [12]  211 	mov	r0,a
      00009D E6               [12]  212 	mov	a,@r0
      00009E C0 E0            [24]  213 	push	acc
      0000A0 08               [12]  214 	inc	r0
      0000A1 E6               [12]  215 	mov	a,@r0
      0000A2 C0 E0            [24]  216 	push	acc
      0000A4 08               [12]  217 	inc	r0
      0000A5 E6               [12]  218 	mov	a,@r0
      0000A6 C0 E0            [24]  219 	push	acc
      0000A8 08               [12]  220 	inc	r0
      0000A9 E6               [12]  221 	mov	a,@r0
      0000AA C0 E0            [24]  222 	push	acc
      0000AC 8C 82            [24]  223 	mov	dpl,r4
      0000AE 8D 83            [24]  224 	mov	dph,r5
      0000B0 8E F0            [24]  225 	mov	b,r6
      0000B2 EF               [12]  226 	mov	a,r7
      0000B3 12r00r00         [24]  227 	lcall	___fslt
      0000B6 AF 82            [24]  228 	mov	r7,dpl
      0000B8 E5 81            [12]  229 	mov	a,sp
      0000BA 24 FC            [12]  230 	add	a,#0xfc
      0000BC F5 81            [12]  231 	mov	sp,a
      0000BE EF               [12]  232 	mov	a,r7
      0000BF 60 04            [24]  233 	jz	00106$
      0000C1 7F 01            [12]  234 	mov	r7,#0x01
      0000C3 80 02            [24]  235 	sjmp	00107$
      0000C5                        236 00106$:
      0000C5 7F 00            [12]  237 	mov	r7,#0x00
      0000C7                        238 00107$:
      0000C7 E4               [12]  239 	clr	a
      0000C8 FE               [12]  240 	mov	r6,a
      0000C9 33               [12]  241 	rlc	a
      0000CA 95 E0            [12]  242 	subb	a,acc
      0000CC FD               [12]  243 	mov	r5,a
      0000CD FC               [12]  244 	mov	r4,a
      0000CE E5*00            [12]  245 	mov	a,_bp
      0000D0 24 09            [12]  246 	add	a,#0x09
      0000D2 F8               [12]  247 	mov	r0,a
      0000D3 EF               [12]  248 	mov	a,r7
      0000D4 26               [12]  249 	add	a,@r0
      0000D5 FF               [12]  250 	mov	r7,a
      0000D6 EE               [12]  251 	mov	a,r6
      0000D7 08               [12]  252 	inc	r0
      0000D8 36               [12]  253 	addc	a,@r0
      0000D9 FE               [12]  254 	mov	r6,a
      0000DA ED               [12]  255 	mov	a,r5
      0000DB 08               [12]  256 	inc	r0
      0000DC 36               [12]  257 	addc	a,@r0
      0000DD FD               [12]  258 	mov	r5,a
      0000DE EC               [12]  259 	mov	a,r4
      0000DF 08               [12]  260 	inc	r0
      0000E0 36               [12]  261 	addc	a,@r0
      0000E1 8F 82            [24]  262 	mov	dpl,r7
      0000E3 8E 83            [24]  263 	mov	dph,r6
      0000E5 8D F0            [24]  264 	mov	b,r5
      0000E7 12r00r00         [24]  265 	lcall	___slong2fs
      0000EA AC 82            [24]  266 	mov	r4,dpl
      0000EC AD 83            [24]  267 	mov	r5,dph
      0000EE AE F0            [24]  268 	mov	r6,b
      0000F0 FF               [12]  269 	mov	r7,a
      0000F1                        270 00104$:
      0000F1 85*00 81         [24]  271 	mov	sp,_bp
      0000F4 D0*00            [24]  272 	pop	_bp
      0000F6 22               [24]  273 	ret
                                    274 	.area CSEG    (CODE)
                                    275 	.area CONST   (CODE)
                                    276 	.area XINIT   (CODE)
                                    277 	.area CABS    (ABS,CODE)
