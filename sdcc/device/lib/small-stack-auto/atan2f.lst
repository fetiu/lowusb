                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:35 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'atan2f'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -6
                                     96 ;x                         Allocated to stack - _bp +5
                                     97 ;r                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +1
                                     99 ;------------------------------------------------------------
                                    100 ;	atan2f.c:34: float atan2f(float x, float y)
                                    101 ;	-----------------------------------------
                                    102 ;	 function atan2f
                                    103 ;	-----------------------------------------
      000000                        104 _atan2f:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C8               [12]  115 	xch	a,r0
      000006 E5 81            [12]  116 	mov	a,sp
      000008 24 0C            [12]  117 	add	a,#0x0C
      00000A F5 81            [12]  118 	mov	sp,a
      00000C E5*00            [12]  119 	mov	a,_bp
      00000E 24 05            [12]  120 	add	a,#0x05
      000010 C8               [12]  121 	xch	a,r0
      000011 A6 82            [24]  122 	mov	@r0,dpl
      000013 08               [12]  123 	inc	r0
      000014 A6 83            [24]  124 	mov	@r0,dph
      000016 08               [12]  125 	inc	r0
      000017 A6 F0            [24]  126 	mov	@r0,b
      000019 08               [12]  127 	inc	r0
      00001A F6               [12]  128 	mov	@r0,a
                                    129 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      00001B E5*00            [12]  130 	mov	a,_bp
      00001D 24 05            [12]  131 	add	a,#0x05
      00001F F8               [12]  132 	mov	r0,a
      000020 86 F0            [24]  133 	mov	b,@r0
      000022 08               [12]  134 	inc	r0
      000023 E6               [12]  135 	mov	a,@r0
      000024 42 F0            [12]  136 	orl	b,a
      000026 08               [12]  137 	inc	r0
      000027 E6               [12]  138 	mov	a,@r0
      000028 42 F0            [12]  139 	orl	b,a
      00002A 08               [12]  140 	inc	r0
      00002B E6               [12]  141 	mov	a,@r0
      00002C 54 7F            [12]  142 	anl	a,#0x7F
      00002E 45 F0            [12]  143 	orl	a,b
      000030 70 25            [24]  144 	jnz	00102$
      000032 E5*00            [12]  145 	mov	a,_bp
      000034 24 FA            [12]  146 	add	a,#0xfa
      000036 F8               [12]  147 	mov	r0,a
      000037 86 F0            [24]  148 	mov	b,@r0
      000039 08               [12]  149 	inc	r0
      00003A E6               [12]  150 	mov	a,@r0
      00003B 42 F0            [12]  151 	orl	b,a
      00003D 08               [12]  152 	inc	r0
      00003E E6               [12]  153 	mov	a,@r0
      00003F 42 F0            [12]  154 	orl	b,a
      000041 08               [12]  155 	inc	r0
      000042 E6               [12]  156 	mov	a,@r0
      000043 54 7F            [12]  157 	anl	a,#0x7F
      000045 45 F0            [12]  158 	orl	a,b
                                    159 ;	atan2f.c:40: errno=EDOM;
      000047 70 0E            [24]  160 	jnz	00102$
      000049 75*00 21         [24]  161 	mov	_errno,#0x21
      00004C F5*01            [12]  162 	mov	(_errno + 1),a
                                    163 ;	atan2f.c:41: return 0.0;
      00004E 90 00 00         [24]  164 	mov	dptr,#(0x00&0x00ff)
      000051 E4               [12]  165 	clr	a
      000052 F5 F0            [12]  166 	mov	b,a
      000054 02r02r78         [24]  167 	ljmp	00109$
      000057                        168 00102$:
                                    169 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      000057 E5*00            [12]  170 	mov	a,_bp
      000059 24 FA            [12]  171 	add	a,#0xfa
      00005B F8               [12]  172 	mov	r0,a
      00005C 86 82            [24]  173 	mov	dpl,@r0
      00005E 08               [12]  174 	inc	r0
      00005F 86 83            [24]  175 	mov	dph,@r0
      000061 08               [12]  176 	inc	r0
      000062 86 F0            [24]  177 	mov	b,@r0
      000064 08               [12]  178 	inc	r0
      000065 E6               [12]  179 	mov	a,@r0
      000066 12r00r00         [24]  180 	lcall	_fabsf
      000069 A8*00            [24]  181 	mov	r0,_bp
      00006B 08               [12]  182 	inc	r0
      00006C A6 82            [24]  183 	mov	@r0,dpl
      00006E 08               [12]  184 	inc	r0
      00006F A6 83            [24]  185 	mov	@r0,dph
      000071 08               [12]  186 	inc	r0
      000072 A6 F0            [24]  187 	mov	@r0,b
      000074 08               [12]  188 	inc	r0
      000075 F6               [12]  189 	mov	@r0,a
      000076 E5*00            [12]  190 	mov	a,_bp
      000078 24 05            [12]  191 	add	a,#0x05
      00007A F8               [12]  192 	mov	r0,a
      00007B 86 82            [24]  193 	mov	dpl,@r0
      00007D 08               [12]  194 	inc	r0
      00007E 86 83            [24]  195 	mov	dph,@r0
      000080 08               [12]  196 	inc	r0
      000081 86 F0            [24]  197 	mov	b,@r0
      000083 08               [12]  198 	inc	r0
      000084 E6               [12]  199 	mov	a,@r0
      000085 12r00r00         [24]  200 	lcall	_fabsf
      000088 AC 82            [24]  201 	mov	r4,dpl
      00008A AD 83            [24]  202 	mov	r5,dph
      00008C AE F0            [24]  203 	mov	r6,b
      00008E FF               [12]  204 	mov	r7,a
      00008F C0 04            [24]  205 	push	ar4
      000091 C0 05            [24]  206 	push	ar5
      000093 C0 06            [24]  207 	push	ar6
      000095 C0 07            [24]  208 	push	ar7
      000097 A8*00            [24]  209 	mov	r0,_bp
      000099 08               [12]  210 	inc	r0
      00009A 86 82            [24]  211 	mov	dpl,@r0
      00009C 08               [12]  212 	inc	r0
      00009D 86 83            [24]  213 	mov	dph,@r0
      00009F 08               [12]  214 	inc	r0
      0000A0 86 F0            [24]  215 	mov	b,@r0
      0000A2 08               [12]  216 	inc	r0
      0000A3 E6               [12]  217 	mov	a,@r0
      0000A4 12r00r00         [24]  218 	lcall	___fslt
      0000A7 AF 82            [24]  219 	mov	r7,dpl
      0000A9 E5 81            [12]  220 	mov	a,sp
      0000AB 24 FC            [12]  221 	add	a,#0xfc
      0000AD F5 81            [12]  222 	mov	sp,a
      0000AF EF               [12]  223 	mov	a,r7
      0000B0 60 03            [24]  224 	jz	00135$
      0000B2 02r01rA4         [24]  225 	ljmp	00107$
      0000B5                        226 00135$:
                                    227 ;	atan2f.c:46: r=atanf(x/y);
      0000B5 E5*00            [12]  228 	mov	a,_bp
      0000B7 24 FA            [12]  229 	add	a,#0xfa
      0000B9 F8               [12]  230 	mov	r0,a
      0000BA E6               [12]  231 	mov	a,@r0
      0000BB C0 E0            [24]  232 	push	acc
      0000BD 08               [12]  233 	inc	r0
      0000BE E6               [12]  234 	mov	a,@r0
      0000BF C0 E0            [24]  235 	push	acc
      0000C1 08               [12]  236 	inc	r0
      0000C2 E6               [12]  237 	mov	a,@r0
      0000C3 C0 E0            [24]  238 	push	acc
      0000C5 08               [12]  239 	inc	r0
      0000C6 E6               [12]  240 	mov	a,@r0
      0000C7 C0 E0            [24]  241 	push	acc
      0000C9 E5*00            [12]  242 	mov	a,_bp
      0000CB 24 05            [12]  243 	add	a,#0x05
      0000CD F8               [12]  244 	mov	r0,a
      0000CE 86 82            [24]  245 	mov	dpl,@r0
      0000D0 08               [12]  246 	inc	r0
      0000D1 86 83            [24]  247 	mov	dph,@r0
      0000D3 08               [12]  248 	inc	r0
      0000D4 86 F0            [24]  249 	mov	b,@r0
      0000D6 08               [12]  250 	inc	r0
      0000D7 E6               [12]  251 	mov	a,@r0
      0000D8 12r00r00         [24]  252 	lcall	___fsdiv
      0000DB AC 82            [24]  253 	mov	r4,dpl
      0000DD AD 83            [24]  254 	mov	r5,dph
      0000DF AE F0            [24]  255 	mov	r6,b
      0000E1 FF               [12]  256 	mov	r7,a
      0000E2 E5 81            [12]  257 	mov	a,sp
      0000E4 24 FC            [12]  258 	add	a,#0xfc
      0000E6 F5 81            [12]  259 	mov	sp,a
      0000E8 8C 82            [24]  260 	mov	dpl,r4
      0000EA 8D 83            [24]  261 	mov	dph,r5
      0000EC 8E F0            [24]  262 	mov	b,r6
      0000EE EF               [12]  263 	mov	a,r7
      0000EF 12r00r00         [24]  264 	lcall	_atanf
      0000F2 AC 82            [24]  265 	mov	r4,dpl
      0000F4 AD 83            [24]  266 	mov	r5,dph
      0000F6 AE F0            [24]  267 	mov	r6,b
      0000F8 FF               [12]  268 	mov	r7,a
      0000F9 E5*00            [12]  269 	mov	a,_bp
      0000FB 24 09            [12]  270 	add	a,#0x09
      0000FD F8               [12]  271 	mov	r0,a
      0000FE A6 04            [24]  272 	mov	@r0,ar4
      000100 08               [12]  273 	inc	r0
      000101 A6 05            [24]  274 	mov	@r0,ar5
      000103 08               [12]  275 	inc	r0
      000104 A6 06            [24]  276 	mov	@r0,ar6
      000106 08               [12]  277 	inc	r0
      000107 A6 07            [24]  278 	mov	@r0,ar7
                                    279 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      000109 E4               [12]  280 	clr	a
      00010A C0 E0            [24]  281 	push	acc
      00010C C0 E0            [24]  282 	push	acc
      00010E C0 E0            [24]  283 	push	acc
      000110 C0 E0            [24]  284 	push	acc
      000112 E5*00            [12]  285 	mov	a,_bp
      000114 24 FA            [12]  286 	add	a,#0xfa
      000116 F8               [12]  287 	mov	r0,a
      000117 86 82            [24]  288 	mov	dpl,@r0
      000119 08               [12]  289 	inc	r0
      00011A 86 83            [24]  290 	mov	dph,@r0
      00011C 08               [12]  291 	inc	r0
      00011D 86 F0            [24]  292 	mov	b,@r0
      00011F 08               [12]  293 	inc	r0
      000120 E6               [12]  294 	mov	a,@r0
      000121 12r00r00         [24]  295 	lcall	___fslt
      000124 AB 82            [24]  296 	mov	r3,dpl
      000126 E5 81            [12]  297 	mov	a,sp
      000128 24 FC            [12]  298 	add	a,#0xfc
      00012A F5 81            [12]  299 	mov	sp,a
      00012C EB               [12]  300 	mov	a,r3
      00012D 70 03            [24]  301 	jnz	00136$
      00012F 02r02r69         [24]  302 	ljmp	00108$
      000132                        303 00136$:
      000132 E4               [12]  304 	clr	a
      000133 C0 E0            [24]  305 	push	acc
      000135 C0 E0            [24]  306 	push	acc
      000137 C0 E0            [24]  307 	push	acc
      000139 C0 E0            [24]  308 	push	acc
      00013B E5*00            [12]  309 	mov	a,_bp
      00013D 24 05            [12]  310 	add	a,#0x05
      00013F F8               [12]  311 	mov	r0,a
      000140 86 82            [24]  312 	mov	dpl,@r0
      000142 08               [12]  313 	inc	r0
      000143 86 83            [24]  314 	mov	dph,@r0
      000145 08               [12]  315 	inc	r0
      000146 86 F0            [24]  316 	mov	b,@r0
      000148 08               [12]  317 	inc	r0
      000149 E6               [12]  318 	mov	a,@r0
      00014A 12r00r00         [24]  319 	lcall	___fslt
      00014D AB 82            [24]  320 	mov	r3,dpl
      00014F E5 81            [12]  321 	mov	a,sp
      000151 24 FC            [12]  322 	add	a,#0xfc
      000153 F5 81            [12]  323 	mov	sp,a
      000155 EB               [12]  324 	mov	a,r3
      000156 70 0A            [24]  325 	jnz	00111$
      000158 7A DB            [12]  326 	mov	r2,#0xDB
      00015A 7B 0F            [12]  327 	mov	r3,#0x0F
      00015C 7E 49            [12]  328 	mov	r6,#0x49
      00015E 7F 40            [12]  329 	mov	r7,#0x40
      000160 80 08            [24]  330 	sjmp	00112$
      000162                        331 00111$:
      000162 7A DB            [12]  332 	mov	r2,#0xDB
      000164 7B 0F            [12]  333 	mov	r3,#0x0F
      000166 7E 49            [12]  334 	mov	r6,#0x49
      000168 7F C0            [12]  335 	mov	r7,#0xC0
      00016A                        336 00112$:
      00016A C0 02            [24]  337 	push	ar2
      00016C C0 03            [24]  338 	push	ar3
      00016E C0 06            [24]  339 	push	ar6
      000170 C0 07            [24]  340 	push	ar7
      000172 E5*00            [12]  341 	mov	a,_bp
      000174 24 09            [12]  342 	add	a,#0x09
      000176 F8               [12]  343 	mov	r0,a
      000177 86 82            [24]  344 	mov	dpl,@r0
      000179 08               [12]  345 	inc	r0
      00017A 86 83            [24]  346 	mov	dph,@r0
      00017C 08               [12]  347 	inc	r0
      00017D 86 F0            [24]  348 	mov	b,@r0
      00017F 08               [12]  349 	inc	r0
      000180 E6               [12]  350 	mov	a,@r0
      000181 12r00r00         [24]  351 	lcall	___fsadd
      000184 AC 82            [24]  352 	mov	r4,dpl
      000186 AD 83            [24]  353 	mov	r5,dph
      000188 AE F0            [24]  354 	mov	r6,b
      00018A FF               [12]  355 	mov	r7,a
      00018B E5 81            [12]  356 	mov	a,sp
      00018D 24 FC            [12]  357 	add	a,#0xfc
      00018F F5 81            [12]  358 	mov	sp,a
      000191 E5*00            [12]  359 	mov	a,_bp
      000193 24 09            [12]  360 	add	a,#0x09
      000195 F8               [12]  361 	mov	r0,a
      000196 A6 04            [24]  362 	mov	@r0,ar4
      000198 08               [12]  363 	inc	r0
      000199 A6 05            [24]  364 	mov	@r0,ar5
      00019B 08               [12]  365 	inc	r0
      00019C A6 06            [24]  366 	mov	@r0,ar6
      00019E 08               [12]  367 	inc	r0
      00019F A6 07            [24]  368 	mov	@r0,ar7
      0001A1 02r02r69         [24]  369 	ljmp	00108$
      0001A4                        370 00107$:
                                    371 ;	atan2f.c:51: r=-atanf(y/x);
      0001A4 E5*00            [12]  372 	mov	a,_bp
      0001A6 24 05            [12]  373 	add	a,#0x05
      0001A8 F8               [12]  374 	mov	r0,a
      0001A9 E6               [12]  375 	mov	a,@r0
      0001AA C0 E0            [24]  376 	push	acc
      0001AC 08               [12]  377 	inc	r0
      0001AD E6               [12]  378 	mov	a,@r0
      0001AE C0 E0            [24]  379 	push	acc
      0001B0 08               [12]  380 	inc	r0
      0001B1 E6               [12]  381 	mov	a,@r0
      0001B2 C0 E0            [24]  382 	push	acc
      0001B4 08               [12]  383 	inc	r0
      0001B5 E6               [12]  384 	mov	a,@r0
      0001B6 C0 E0            [24]  385 	push	acc
      0001B8 E5*00            [12]  386 	mov	a,_bp
      0001BA 24 FA            [12]  387 	add	a,#0xfa
      0001BC F8               [12]  388 	mov	r0,a
      0001BD 86 82            [24]  389 	mov	dpl,@r0
      0001BF 08               [12]  390 	inc	r0
      0001C0 86 83            [24]  391 	mov	dph,@r0
      0001C2 08               [12]  392 	inc	r0
      0001C3 86 F0            [24]  393 	mov	b,@r0
      0001C5 08               [12]  394 	inc	r0
      0001C6 E6               [12]  395 	mov	a,@r0
      0001C7 12r00r00         [24]  396 	lcall	___fsdiv
      0001CA AC 82            [24]  397 	mov	r4,dpl
      0001CC AD 83            [24]  398 	mov	r5,dph
      0001CE AE F0            [24]  399 	mov	r6,b
      0001D0 FF               [12]  400 	mov	r7,a
      0001D1 E5 81            [12]  401 	mov	a,sp
      0001D3 24 FC            [12]  402 	add	a,#0xfc
      0001D5 F5 81            [12]  403 	mov	sp,a
      0001D7 8C 82            [24]  404 	mov	dpl,r4
      0001D9 8D 83            [24]  405 	mov	dph,r5
      0001DB 8E F0            [24]  406 	mov	b,r6
      0001DD EF               [12]  407 	mov	a,r7
      0001DE 12r00r00         [24]  408 	lcall	_atanf
      0001E1 AC 82            [24]  409 	mov	r4,dpl
      0001E3 AD 83            [24]  410 	mov	r5,dph
      0001E5 AE F0            [24]  411 	mov	r6,b
      0001E7 B2 E7            [12]  412 	cpl	acc.7
      0001E9 FF               [12]  413 	mov	r7,a
      0001EA E5*00            [12]  414 	mov	a,_bp
      0001EC 24 09            [12]  415 	add	a,#0x09
      0001EE F8               [12]  416 	mov	r0,a
      0001EF A6 04            [24]  417 	mov	@r0,ar4
      0001F1 08               [12]  418 	inc	r0
      0001F2 A6 05            [24]  419 	mov	@r0,ar5
      0001F4 08               [12]  420 	inc	r0
      0001F5 A6 06            [24]  421 	mov	@r0,ar6
      0001F7 08               [12]  422 	inc	r0
      0001F8 A6 07            [24]  423 	mov	@r0,ar7
                                    424 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001FA E4               [12]  425 	clr	a
      0001FB C0 E0            [24]  426 	push	acc
      0001FD C0 E0            [24]  427 	push	acc
      0001FF C0 E0            [24]  428 	push	acc
      000201 C0 E0            [24]  429 	push	acc
      000203 E5*00            [12]  430 	mov	a,_bp
      000205 24 05            [12]  431 	add	a,#0x05
      000207 F8               [12]  432 	mov	r0,a
      000208 86 82            [24]  433 	mov	dpl,@r0
      00020A 08               [12]  434 	inc	r0
      00020B 86 83            [24]  435 	mov	dph,@r0
      00020D 08               [12]  436 	inc	r0
      00020E 86 F0            [24]  437 	mov	b,@r0
      000210 08               [12]  438 	inc	r0
      000211 E6               [12]  439 	mov	a,@r0
      000212 12r00r00         [24]  440 	lcall	___fslt
      000215 AF 82            [24]  441 	mov	r7,dpl
      000217 E5 81            [12]  442 	mov	a,sp
      000219 24 FC            [12]  443 	add	a,#0xfc
      00021B F5 81            [12]  444 	mov	sp,a
      00021D EF               [12]  445 	mov	a,r7
      00021E 60 0A            [24]  446 	jz	00113$
      000220 7C DB            [12]  447 	mov	r4,#0xDB
      000222 7D 0F            [12]  448 	mov	r5,#0x0F
      000224 7E C9            [12]  449 	mov	r6,#0xC9
      000226 7F BF            [12]  450 	mov	r7,#0xBF
      000228 80 08            [24]  451 	sjmp	00114$
      00022A                        452 00113$:
      00022A 7C DB            [12]  453 	mov	r4,#0xDB
      00022C 7D 0F            [12]  454 	mov	r5,#0x0F
      00022E 7E C9            [12]  455 	mov	r6,#0xC9
      000230 7F 3F            [12]  456 	mov	r7,#0x3F
      000232                        457 00114$:
      000232 C0 04            [24]  458 	push	ar4
      000234 C0 05            [24]  459 	push	ar5
      000236 C0 06            [24]  460 	push	ar6
      000238 C0 07            [24]  461 	push	ar7
      00023A E5*00            [12]  462 	mov	a,_bp
      00023C 24 09            [12]  463 	add	a,#0x09
      00023E F8               [12]  464 	mov	r0,a
      00023F 86 82            [24]  465 	mov	dpl,@r0
      000241 08               [12]  466 	inc	r0
      000242 86 83            [24]  467 	mov	dph,@r0
      000244 08               [12]  468 	inc	r0
      000245 86 F0            [24]  469 	mov	b,@r0
      000247 08               [12]  470 	inc	r0
      000248 E6               [12]  471 	mov	a,@r0
      000249 12r00r00         [24]  472 	lcall	___fsadd
      00024C AC 82            [24]  473 	mov	r4,dpl
      00024E AD 83            [24]  474 	mov	r5,dph
      000250 AE F0            [24]  475 	mov	r6,b
      000252 FF               [12]  476 	mov	r7,a
      000253 E5 81            [12]  477 	mov	a,sp
      000255 24 FC            [12]  478 	add	a,#0xfc
      000257 F5 81            [12]  479 	mov	sp,a
      000259 E5*00            [12]  480 	mov	a,_bp
      00025B 24 09            [12]  481 	add	a,#0x09
      00025D F8               [12]  482 	mov	r0,a
      00025E A6 04            [24]  483 	mov	@r0,ar4
      000260 08               [12]  484 	inc	r0
      000261 A6 05            [24]  485 	mov	@r0,ar5
      000263 08               [12]  486 	inc	r0
      000264 A6 06            [24]  487 	mov	@r0,ar6
      000266 08               [12]  488 	inc	r0
      000267 A6 07            [24]  489 	mov	@r0,ar7
      000269                        490 00108$:
                                    491 ;	atan2f.c:54: return r;
      000269 E5*00            [12]  492 	mov	a,_bp
      00026B 24 09            [12]  493 	add	a,#0x09
      00026D F8               [12]  494 	mov	r0,a
      00026E 86 82            [24]  495 	mov	dpl,@r0
      000270 08               [12]  496 	inc	r0
      000271 86 83            [24]  497 	mov	dph,@r0
      000273 08               [12]  498 	inc	r0
      000274 86 F0            [24]  499 	mov	b,@r0
      000276 08               [12]  500 	inc	r0
      000277 E6               [12]  501 	mov	a,@r0
      000278                        502 00109$:
      000278 85*00 81         [24]  503 	mov	sp,_bp
      00027B D0*00            [24]  504 	pop	_bp
      00027D 22               [24]  505 	ret
                                    506 	.area CSEG    (CODE)
                                    507 	.area CONST   (CODE)
                                    508 	.area XINIT   (CODE)
                                    509 	.area CABS    (ABS,CODE)
