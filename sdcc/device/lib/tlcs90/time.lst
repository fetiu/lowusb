                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                              4 ; This file was generated Sun Oct 23 01:40:08 2022
                              5 ;--------------------------------------------------------
                              6 	.module time
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _RtcRead
                             13 	.globl _sprintf
                             14 	.globl ___day
                             15 	.globl ___month
                             16 	.globl _time
                             17 	.globl _asctime
                             18 	.globl _ctime
                             19 	.globl _localtime
                             20 	.globl _gmtime
                             21 	.globl _mktime
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DATA
   0000                      26 _ascTimeBuffer:
   0000                      27 	.ds 32
   0020                      28 _lastTime:
   0020                      29 	.ds 12
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
   0000                      34 _monthDays:
   0000                      35 	.ds 12
   000C                      36 ___month::
   000C                      37 	.ds 24
   0024                      38 ___day::
   0024                      39 	.ds 14
                             40 ;--------------------------------------------------------
                             41 ; absolute external ram data
                             42 ;--------------------------------------------------------
                             43 	.area _DABS (ABS)
                             44 ;--------------------------------------------------------
                             45 ; global & static initialisations
                             46 ;--------------------------------------------------------
                             47 	.area _HOME
                             48 	.area _GSINIT
                             49 	.area _GSFINAL
                             50 	.area _GSINIT
                             51 ;--------------------------------------------------------
                             52 ; Home
                             53 ;--------------------------------------------------------
                             54 	.area _HOME
                             55 	.area _HOME
                             56 ;--------------------------------------------------------
                             57 ; code
                             58 ;--------------------------------------------------------
                             59 	.area _CODE
                             60 ;../time.c:42: unsigned char RtcRead(struct tm *timeptr) {
                             61 ;	---------------------------------
                             62 ; Function RtcRead
                             63 ; ---------------------------------
   0000                      64 _RtcRead_start::
   0000                      65 _RtcRead:
                             66 ;../time.c:45: return 0;
   0000 35 00         [11]   67 	ld	l,#0x00
   0002 1E            [ 7]   68 	ret
   0003                      69 _RtcRead_end::
                             70 ;../time.c:50: time_t time(time_t *timeptr) {
                             71 ;	---------------------------------
                             72 ; Function time
                             73 ; ---------------------------------
   0003                      74 _time_start::
   0003                      75 _time:
   0003 54            [ 4]   76 	push	ix
   0004 3C 00 00      [ 4]   77 	ld	ix,#0
   0007 FE 14         [ 7]   78 	add	ix,sp
   0009 16 F4 FF      [ 7]   79 	add	sp, #-12
                             80 ;../time.c:52: time_t t=-1;
   000C 38 FF FF      [12]   81 	ld	bc,#0xFFFF
   000F 39 FF FF      [11]   82 	ld	de,#0xFFFF
                             83 ;../time.c:54: if (RtcRead(&now)) {
   0012 3A 00 00      [13]   84 	ld	hl,#0x0000
   0015 FE 70         [ 7]   85 	add	hl,sp
   0017 4D            [ 4]   86 	ld	iy, hl
   0018 52            [ 4]   87 	push	hl
   0019 50            [ 4]   88 	push	bc
   001A 51            [ 4]   89 	push	de
   001B 55            [ 4]   90 	push	iy
   001C 1Cr00r00      [ 4]   91 	call	_RtcRead
   001F 16 02 00      [ 7]   92 	add	sp, #2
   0022 25            [ 4]   93 	ld	a,l
   0023 59            [ 4]   94 	pop	de
   0024 58            [ 4]   95 	pop	bc
   0025 5A            [ 4]   96 	pop	hl
   0026 FE 66         [ 7]   97 	or	a, a
   0028 C6 0B         [ 7]   98 	jr	Z,00102$
                             99 ;../time.c:55: t=mktime(&now);
   002A 52            [ 4]  100 	push	hl
   002B 1Cr99r04      [ 4]  101 	call	_mktime
   002E 16 02 00      [ 7]  102 	add	sp, #2
   0031 FD 31               103 	ld	c,l
   0033 FC 30         [17]  104 	ld	b,h
   0035                     105 00102$:
                            106 ;../time.c:57: if (timeptr) {
   0035 F0 05 2E      [11]  107 	ld	a,5 (ix)
   0038 F0 04 66      [11]  108 	or	a,4 (ix)
   003B C6 0E         [ 7]  109 	jr	Z,00104$
                            110 ;../time.c:58: *timeptr=t;
   003D F2 10 4A      [10]  111 	ld	hl, 16 (sp)
   0040 EA 21         [10]  112 	ld	(hl),c
   0042 92            [ 4]  113 	inc	hl
   0043 EA 20         [10]  114 	ld	(hl),b
   0045 92            [ 4]  115 	inc	hl
   0046 EA 23         [10]  116 	ld	(hl),e
   0048 92            [ 4]  117 	inc	hl
   0049 EA 22         [10]  118 	ld	(hl),d
   004B                     119 00104$:
                            120 ;../time.c:60: return t;
   004B F9 35         [ 6]  121 	ld	l,c
   004D F8 34         [11]  122 	ld	h,b
   004F FC 3E         [17]  123 	ld	sp, ix
   0051 5C            [ 4]  124 	pop	ix
   0052 1E            [ 7]  125 	ret
   0053                     126 _time_end::
                            127 ;../time.c:73: static void CheckTime(struct tm *timeptr) {
                            128 ;	---------------------------------
                            129 ; Function CheckTime
                            130 ; ---------------------------------
   0053                     131 _CheckTime:
                            132 ;../time.c:84: if (timeptr->tm_sec>59) timeptr->tm_sec=59;
   0053 58            [ 4]  133 	pop	bc
   0054 59            [ 4]  134 	pop	de
   0055 51            [ 4]  135 	push	de
   0056 50            [ 4]  136 	push	bc
   0057 E1 2E         [10]  137 	ld	a,(de)
   0059 2C            [ 4]  138 	ld	h,a
   005A 36 3B         [10]  139 	ld	a,#0x3B
   005C FC 67         [17]  140 	cp	a,h
   005E CF 02         [11]  141 	jr	NC,00102$
   0060 E9 26         [ 4]  142 	ld	(de),a
   0062                     143 00102$:
                            144 ;../time.c:85: if (timeptr->tm_min>59) timeptr->tm_min=59;
   0062 FB 35         [ 4]  145 	ld	l, e
   0064 FA 34         [10]  146 	ld	h, d
   0066 92            [ 4]  147 	inc	hl
   0067 E2 28         [10]  148 	ld	b,(hl)
   0069 36 3B         [10]  149 	ld	a,#0x3B
   006B F8 62         [11]  150 	sub	a, b
   006D CF 03         [11]  151 	jr	NC,00104$
   006F EA 37 3B      [10]  152 	ld	(hl),#0x3B
   0072                     153 00104$:
                            154 ;../time.c:86: if (timeptr->tm_hour>23) timeptr->tm_hour=23;
   0072 FB 35         [ 4]  155 	ld	l, e
   0074 FA 34         [10]  156 	ld	h, d
   0076 92            [ 4]  157 	inc	hl
   0077 92            [ 4]  158 	inc	hl
   0078 E2 28         [10]  159 	ld	b,(hl)
   007A 36 17         [10]  160 	ld	a,#0x17
   007C F8 62         [11]  161 	sub	a, b
   007E CF 03         [11]  162 	jr	NC,00106$
   0080 EA 37 17      [10]  163 	ld	(hl),#0x17
   0083                     164 00106$:
                            165 ;../time.c:87: if (timeptr->tm_wday>6) timeptr->tm_wday=6;
   0083 3A 07 00      [13]  166 	ld	hl,#0x0007
   0086 F9 70         [ 6]  167 	add	hl,de
   0088 E2 28         [10]  168 	ld	b,(hl)
   008A 36 06         [10]  169 	ld	a,#0x06
   008C F8 62         [11]  170 	sub	a, b
   008E CF 03         [11]  171 	jr	NC,00108$
   0090 EA 37 06      [10]  172 	ld	(hl),#0x06
   0093                     173 00108$:
                            174 ;../time.c:88: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
   0093 FB 35         [ 4]  175 	ld	l, e
   0095 FA 34         [10]  176 	ld	h, d
   0097 92            [ 4]  177 	inc	hl
   0098 92            [ 4]  178 	inc	hl
   0099 92            [ 4]  179 	inc	hl
   009A E2 28         [10]  180 	ld	b,(hl)
   009C 20            [12]  181 	ld	a,b
   009D 6A 01         [ 4]  182 	sub	a, #0x01
   009F CF 05         [11]  183 	jr	NC,00112$
   00A1 EA 37 01      [10]  184 	ld	(hl),#0x01
   00A4 C8 09         [11]  185 	jr	00113$
   00A6                     186 00112$:
                            187 ;../time.c:89: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
   00A6 36 1F         [10]  188 	ld	a,#0x1F
   00A8 F8 62         [11]  189 	sub	a, b
   00AA CF 03         [11]  190 	jr	NC,00113$
   00AC EA 37 1F      [10]  191 	ld	(hl),#0x1F
   00AF                     192 00113$:
                            193 ;../time.c:90: if (timeptr->tm_mon>11) timeptr->tm_mon=11;
   00AF 3A 04 00      [13]  194 	ld	hl,#0x0004
   00B2 F9 70         [ 6]  195 	add	hl,de
   00B4 E2 28         [10]  196 	ld	b,(hl)
   00B6 36 0B         [10]  197 	ld	a,#0x0B
   00B8 F8 62         [11]  198 	sub	a, b
   00BA CF 03         [11]  199 	jr	NC,00115$
   00BC EA 37 0B      [10]  200 	ld	(hl),#0x0B
   00BF                     201 00115$:
                            202 ;../time.c:91: if (timeptr->tm_year<0) timeptr->tm_year=0;
   00BF 3A 05 00      [13]  203 	ld	hl,#0x0005
   00C2 F9 70         [ 6]  204 	add	hl,de
   00C4 52            [ 4]  205 	push	hl
   00C5 E2 2A         [10]  206 	ld	d,(hl)
   00C7 92            [ 4]  207 	inc	hl
   00C8 E2 2B         [10]  208 	ld	e,(hl)
   00CA 5A            [ 4]  209 	pop	hl
   00CB FB AF         [ 4]  210 	bit	7, e
   00CD FE D6         [ 7]  211 	ret	Z
   00CF FE 65         [ 7]  212 	xor	a, a
   00D1 EA 26         [10]  213 	ld	(hl), a
   00D3 92            [ 4]  214 	inc	hl
   00D4 EA 26         [10]  215 	ld	(hl), a
   00D6 1E            [ 7]  216 	ret
                            217 ;../time.c:95: char *asctime(struct tm *timeptr) {
                            218 ;	---------------------------------
                            219 ; Function asctime
                            220 ; ---------------------------------
   00D7                     221 _asctime_start::
   00D7                     222 _asctime:
   00D7 54            [ 4]  223 	push	ix
   00D8 3C 00 00      [ 4]  224 	ld	ix,#0
   00DB FE 14         [ 7]  225 	add	ix,sp
   00DD 16 F6 FF      [ 7]  226 	add	sp, #-10
                            227 ;../time.c:96: CheckTime(timeptr);
   00E0 F2 0E 4A      [10]  228 	ld	hl, 14 (sp)
   00E3 52            [ 4]  229 	push	hl
   00E4 1Cr53r00      [ 4]  230 	call	_CheckTime
   00E7 16 02 00      [ 7]  231 	add	sp, #2
                            232 ;../time.c:100: timeptr->tm_year+1900);
   00EA 08            [ 4]  233 	ex	de, hl
   00EB F2 0E 4A      [10]  234 	ld	hl, 14 (sp)
   00EE 08            [ 4]  235 	ex	de, hl
   00EF 3A 05 00      [13]  236 	ld	hl,#0x0005
   00F2 F9 70         [ 6]  237 	add	hl,de
   00F4 E2 29         [10]  238 	ld	c,(hl)
   00F6 92            [ 4]  239 	inc	hl
   00F7 E2 28         [10]  240 	ld	b,(hl)
   00F9 3A 6C 07      [13]  241 	ld	hl,#0x076C
   00FC F8 70         [11]  242 	add	hl,bc
   00FE F6 08 42      [ 7]  243 	ld	8 (sp), hl
                            244 ;../time.c:99: timeptr->tm_hour, timeptr->tm_min, timeptr->tm_sec, 
   0101 E1 2E         [10]  245 	ld	a,(de)
   0103 F4 FC 26      [17]  246 	ld	-4 (ix),a
   0106 F4 FD 37 00   [17]  247 	ld	-3 (ix),#0x00
   010A FB 35         [ 4]  248 	ld	l, e
   010C FA 34         [10]  249 	ld	h, d
   010E 92            [ 4]  250 	inc	hl
   010F E2 2E         [10]  251 	ld	a,(hl)
   0111 F4 FA 26      [17]  252 	ld	-6 (ix),a
   0114 F4 FB 37 00   [17]  253 	ld	-5 (ix),#0x00
   0118 FB 35         [ 4]  254 	ld	l, e
   011A FA 34         [10]  255 	ld	h, d
   011C 92            [ 4]  256 	inc	hl
   011D 92            [ 4]  257 	inc	hl
   011E E2 2E         [10]  258 	ld	a,(hl)
   0120 F4 F8 26      [17]  259 	ld	-8 (ix),a
   0123 F4 F9 37 00   [17]  260 	ld	-7 (ix),#0x00
                            261 ;../time.c:98: __day[timeptr->tm_wday], __month[timeptr->tm_mon], timeptr->tm_mday,
   0127 FB 35         [ 4]  262 	ld	l, e
   0129 FA 34         [10]  263 	ld	h, d
   012B 92            [ 4]  264 	inc	hl
   012C 92            [ 4]  265 	inc	hl
   012D 92            [ 4]  266 	inc	hl
   012E E2 2E         [10]  267 	ld	a,(hl)
   0130 F4 F6 26      [17]  268 	ld	-10 (ix),a
   0133 F4 F7 37 00   [17]  269 	ld	-9 (ix),#0x00
   0137 3A 04 00      [13]  270 	ld	hl,#0x0004
   013A F9 70         [ 6]  271 	add	hl,de
   013C E2 2D         [10]  272 	ld	l,(hl)
   013E 34 00         [11]  273 	ld	h,#0x00
   0140 FA 70         [10]  274 	add	hl, hl
   0142 38r0Cr00      [12]  275 	ld	bc,#___month
   0145 F8 70         [11]  276 	add	hl,bc
   0147 E2 29         [10]  277 	ld	c,(hl)
   0149 92            [ 4]  278 	inc	hl
   014A E2 28         [10]  279 	ld	b,(hl)
   014C 3A 07 00      [13]  280 	ld	hl,#0x0007
   014F F9 70         [ 6]  281 	add	hl,de
   0151 E2 2D         [10]  282 	ld	l,(hl)
   0153 34 00         [11]  283 	ld	h,#0x00
   0155 FA 70         [10]  284 	add	hl, hl
   0157 39r24r00      [11]  285 	ld	de,#___day
   015A F9 70         [ 6]  286 	add	hl,de
   015C E2 2B         [10]  287 	ld	e,(hl)
   015E 92            [ 4]  288 	inc	hl
   015F E2 2A         [10]  289 	ld	d,(hl)
                            290 ;../time.c:97: sprintf (ascTimeBuffer, "%s %s %2d %02d:%02d:%02d %04d\n",
   0161 F2 08 4A      [10]  291 	ld	hl, 8 (sp)
   0164 52            [ 4]  292 	push	hl
   0165 F2 08 4A      [10]  293 	ld	hl, 8 (sp)
   0168 52            [ 4]  294 	push	hl
   0169 F2 08 4A      [10]  295 	ld	hl, 8 (sp)
   016C 52            [ 4]  296 	push	hl
   016D F2 08 4A      [10]  297 	ld	hl, 8 (sp)
   0170 52            [ 4]  298 	push	hl
   0171 F2 08 4A      [10]  299 	ld	hl, 8 (sp)
   0174 52            [ 4]  300 	push	hl
   0175 50            [ 4]  301 	push	bc
   0176 51            [ 4]  302 	push	de
   0177 3Ar8Cr01      [13]  303 	ld	hl,#___str_0
   017A 52            [ 4]  304 	push	hl
   017B 3Ar00r00      [13]  305 	ld	hl,#_ascTimeBuffer
   017E 52            [ 4]  306 	push	hl
   017F 1Cr00r00      [ 4]  307 	call	_sprintf
   0182 16 12 00      [ 7]  308 	add	sp, #18
                            309 ;../time.c:101: return ascTimeBuffer;
   0185 3Ar00r00      [13]  310 	ld	hl,#_ascTimeBuffer
   0188 FC 3E         [17]  311 	ld	sp, ix
   018A 5C            [ 4]  312 	pop	ix
   018B 1E            [ 7]  313 	ret
   018C                     314 _asctime_end::
   018C                     315 ___str_0:
   018C 25 73 20 25 73 20   316 	.ascii "%s %s %2d %02d:%02d:%02d %04d"
        25 32 64 20 25 30
        32 64 3A 25 30 32
        64 3A 25 30 32 64
        20 25 30 34 64
   01A9 0A                  317 	.db 0x0A
   01AA 00                  318 	.db 0x00
                            319 ;../time.c:104: char *ctime(time_t *timep) {
                            320 ;	---------------------------------
                            321 ; Function ctime
                            322 ; ---------------------------------
   01AB                     323 _ctime_start::
   01AB                     324 _ctime:
                            325 ;../time.c:105: return asctime(localtime(timep));
   01AB 58            [ 4]  326 	pop	bc
   01AC 5A            [ 4]  327 	pop	hl
   01AD 52            [ 4]  328 	push	hl
   01AE 50            [ 4]  329 	push	bc
   01AF 52            [ 4]  330 	push	hl
   01B0 1CrBEr01      [ 4]  331 	call	_localtime
   01B3 16 02 00      [ 7]  332 	add	sp, #2
   01B6 52            [ 4]  333 	push	hl
   01B7 1CrD7r00      [ 4]  334 	call	_asctime
   01BA 16 02 00      [ 7]  335 	add	sp, #2
   01BD 1E            [ 7]  336 	ret
   01BE                     337 _ctime_end::
                            338 ;../time.c:121: struct tm *localtime(time_t *timep) {
                            339 ;	---------------------------------
                            340 ; Function localtime
                            341 ; ---------------------------------
   01BE                     342 _localtime_start::
   01BE                     343 _localtime:
                            344 ;../time.c:122: return gmtime(timep);
   01BE 58            [ 4]  345 	pop	bc
   01BF 5A            [ 4]  346 	pop	hl
   01C0 52            [ 4]  347 	push	hl
   01C1 50            [ 4]  348 	push	bc
   01C2 52            [ 4]  349 	push	hl
   01C3 1CrCAr01      [ 4]  350 	call	_gmtime
   01C6 16 02 00      [ 7]  351 	add	sp, #2
   01C9 1E            [ 7]  352 	ret
   01CA                     353 _localtime_end::
                            354 ;../time.c:125: struct tm *gmtime(time_t *timep) {
                            355 ;	---------------------------------
                            356 ; Function gmtime
                            357 ; ---------------------------------
   01CA                     358 _gmtime_start::
   01CA                     359 _gmtime:
   01CA 54            [ 4]  360 	push	ix
   01CB 3C 00 00      [ 4]  361 	ld	ix,#0
   01CE FE 14         [ 7]  362 	add	ix,sp
   01D0 16 ED FF      [ 7]  363 	add	sp, #-19
                            364 ;../time.c:126: unsigned long epoch=*timep;
   01D3 F2 17 4A      [10]  365 	ld	hl, 23 (sp)
   01D6 08            [ 4]  366 	ex	de,hl
   01D7 3A 0F 00      [13]  367 	ld	hl, #0x000F
   01DA FE 70         [ 7]  368 	add	hl, sp
   01DC 08            [ 4]  369 	ex	de, hl
   01DD 38 04 00      [12]  370 	ld	bc, #0x0004
   01E0 FE 59         [ 7]  371 	ldir
                            372 ;../time.c:131: lastTime.tm_sec=epoch%60;
   01E2 3A 00 00      [13]  373 	ld	hl,#0x0000
   01E5 52            [ 4]  374 	push	hl
   01E6 3A 3C 00      [13]  375 	ld	hl,#0x003C
   01E9 52            [ 4]  376 	push	hl
   01EA F2 15 4A      [10]  377 	ld	hl, 21 (sp)
   01ED 52            [ 4]  378 	push	hl
   01EE F2 15 4A      [10]  379 	ld	hl, 21 (sp)
   01F1 52            [ 4]  380 	push	hl
   01F2 1Cr00r00      [ 4]  381 	call	__modulong
   01F5 16 08 00      [ 7]  382 	add	sp, #8
   01F8 25            [ 4]  383 	ld	a,l
   01F9 EBr20r00 26   [ 4]  384 	ld	(#_lastTime),a
                            385 ;../time.c:132: epoch/=60; // now it is minutes
   01FD 3A 00 00      [13]  386 	ld	hl,#0x0000
   0200 52            [ 4]  387 	push	hl
   0201 3A 3C 00      [13]  388 	ld	hl,#0x003C
   0204 52            [ 4]  389 	push	hl
   0205 F2 15 4A      [10]  390 	ld	hl, 21 (sp)
   0208 52            [ 4]  391 	push	hl
   0209 F2 15 4A      [10]  392 	ld	hl, 21 (sp)
   020C 52            [ 4]  393 	push	hl
   020D 1Cr00r00      [ 4]  394 	call	__divulong
   0210 16 08 00      [ 7]  395 	add	sp, #8
   0213 FD 31               396 	ld	c,l
   0215 FC 30         [17]  397 	ld	b,h
                            398 ;../time.c:133: lastTime.tm_min=epoch%60;
   0217 50            [ 4]  399 	push	bc
   0218 51            [ 4]  400 	push	de
   0219 3A 00 00      [13]  401 	ld	hl,#0x0000
   021C 52            [ 4]  402 	push	hl
   021D 3A 3C 00      [13]  403 	ld	hl,#0x003C
   0220 52            [ 4]  404 	push	hl
   0221 51            [ 4]  405 	push	de
   0222 50            [ 4]  406 	push	bc
   0223 1Cr00r00      [ 4]  407 	call	__modulong
   0226 16 08 00      [ 7]  408 	add	sp, #8
   0229 F4 FF 22      [17]  409 	ld	-1 (ix),d
   022C F4 FE 23      [17]  410 	ld	-2 (ix),e
   022F F4 FD 24      [17]  411 	ld	-3 (ix),h
   0232 F4 FC 25      [17]  412 	ld	-4 (ix),l
   0235 59            [ 4]  413 	pop	de
   0236 58            [ 4]  414 	pop	bc
   0237 F0 FC 2E      [11]  415 	ld	a,-4 (ix)
   023A EBr21r00 26   [ 4]  416 	ld	(#(_lastTime + 0x0001)),a
                            417 ;../time.c:134: epoch/=60; // now it is hours
   023E 3A 00 00      [13]  418 	ld	hl,#0x0000
   0241 52            [ 4]  419 	push	hl
   0242 3A 3C 00      [13]  420 	ld	hl,#0x003C
   0245 52            [ 4]  421 	push	hl
   0246 51            [ 4]  422 	push	de
   0247 50            [ 4]  423 	push	bc
   0248 1Cr00r00      [ 4]  424 	call	__divulong
   024B 16 08 00      [ 7]  425 	add	sp, #8
   024E FD 31               426 	ld	c,l
   0250 FC 30         [17]  427 	ld	b,h
                            428 ;../time.c:135: lastTime.tm_hour=epoch%24;
   0252 50            [ 4]  429 	push	bc
   0253 51            [ 4]  430 	push	de
   0254 3A 00 00      [13]  431 	ld	hl,#0x0000
   0257 52            [ 4]  432 	push	hl
   0258 3A 18 00      [13]  433 	ld	hl,#0x0018
   025B 52            [ 4]  434 	push	hl
   025C 51            [ 4]  435 	push	de
   025D 50            [ 4]  436 	push	bc
   025E 1Cr00r00      [ 4]  437 	call	__modulong
   0261 16 08 00      [ 7]  438 	add	sp, #8
   0264 F4 FF 22      [17]  439 	ld	-1 (ix),d
   0267 F4 FE 23      [17]  440 	ld	-2 (ix),e
   026A F4 FD 24      [17]  441 	ld	-3 (ix),h
   026D F4 FC 25      [17]  442 	ld	-4 (ix),l
   0270 59            [ 4]  443 	pop	de
   0271 58            [ 4]  444 	pop	bc
   0272 F0 FC 2E      [11]  445 	ld	a,-4 (ix)
   0275 EBr22r00 26   [ 4]  446 	ld	(#(_lastTime + 0x0002)),a
                            447 ;../time.c:136: epoch/=24; // now it is days
   0279 3A 00 00      [13]  448 	ld	hl,#0x0000
   027C 52            [ 4]  449 	push	hl
   027D 3A 18 00      [13]  450 	ld	hl,#0x0018
   0280 52            [ 4]  451 	push	hl
   0281 51            [ 4]  452 	push	de
   0282 50            [ 4]  453 	push	bc
   0283 1Cr00r00      [ 4]  454 	call	__divulong
   0286 16 08 00      [ 7]  455 	add	sp, #8
   0289 F4 FC 25      [17]  456 	ld	-4 (ix),l
   028C F4 FD 24      [17]  457 	ld	-3 (ix),h
   028F F4 FE 23      [17]  458 	ld	-2 (ix),e
   0292 F4 FF 22      [17]  459 	ld	-1 (ix),d
                            460 ;../time.c:137: lastTime.tm_wday=(epoch+4)%7;
   0295 F0 FC 2E      [11]  461 	ld	a,-4 (ix)
   0298 68 04         [ 4]  462 	add	a, #0x04
   029A 2B            [ 6]  463 	ld	e,a
   029B F0 FD 2E      [11]  464 	ld	a,-3 (ix)
   029E 69 00         [ 4]  465 	adc	a, #0x00
   02A0 2A            [16]  466 	ld	d,a
   02A1 F0 FE 2E      [11]  467 	ld	a,-2 (ix)
   02A4 69 00         [ 4]  468 	adc	a, #0x00
   02A6 29            [11]  469 	ld	c,a
   02A7 F0 FF 2E      [11]  470 	ld	a,-1 (ix)
   02AA 69 00         [ 4]  471 	adc	a, #0x00
   02AC 28            [12]  472 	ld	b,a
   02AD 3A 00 00      [13]  473 	ld	hl,#0x0000
   02B0 52            [ 4]  474 	push	hl
   02B1 3A 07 00      [13]  475 	ld	hl,#0x0007
   02B4 52            [ 4]  476 	push	hl
   02B5 50            [ 4]  477 	push	bc
   02B6 51            [ 4]  478 	push	de
   02B7 1Cr00r00      [ 4]  479 	call	__modulong
   02BA 16 08 00      [ 7]  480 	add	sp, #8
   02BD 25            [ 4]  481 	ld	a,l
   02BE EBr27r00 26   [ 4]  482 	ld	(#(_lastTime + 0x0007)),a
                            483 ;../time.c:140: days=0;
   02C2 FE 65         [ 7]  484 	xor	a, a
   02C4 F4 F8 26      [17]  485 	ld	-8 (ix),a
   02C7 F4 F9 26      [17]  486 	ld	-7 (ix),a
   02CA F4 FA 26      [17]  487 	ld	-6 (ix),a
   02CD F4 FB 26      [17]  488 	ld	-5 (ix),a
                            489 ;../time.c:141: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
   02D0 3A B2 07      [13]  490 	ld	hl,#0x07B2
   02D3 F6 01 42      [ 7]  491 	ld	1 (sp), hl
   02D6                     492 00101$:
   02D6 F0 EE 2E      [11]  493 	ld	a,-18 (ix)
   02D9 6C 03         [ 4]  494 	and	a, #0x03
   02DB F4 F6 26      [17]  495 	ld	-10 (ix),a
   02DE F4 F7 37 00   [17]  496 	ld	-9 (ix), #0x00
   02E2 36 00         [10]  497 	ld	a, #0x00
   02E4 F0 F6 66      [11]  498 	or	a,-10 (ix)
   02E7 CE 08         [ 7]  499 	jr	NZ,00118$
   02E9 3A 6E 01      [13]  500 	ld	hl,#0x016E
   02EC F6 07 42      [ 7]  501 	ld	7 (sp), hl
   02EF C8 06         [11]  502 	jr	00119$
   02F1                     503 00118$:
   02F1 3A 6D 01      [13]  504 	ld	hl,#0x016D
   02F4 F6 07 42      [ 7]  505 	ld	7 (sp), hl
   02F7                     506 00119$:
   02F7 F0 F4 2E      [11]  507 	ld	a,-12 (ix)
   02FA F4 F0 26      [17]  508 	ld	-16 (ix),a
   02FD F0 F5 2E      [11]  509 	ld	a,-11 (ix)
   0300 F4 F1 26      [17]  510 	ld	-15 (ix),a
   0303 F0 F5 2E      [11]  511 	ld	a,-11 (ix)
   0306 A2            [ 4]  512 	rla
   0307 FE 63         [ 7]  513 	sbc	a, a
   0309 F4 F2 26      [17]  514 	ld	-14 (ix),a
   030C F4 F3 26      [17]  515 	ld	-13 (ix),a
   030F F0 F8 2E      [11]  516 	ld	a,-8 (ix)
   0312 F0 F0 60      [11]  517 	add	a, -16 (ix)
   0315 F4 F0 26      [17]  518 	ld	-16 (ix),a
   0318 F0 F9 2E      [11]  519 	ld	a,-7 (ix)
   031B F0 F1 61      [11]  520 	adc	a, -15 (ix)
   031E F4 F1 26      [17]  521 	ld	-15 (ix),a
   0321 F0 FA 2E      [11]  522 	ld	a,-6 (ix)
   0324 F0 F2 61      [11]  523 	adc	a, -14 (ix)
   0327 F4 F2 26      [17]  524 	ld	-14 (ix),a
   032A F0 FB 2E      [11]  525 	ld	a,-5 (ix)
   032D F0 F3 61      [11]  526 	adc	a, -13 (ix)
   0330 F4 F3 26      [17]  527 	ld	-13 (ix),a
   0333 3A 0B 00      [13]  528 	ld	hl, #11
   0336 FE 70         [ 7]  529 	add	hl, sp
   0338 08            [ 4]  530 	ex	de, hl
   0339 3A 03 00      [13]  531 	ld	hl, #3
   033C FE 70         [ 7]  532 	add	hl, sp
   033E 38 04 00      [12]  533 	ld	bc, #4
   0341 FE 59         [ 7]  534 	ldir
   0343 F0 FC 2E      [11]  535 	ld	a,-4 (ix)
   0346 F0 F0 62      [11]  536 	sub	a, -16 (ix)
   0349 F0 FD 2E      [11]  537 	ld	a,-3 (ix)
   034C F0 F1 63      [11]  538 	sbc	a, -15 (ix)
   034F F0 FE 2E      [11]  539 	ld	a,-2 (ix)
   0352 F0 F2 63      [11]  540 	sbc	a, -14 (ix)
   0355 F0 FF 2E      [11]  541 	ld	a,-1 (ix)
   0358 F0 F3 63      [11]  542 	sbc	a, -13 (ix)
   035B C7 0D         [11]  543 	jr	C,00103$
                            544 ;../time.c:142: year++;
   035D F0 EE 87      [11]  545 	inc	-18 (ix)
   0360 EBrD6r02 CE   [ 4]  546 	jp	NZ,00101$
   0364 F0 EF 87      [11]  547 	inc	-17 (ix)
   0367 1ArD6r02      [ 7]  548 	jp	00101$
   036A                     549 00103$:
                            550 ;../time.c:144: lastTime.tm_year=year-1900;
   036A F0 EE 2E      [11]  551 	ld	a,-18 (ix)
   036D 68 94         [ 4]  552 	add	a,#0x94
   036F 2B            [ 6]  553 	ld	e,a
   0370 F0 EF 2E      [11]  554 	ld	a,-17 (ix)
   0373 69 F8         [ 4]  555 	adc	a,#0xF8
   0375 2A            [16]  556 	ld	d,a
   0376 EBr25r00 41   [ 4]  557 	ld	((_lastTime + 0x0005)), de
                            558 ;../time.c:146: days -= LEAP_YEAR(year) ? 366 : 365;
   037A F0 F6 2E      [11]  559 	ld	a,-10 (ix)
   037D F4 F0 26      [17]  560 	ld	-16 (ix),a
   0380 F0 F7 2E      [11]  561 	ld	a,-9 (ix)
   0383 F4 F1 26      [17]  562 	ld	-15 (ix),a
   0386 F0 F7 2E      [11]  563 	ld	a,-9 (ix)
   0389 F0 F6 66      [11]  564 	or	a,-10 (ix)
   038C CE 08         [ 7]  565 	jr	NZ,00120$
   038E 3A 6E 01      [13]  566 	ld	hl,#0x016E
   0391 F6 07 42      [ 7]  567 	ld	7 (sp), hl
   0394 C8 06         [11]  568 	jr	00121$
   0396                     569 00120$:
   0396 3A 6D 01      [13]  570 	ld	hl,#0x016D
   0399 F6 07 42      [ 7]  571 	ld	7 (sp), hl
   039C                     572 00121$:
   039C F0 F4 2D      [11]  573 	ld	l,-12 (ix)
   039F F0 F5 2C      [11]  574 	ld	h,-11 (ix)
   03A2 F0 F5 2E      [11]  575 	ld	a,-11 (ix)
   03A5 A2            [ 4]  576 	rla
   03A6 FE 63         [ 7]  577 	sbc	a, a
   03A8 2B            [ 6]  578 	ld	e,a
   03A9 2A            [16]  579 	ld	d,a
   03AA F0 F8 2E      [11]  580 	ld	a,-8 (ix)
   03AD FD 62               581 	sub	a, l
   03AF 2D            [ 4]  582 	ld	l,a
   03B0 F0 F9 2E      [11]  583 	ld	a,-7 (ix)
   03B3 FC 63         [17]  584 	sbc	a, h
   03B5 2C            [ 4]  585 	ld	h,a
   03B6 F0 FA 2E      [11]  586 	ld	a,-6 (ix)
   03B9 FB 63         [ 4]  587 	sbc	a, e
   03BB 2B            [ 6]  588 	ld	e,a
   03BC F0 FB 2E      [11]  589 	ld	a,-5 (ix)
   03BF FA 63         [10]  590 	sbc	a, d
   03C1 2A            [16]  591 	ld	d,a
                            592 ;../time.c:147: epoch -= days; // now it is days in this year, starting at 0
   03C2 F0 FC 2E      [11]  593 	ld	a,-4 (ix)
   03C5 FD 62               594 	sub	a, l
   03C7 F4 F8 26      [17]  595 	ld	-8 (ix),a
   03CA F0 FD 2E      [11]  596 	ld	a,-3 (ix)
   03CD FC 63         [17]  597 	sbc	a, h
   03CF F4 F9 26      [17]  598 	ld	-7 (ix),a
   03D2 F0 FE 2E      [11]  599 	ld	a,-2 (ix)
   03D5 FB 63         [ 4]  600 	sbc	a, e
   03D7 F4 FA 26      [17]  601 	ld	-6 (ix),a
   03DA F0 FF 2E      [11]  602 	ld	a,-1 (ix)
   03DD FA 63         [10]  603 	sbc	a, d
   03DF F4 FB 26      [17]  604 	ld	-5 (ix),a
                            605 ;../time.c:148: lastTime.tm_yday=epoch;
   03E2 08            [ 4]  606 	ex	de, hl
   03E3 F2 0B 4A      [10]  607 	ld	hl, 11 (sp)
   03E6 08            [ 4]  608 	ex	de, hl
   03E7 EBr28r00 41   [ 4]  609 	ld	((_lastTime + 0x0008)), de
                            610 ;../time.c:153: for (month=0; month<12; month++) {
   03EB F4 ED 37 00   [17]  611 	ld	-19 (ix),#0x00
   03EF                     612 00114$:
                            613 ;../time.c:154: if (month==1) { // februari
   03EF F0 ED 2E      [11]  614 	ld	a,-19 (ix)
   03F2 8E            [ 7]  615 	dec	a
   03F3 CE 10         [ 7]  616 	jr	NZ,00108$
                            617 ;../time.c:155: if (LEAP_YEAR(year)) {
   03F5 F0 F1 2E      [11]  618 	ld	a,-15 (ix)
   03F8 F0 F0 66      [11]  619 	or	a,-16 (ix)
   03FB CE 04         [ 7]  620 	jr	NZ,00105$
                            621 ;../time.c:156: monthLength=29;
   03FD 33 1D         [ 6]  622 	ld	e,#0x1D
   03FF C8 18         [11]  623 	jr	00109$
   0401                     624 00105$:
                            625 ;../time.c:158: monthLength=28;
   0401 33 1C         [ 6]  626 	ld	e,#0x1C
   0403 C8 14         [11]  627 	jr	00109$
   0405                     628 00108$:
                            629 ;../time.c:161: monthLength = monthDays[month];
   0405 F0 ED 2E      [11]  630 	ld	a,-19 (ix)
   0408 68 00         [ 4]  631 	add	a, #<(_monthDays)
   040A F4 F4 26      [17]  632 	ld	-12 (ix),a
   040D 36 00         [10]  633 	ld	a,#0x00
   040F 69 00         [ 4]  634 	adc	a, #>(_monthDays)
   0411 F4 F5 26      [17]  635 	ld	-11 (ix),a
   0414 F2 07 4A      [10]  636 	ld	hl, 7 (sp)
   0417 E2 2B         [10]  637 	ld	e,(hl)
   0419                     638 00109$:
                            639 ;../time.c:164: if (epoch>=monthLength) {
   0419 F4 FC 23      [17]  640 	ld	-4 (ix),e
   041C F4 FD 37 00   [17]  641 	ld	-3 (ix),#0x00
   0420 F4 FE 37 00   [17]  642 	ld	-2 (ix),#0x00
   0424 F4 FF 37 00   [17]  643 	ld	-1 (ix),#0x00
   0428 F0 F8 2E      [11]  644 	ld	a,-8 (ix)
   042B F0 FC 62      [11]  645 	sub	a, -4 (ix)
   042E F0 F9 2E      [11]  646 	ld	a,-7 (ix)
   0431 F0 FD 63      [11]  647 	sbc	a, -3 (ix)
   0434 F0 FA 2E      [11]  648 	ld	a,-6 (ix)
   0437 F0 FE 63      [11]  649 	sbc	a, -2 (ix)
   043A F0 FB 2E      [11]  650 	ld	a,-5 (ix)
   043D F0 FF 63      [11]  651 	sbc	a, -1 (ix)
   0440 C7 30         [11]  652 	jr	C,00113$
                            653 ;../time.c:165: epoch-=monthLength;
   0442 F0 F8 2E      [11]  654 	ld	a,-8 (ix)
   0445 F0 FC 62      [11]  655 	sub	a, -4 (ix)
   0448 F4 F8 26      [17]  656 	ld	-8 (ix),a
   044B F0 F9 2E      [11]  657 	ld	a,-7 (ix)
   044E F0 FD 63      [11]  658 	sbc	a, -3 (ix)
   0451 F4 F9 26      [17]  659 	ld	-7 (ix),a
   0454 F0 FA 2E      [11]  660 	ld	a,-6 (ix)
   0457 F0 FE 63      [11]  661 	sbc	a, -2 (ix)
   045A F4 FA 26      [17]  662 	ld	-6 (ix),a
   045D F0 FB 2E      [11]  663 	ld	a,-5 (ix)
   0460 F0 FF 63      [11]  664 	sbc	a, -1 (ix)
   0463 F4 FB 26      [17]  665 	ld	-5 (ix),a
                            666 ;../time.c:153: for (month=0; month<12; month++) {
   0466 F0 ED 87      [11]  667 	inc	-19 (ix)
   0469 F0 ED 2E      [11]  668 	ld	a,-19 (ix)
   046C 6A 0C         [ 4]  669 	sub	a, #0x0C
   046E EBrEFr03 C7   [ 4]  670 	jp	C,00114$
   0472                     671 00113$:
                            672 ;../time.c:170: lastTime.tm_mon=month;
   0472 3Ar24r00      [13]  673 	ld	hl,#(_lastTime + 0x0004)
   0475 F0 ED 2E      [11]  674 	ld	a,-19 (ix)
   0478 EA 26         [10]  675 	ld	(hl),a
                            676 ;../time.c:171: lastTime.tm_mday=epoch+1;
   047A F0 F8 2E      [11]  677 	ld	a,-8 (ix)
   047D F4 F0 26      [17]  678 	ld	-16 (ix), a
   0480 86            [ 7]  679 	inc	a
   0481 F4 F0 26      [17]  680 	ld	-16 (ix),a
   0484 3Ar23r00      [13]  681 	ld	hl,#(_lastTime + 0x0003)
   0487 F0 F0 2E      [11]  682 	ld	a,-16 (ix)
   048A EA 26         [10]  683 	ld	(hl),a
                            684 ;../time.c:173: lastTime.tm_isdst=0;
   048C 3Ar2Ar00      [13]  685 	ld	hl,#(_lastTime + 0x000a)
   048F EA 37 00      [10]  686 	ld	(hl),#0x00
                            687 ;../time.c:175: return &lastTime;
   0492 3Ar20r00      [13]  688 	ld	hl,#_lastTime
   0495 FC 3E         [17]  689 	ld	sp, ix
   0497 5C            [ 4]  690 	pop	ix
   0498 1E            [ 7]  691 	ret
   0499                     692 _gmtime_end::
                            693 ;../time.c:179: time_t mktime(struct tm *timeptr) {
                            694 ;	---------------------------------
                            695 ; Function mktime
                            696 ; ---------------------------------
   0499                     697 _mktime_start::
   0499                     698 _mktime:
   0499 54            [ 4]  699 	push	ix
   049A 3C 00 00      [ 4]  700 	ld	ix,#0
   049D FE 14         [ 7]  701 	add	ix,sp
   049F 16 F2 FF      [ 7]  702 	add	sp, #-14
                            703 ;../time.c:180: int year=timeptr->tm_year+1900, month=timeptr->tm_mon, i;
   04A2 F0 04 2E      [11]  704 	ld	a,4 (ix)
   04A5 F4 FE 26      [17]  705 	ld	-2 (ix),a
   04A8 F0 05 2E      [11]  706 	ld	a,5 (ix)
   04AB F4 FF 26      [17]  707 	ld	-1 (ix),a
   04AE F0 FE 2E      [11]  708 	ld	a,-2 (ix)
   04B1 68 05         [ 4]  709 	add	a, #0x05
   04B3 2D            [ 4]  710 	ld	l,a
   04B4 F0 FF 2E      [11]  711 	ld	a,-1 (ix)
   04B7 69 00         [ 4]  712 	adc	a, #0x00
   04B9 2C            [ 4]  713 	ld	h,a
   04BA E2 2B         [10]  714 	ld	e,(hl)
   04BC 92            [ 4]  715 	inc	hl
   04BD E2 2A         [10]  716 	ld	d,(hl)
   04BF 3A 6C 07      [13]  717 	ld	hl,#0x076C
   04C2 F9 70         [ 6]  718 	add	hl,de
   04C4 F6 04 42      [ 7]  719 	ld	4 (sp), hl
   04C7 3D 04 00      [ 4]  720 	ld	iy,#0x0004
   04CA 08            [ 4]  721 	ex	de, hl
   04CB F2 0C 4A      [10]  722 	ld	hl, 12 (sp)
   04CE 08            [ 4]  723 	ex	de, hl
   04CF F9 15         [ 6]  724 	add	iy, de
   04D1 E5 2E         [11]  725 	ld	a, 0 (iy)
   04D3 F4 F4 26      [17]  726 	ld	-12 (ix),a
   04D6 F4 F5 37 00   [17]  727 	ld	-11 (ix),#0x00
                            728 ;../time.c:183: CheckTime(timeptr);
   04DA F2 0C 4A      [10]  729 	ld	hl, 12 (sp)
   04DD 52            [ 4]  730 	push	hl
   04DE 1Cr53r00      [ 4]  731 	call	_CheckTime
   04E1 16 02 00      [ 7]  732 	add	sp, #2
                            733 ;../time.c:186: seconds= (year-1970)*(60*60*24L*365);
   04E4 F0 F6 2E      [11]  734 	ld	a,-10 (ix)
   04E7 68 4E         [ 4]  735 	add	a,#0x4E
   04E9 2B            [ 6]  736 	ld	e,a
   04EA F0 F7 2E      [11]  737 	ld	a,-9 (ix)
   04ED 69 F8         [ 4]  738 	adc	a,#0xF8
   04EF 2A            [16]  739 	ld	d,a
   04F0 A2            [ 4]  740 	rla
   04F1 FE 63         [ 7]  741 	sbc	a, a
   04F3 2D            [ 4]  742 	ld	l,a
   04F4 2C            [ 4]  743 	ld	h,a
   04F5 52            [ 4]  744 	push	hl
   04F6 51            [ 4]  745 	push	de
   04F7 3A E1 01      [13]  746 	ld	hl,#0x01E1
   04FA 52            [ 4]  747 	push	hl
   04FB 3A 80 33      [13]  748 	ld	hl,#0x3380
   04FE 52            [ 4]  749 	push	hl
   04FF 1Cr00r00      [ 4]  750 	call	__mullong
   0502 16 08 00      [ 7]  751 	add	sp, #8
   0505 FD 31               752 	ld	c,l
   0507 FC 30         [17]  753 	ld	b,h
                            754 ;../time.c:189: for (i=1970; i<year; i++) {
   0509 3A B2 07      [13]  755 	ld	hl,#0x07B2
   050C E6 52         [ 7]  756 	ex	(sp), hl
   050E                     757 00110$:
   050E F0 F2 2E      [11]  758 	ld	a,-14 (ix)
   0511 F0 F6 62      [11]  759 	sub	a, -10 (ix)
   0514 F0 F3 2E      [11]  760 	ld	a,-13 (ix)
   0517 F0 F7 63      [11]  761 	sbc	a, -9 (ix)
   051A EBr20r05 CC   [ 4]  762 	jp	PO, 00147$
   051E 6D 80         [ 4]  763 	xor	a, #0x80
   0520                     764 00147$:
   0520 EBr58r05 CD   [ 4]  765 	jp	P,00124$
                            766 ;../time.c:190: if (LEAP_YEAR(i)) {
   0524 50            [ 4]  767 	push	bc
   0525 51            [ 4]  768 	push	de
   0526 3A 04 00      [13]  769 	ld	hl,#0x0004
   0529 52            [ 4]  770 	push	hl
   052A F2 06 4A      [10]  771 	ld	hl, 6 (sp)
   052D 52            [ 4]  772 	push	hl
   052E 1Cr00r00      [ 4]  773 	call	__modsint
   0531 16 04 00      [ 7]  774 	add	sp, #4
   0534 59            [ 4]  775 	pop	de
   0535 58            [ 4]  776 	pop	bc
   0536 24            [ 4]  777 	ld	a,h
   0537 FD 66         [19]  778 	or	a,l
   0539 CE 10         [ 7]  779 	jr	NZ,00111$
                            780 ;../time.c:191: seconds+= 60*60*24L;
   053B 21            [10]  781 	ld	a,c
   053C 68 80         [ 4]  782 	add	a, #0x80
   053E 29            [11]  783 	ld	c,a
   053F 20            [12]  784 	ld	a,b
   0540 69 51         [ 4]  785 	adc	a, #0x51
   0542 28            [12]  786 	ld	b,a
   0543 23            [ 6]  787 	ld	a,e
   0544 69 01         [ 4]  788 	adc	a, #0x01
   0546 2B            [ 6]  789 	ld	e,a
   0547 22            [16]  790 	ld	a,d
   0548 69 00         [ 4]  791 	adc	a, #0x00
   054A 2A            [16]  792 	ld	d,a
   054B                     793 00111$:
                            794 ;../time.c:189: for (i=1970; i<year; i++) {
   054B F0 F2 87      [11]  795 	inc	-14 (ix)
   054E EBr0Er05 CE   [ 4]  796 	jp	NZ,00110$
   0552 F0 F3 87      [11]  797 	inc	-13 (ix)
   0555 1Ar0Er05      [ 7]  798 	jp	00110$
   0558                     799 00124$:
   0558 F4 FA 21      [17]  800 	ld	-6 (ix),c
   055B F4 FB 20      [17]  801 	ld	-5 (ix),b
   055E F4 FC 23      [17]  802 	ld	-4 (ix),e
   0561 F4 FD 22      [17]  803 	ld	-3 (ix),d
                            804 ;../time.c:196: for (i=0; i<month; i++) {
   0564 3A 04 00      [13]  805 	ld	hl,#0x0004
   0567 52            [ 4]  806 	push	hl
   0568 F2 06 4A      [10]  807 	ld	hl, 6 (sp)
   056B 52            [ 4]  808 	push	hl
   056C 1Cr00r00      [ 4]  809 	call	__modsint
   056F 16 04 00      [ 7]  810 	add	sp, #4
   0572 F4 F9 24      [17]  811 	ld	-7 (ix),h
   0575 F4 F8 25      [17]  812 	ld	-8 (ix),l
   0578 3A 00 00      [13]  813 	ld	hl,#0x0000
   057B E6 52         [ 7]  814 	ex	(sp), hl
   057D                     815 00113$:
   057D F0 F2 2E      [11]  816 	ld	a,-14 (ix)
   0580 F0 F4 62      [11]  817 	sub	a, -12 (ix)
   0583 F0 F3 2E      [11]  818 	ld	a,-13 (ix)
   0586 F0 F5 63      [11]  819 	sbc	a, -11 (ix)
   0589 EBr8Fr05 CC   [ 4]  820 	jp	PO, 00149$
   058D 6D 80         [ 4]  821 	xor	a, #0x80
   058F                     822 00149$:
   058F EBr18r06 CD   [ 4]  823 	jp	P,00108$
                            824 ;../time.c:197: if (i==1 && LEAP_YEAR(year)) { 
   0593 F0 F2 2E      [11]  825 	ld	a,-14 (ix)
   0596 8E            [ 7]  826 	dec	a
   0597 CE 32         [ 7]  827 	jr	NZ,00105$
   0599 F0 F3 2E      [11]  828 	ld	a,-13 (ix)
   059C FE 66         [ 7]  829 	or	a, a
   059E CE 2B         [ 7]  830 	jr	NZ,00105$
   05A0 F0 F9 2E      [11]  831 	ld	a,-7 (ix)
   05A3 F0 F8 66      [11]  832 	or	a,-8 (ix)
   05A6 CE 23         [ 7]  833 	jr	NZ,00105$
                            834 ;../time.c:198: seconds+= 60*60*24L*29;
   05A8 F0 FA 2E      [11]  835 	ld	a,-6 (ix)
   05AB 68 80         [ 4]  836 	add	a, #0x80
   05AD F4 FA 26      [17]  837 	ld	-6 (ix),a
   05B0 F0 FB 2E      [11]  838 	ld	a,-5 (ix)
   05B3 69 3B         [ 4]  839 	adc	a, #0x3B
   05B5 F4 FB 26      [17]  840 	ld	-5 (ix),a
   05B8 F0 FC 2E      [11]  841 	ld	a,-4 (ix)
   05BB 69 26         [ 4]  842 	adc	a, #0x26
   05BD F4 FC 26      [17]  843 	ld	-4 (ix),a
   05C0 F0 FD 2E      [11]  844 	ld	a,-3 (ix)
   05C3 69 00         [ 4]  845 	adc	a, #0x00
   05C5 F4 FD 26      [17]  846 	ld	-3 (ix),a
   05C8 1Ar0Br06      [ 7]  847 	jp	00114$
   05CB                     848 00105$:
                            849 ;../time.c:200: seconds+= 60*60*24L*monthDays[i];
   05CB 3Dr00r00      [ 4]  850 	ld	iy,#_monthDays
   05CE 59            [ 4]  851 	pop	de
   05CF 51            [ 4]  852 	push	de
   05D0 F9 15         [ 6]  853 	add	iy, de
   05D2 E5 2E         [11]  854 	ld	a, 0 (iy)
   05D4 2B            [ 6]  855 	ld	e,a
   05D5 A2            [ 4]  856 	rla
   05D6 FE 63         [ 7]  857 	sbc	a, a
   05D8 2A            [16]  858 	ld	d,a
   05D9 2D            [ 4]  859 	ld	l,a
   05DA 2C            [ 4]  860 	ld	h,a
   05DB 52            [ 4]  861 	push	hl
   05DC 51            [ 4]  862 	push	de
   05DD 3A 01 00      [13]  863 	ld	hl,#0x0001
   05E0 52            [ 4]  864 	push	hl
   05E1 3A 80 51      [13]  865 	ld	hl,#0x5180
   05E4 52            [ 4]  866 	push	hl
   05E5 1Cr00r00      [ 4]  867 	call	__mullong
   05E8 16 08 00      [ 7]  868 	add	sp, #8
   05EB F0 FA 2E      [11]  869 	ld	a,-6 (ix)
   05EE FD 60               870 	add	a, l
   05F0 F4 FA 26      [17]  871 	ld	-6 (ix),a
   05F3 F0 FB 2E      [11]  872 	ld	a,-5 (ix)
   05F6 FC 61         [17]  873 	adc	a, h
   05F8 F4 FB 26      [17]  874 	ld	-5 (ix),a
   05FB F0 FC 2E      [11]  875 	ld	a,-4 (ix)
   05FE FB 61         [ 4]  876 	adc	a, e
   0600 F4 FC 26      [17]  877 	ld	-4 (ix),a
   0603 F0 FD 2E      [11]  878 	ld	a,-3 (ix)
   0606 FA 61         [10]  879 	adc	a, d
   0608 F4 FD 26      [17]  880 	ld	-3 (ix),a
   060B                     881 00114$:
                            882 ;../time.c:196: for (i=0; i<month; i++) {
   060B F0 F2 87      [11]  883 	inc	-14 (ix)
   060E EBr7Dr05 CE   [ 4]  884 	jp	NZ,00113$
   0612 F0 F3 87      [11]  885 	inc	-13 (ix)
   0615 1Ar7Dr05      [ 7]  886 	jp	00113$
   0618                     887 00108$:
                            888 ;../time.c:204: seconds+= (timeptr->tm_mday-1)*60*60*24L;
   0618 F2 0C 4A      [10]  889 	ld	hl, 12 (sp)
   061B 92            [ 4]  890 	inc	hl
   061C 92            [ 4]  891 	inc	hl
   061D 92            [ 4]  892 	inc	hl
   061E E2 2B         [10]  893 	ld	e,(hl)
   0620 32 00         [13]  894 	ld	d,#0x00
   0622 99            [ 4]  895 	dec	de
   0623 22            [16]  896 	ld	a,d
   0624 A2            [ 4]  897 	rla
   0625 FE 63         [ 7]  898 	sbc	a, a
   0627 2D            [ 4]  899 	ld	l,a
   0628 2C            [ 4]  900 	ld	h,a
   0629 52            [ 4]  901 	push	hl
   062A 51            [ 4]  902 	push	de
   062B 3A 01 00      [13]  903 	ld	hl,#0x0001
   062E 52            [ 4]  904 	push	hl
   062F 3A 80 51      [13]  905 	ld	hl,#0x5180
   0632 52            [ 4]  906 	push	hl
   0633 1Cr00r00      [ 4]  907 	call	__mullong
   0636 16 08 00      [ 7]  908 	add	sp, #8
   0639 F0 FA 2E      [11]  909 	ld	a,-6 (ix)
   063C FD 60               910 	add	a, l
   063E F4 FA 26      [17]  911 	ld	-6 (ix),a
   0641 F0 FB 2E      [11]  912 	ld	a,-5 (ix)
   0644 FC 61         [17]  913 	adc	a, h
   0646 F4 FB 26      [17]  914 	ld	-5 (ix),a
   0649 F0 FC 2E      [11]  915 	ld	a,-4 (ix)
   064C FB 61         [ 4]  916 	adc	a, e
   064E F4 FC 26      [17]  917 	ld	-4 (ix),a
   0651 F0 FD 2E      [11]  918 	ld	a,-3 (ix)
   0654 FA 61         [10]  919 	adc	a, d
   0656 F4 FD 26      [17]  920 	ld	-3 (ix),a
                            921 ;../time.c:205: seconds+= timeptr->tm_hour*60*60L;
   0659 F2 0C 4A      [10]  922 	ld	hl, 12 (sp)
   065C 92            [ 4]  923 	inc	hl
   065D 92            [ 4]  924 	inc	hl
   065E E2 2B         [10]  925 	ld	e,(hl)
   0660 32 00         [13]  926 	ld	d,#0x00
   0662 3A 00 00      [13]  927 	ld	hl,#0x0000
   0665 52            [ 4]  928 	push	hl
   0666 51            [ 4]  929 	push	de
   0667 3A 00 00      [13]  930 	ld	hl,#0x0000
   066A 52            [ 4]  931 	push	hl
   066B 3A 10 0E      [13]  932 	ld	hl,#0x0E10
   066E 52            [ 4]  933 	push	hl
   066F 1Cr00r00      [ 4]  934 	call	__mullong
   0672 16 08 00      [ 7]  935 	add	sp, #8
   0675 F0 FA 2E      [11]  936 	ld	a,-6 (ix)
   0678 FD 60               937 	add	a, l
   067A F4 FA 26      [17]  938 	ld	-6 (ix),a
   067D F0 FB 2E      [11]  939 	ld	a,-5 (ix)
   0680 FC 61         [17]  940 	adc	a, h
   0682 F4 FB 26      [17]  941 	ld	-5 (ix),a
   0685 F0 FC 2E      [11]  942 	ld	a,-4 (ix)
   0688 FB 61         [ 4]  943 	adc	a, e
   068A F4 FC 26      [17]  944 	ld	-4 (ix),a
   068D F0 FD 2E      [11]  945 	ld	a,-3 (ix)
   0690 FA 61         [10]  946 	adc	a, d
   0692 F4 FD 26      [17]  947 	ld	-3 (ix),a
                            948 ;../time.c:206: seconds+= timeptr->tm_min*60;
   0695 F2 0C 4A      [10]  949 	ld	hl, 12 (sp)
   0698 92            [ 4]  950 	inc	hl
   0699 E2 29         [10]  951 	ld	c, (hl)
   069B 30 00         [12]  952 	ld	b,#0x00
   069D F9 35         [ 6]  953 	ld	l, c
   069F F8 34         [11]  954 	ld	h, b
   06A1 FA 70         [10]  955 	add	hl, hl
   06A3 F8 70         [11]  956 	add	hl, bc
   06A5 FA 70         [10]  957 	add	hl, hl
   06A7 F8 70         [11]  958 	add	hl, bc
   06A9 FA 70         [10]  959 	add	hl, hl
   06AB F8 70         [11]  960 	add	hl, bc
   06AD FA 70         [10]  961 	add	hl, hl
   06AF FA 70         [10]  962 	add	hl, hl
   06B1 24            [ 4]  963 	ld	a,h
   06B2 A2            [ 4]  964 	rla
   06B3 FE 63         [ 7]  965 	sbc	a, a
   06B5 2B            [ 6]  966 	ld	e,a
   06B6 2A            [16]  967 	ld	d,a
   06B7 F0 FA 2E      [11]  968 	ld	a,-6 (ix)
   06BA FD 60               969 	add	a, l
   06BC 29            [11]  970 	ld	c,a
   06BD F0 FB 2E      [11]  971 	ld	a,-5 (ix)
   06C0 FC 61         [17]  972 	adc	a, h
   06C2 28            [12]  973 	ld	b,a
   06C3 F0 FC 2E      [11]  974 	ld	a,-4 (ix)
   06C6 FB 61         [ 4]  975 	adc	a, e
   06C8 2B            [ 6]  976 	ld	e,a
   06C9 F0 FD 2E      [11]  977 	ld	a,-3 (ix)
   06CC FA 61         [10]  978 	adc	a, d
   06CE 2A            [16]  979 	ld	d,a
                            980 ;../time.c:207: seconds+= timeptr->tm_sec;
   06CF F2 0C 4A      [10]  981 	ld	hl, 12 (sp)
   06D2 E2 2D         [10]  982 	ld	l,(hl)
   06D4 34 00         [11]  983 	ld	h,#0x00
   06D6 F4 FA 25      [17]  984 	ld	-6 (ix),l
   06D9 F4 FB 24      [17]  985 	ld	-5 (ix),h
   06DC 24            [ 4]  986 	ld	a,h
   06DD A2            [ 4]  987 	rla
   06DE FE 63         [ 7]  988 	sbc	a, a
   06E0 F4 FC 26      [17]  989 	ld	-4 (ix),a
   06E3 F4 FD 26      [17]  990 	ld	-3 (ix),a
   06E6 21            [10]  991 	ld	a,c
   06E7 F0 FA 60      [11]  992 	add	a, -6 (ix)
   06EA 2D            [ 4]  993 	ld	l,a
   06EB 20            [12]  994 	ld	a,b
   06EC F0 FB 61      [11]  995 	adc	a, -5 (ix)
   06EF 2C            [ 4]  996 	ld	h,a
   06F0 23            [ 6]  997 	ld	a,e
   06F1 F0 FC 61      [11]  998 	adc	a, -4 (ix)
   06F4 2B            [ 6]  999 	ld	e,a
   06F5 22            [16] 1000 	ld	a,d
   06F6 F0 FD 61      [11] 1001 	adc	a, -3 (ix)
   06F9 2A            [16] 1002 	ld	d,a
                           1003 ;../time.c:208: return seconds;
   06FA FC 3E         [17] 1004 	ld	sp, ix
   06FC 5C            [ 4] 1005 	pop	ix
   06FD 1E            [ 7] 1006 	ret
   06FE                    1007 _mktime_end::
                           1008 	.area _CODE
   06FE                    1009 ___str_1:
   06FE 4A 61 6E           1010 	.ascii "Jan"
   0701 00                 1011 	.db 0x00
   0702                    1012 ___str_2:
   0702 46 65 62           1013 	.ascii "Feb"
   0705 00                 1014 	.db 0x00
   0706                    1015 ___str_3:
   0706 4D 61 72           1016 	.ascii "Mar"
   0709 00                 1017 	.db 0x00
   070A                    1018 ___str_4:
   070A 41 70 72           1019 	.ascii "Apr"
   070D 00                 1020 	.db 0x00
   070E                    1021 ___str_5:
   070E 4D 61 79           1022 	.ascii "May"
   0711 00                 1023 	.db 0x00
   0712                    1024 ___str_6:
   0712 4A 75 6E           1025 	.ascii "Jun"
   0715 00                 1026 	.db 0x00
   0716                    1027 ___str_7:
   0716 4A 75 6C           1028 	.ascii "Jul"
   0719 00                 1029 	.db 0x00
   071A                    1030 ___str_8:
   071A 41 75 67           1031 	.ascii "Aug"
   071D 00                 1032 	.db 0x00
   071E                    1033 ___str_9:
   071E 53 65 70           1034 	.ascii "Sep"
   0721 00                 1035 	.db 0x00
   0722                    1036 ___str_10:
   0722 4F 63 74           1037 	.ascii "Oct"
   0725 00                 1038 	.db 0x00
   0726                    1039 ___str_11:
   0726 4E 6F 76           1040 	.ascii "Nov"
   0729 00                 1041 	.db 0x00
   072A                    1042 ___str_12:
   072A 44 65 63           1043 	.ascii "Dec"
   072D 00                 1044 	.db 0x00
   072E                    1045 ___str_13:
   072E 53 75 6E           1046 	.ascii "Sun"
   0731 00                 1047 	.db 0x00
   0732                    1048 ___str_14:
   0732 4D 6F 6E           1049 	.ascii "Mon"
   0735 00                 1050 	.db 0x00
   0736                    1051 ___str_15:
   0736 54 75 65           1052 	.ascii "Tue"
   0739 00                 1053 	.db 0x00
   073A                    1054 ___str_16:
   073A 57 65 64           1055 	.ascii "Wed"
   073D 00                 1056 	.db 0x00
   073E                    1057 ___str_17:
   073E 54 68 75           1058 	.ascii "Thu"
   0741 00                 1059 	.db 0x00
   0742                    1060 ___str_18:
   0742 46 72 69           1061 	.ascii "Fri"
   0745 00                 1062 	.db 0x00
   0746                    1063 ___str_19:
   0746 53 61 74           1064 	.ascii "Sat"
   0749 00                 1065 	.db 0x00
                           1066 	.area _INITIALIZER
   0000                    1067 __xinit__monthDays:
   0000 1F                 1068 	.db #0x1F	;  31
   0001 1C                 1069 	.db #0x1C	;  28
   0002 1F                 1070 	.db #0x1F	;  31
   0003 1E                 1071 	.db #0x1E	;  30
   0004 1F                 1072 	.db #0x1F	;  31
   0005 1E                 1073 	.db #0x1E	;  30
   0006 1F                 1074 	.db #0x1F	;  31
   0007 1F                 1075 	.db #0x1F	;  31
   0008 1E                 1076 	.db #0x1E	;  30
   0009 1F                 1077 	.db #0x1F	;  31
   000A 1E                 1078 	.db #0x1E	;  30
   000B 1F                 1079 	.db #0x1F	;  31
   000C                    1080 __xinit____month:
   000CrFEr06              1081 	.dw ___str_1
   000Er02r07              1082 	.dw ___str_2
   0010r06r07              1083 	.dw ___str_3
   0012r0Ar07              1084 	.dw ___str_4
   0014r0Er07              1085 	.dw ___str_5
   0016r12r07              1086 	.dw ___str_6
   0018r16r07              1087 	.dw ___str_7
   001Ar1Ar07              1088 	.dw ___str_8
   001Cr1Er07              1089 	.dw ___str_9
   001Er22r07              1090 	.dw ___str_10
   0020r26r07              1091 	.dw ___str_11
   0022r2Ar07              1092 	.dw ___str_12
   0024                    1093 __xinit____day:
   0024r2Er07              1094 	.dw ___str_13
   0026r32r07              1095 	.dw ___str_14
   0028r36r07              1096 	.dw ___str_15
   002Ar3Ar07              1097 	.dw ___str_16
   002Cr3Er07              1098 	.dw ___str_17
   002Er42r07              1099 	.dw ___str_18
   0030r46r07              1100 	.dw ___str_19
                           1101 	.area _CABS (ABS)
