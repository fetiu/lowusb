                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                              4 ; This file was generated Sun Oct 23 01:39:29 2022
                              5 ;--------------------------------------------------------
                              6 	.module _atof
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _atoi
                             13 	.globl _toupper
                             14 	.globl _isspace
                             15 	.globl _atof
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;../_atof.c:33: float atof(const char * s)
                             45 ;	---------------------------------
                             46 ; Function atof
                             47 ; ---------------------------------
   0000                      48 _atof_start::
   0000                      49 _atof:
   0000 54            [ 4]   50 	push	ix
   0001 3C 00 00      [ 4]   51 	ld	ix,#0
   0004 FE 14         [ 7]   52 	add	ix,sp
   0006 16 EF FF      [ 7]   53 	add	sp, #-17
                             54 ;../_atof.c:40: while (isspace(*s)) s++;
   0009 F2 15 4A      [10]   55 	ld	hl, 21 (sp)
   000C                      56 00101$:
   000C E2 2E         [10]   57 	ld	a,(hl)
   000E 2B            [ 6]   58 	ld	e,a
   000F A2            [ 4]   59 	rla
   0010 FE 63         [ 7]   60 	sbc	a, a
   0012 2A            [16]   61 	ld	d,a
   0013 52            [ 4]   62 	push	hl
   0014 51            [ 4]   63 	push	de
   0015 1Cr00r00      [ 4]   64 	call	_isspace
   0018 16 02 00      [ 7]   65 	add	sp, #2
   001B F4 FF 24      [17]   66 	ld	-1 (ix),h
   001E F4 FE 25      [17]   67 	ld	-2 (ix),l
   0021 5A            [ 4]   68 	pop	hl
   0022 FD 31                69 	ld	c, l
   0024 FC 30         [17]   70 	ld	b, h
   0026 90            [ 4]   71 	inc	bc
   0027 F0 FF 2E      [11]   72 	ld	a,-1 (ix)
   002A F0 FE 66      [11]   73 	or	a,-2 (ix)
   002D C6 06         [ 7]   74 	jr	Z,00145$
   002F F9 35         [ 6]   75 	ld	l, c
   0031 F8 34         [11]   76 	ld	h, b
   0033 C8 D7         [11]   77 	jr	00101$
   0035                      78 00145$:
   0035 F6 15 42      [ 7]   79 	ld	21 (sp), hl
                             80 ;../_atof.c:43: if (*s == '-')
   0038 E2 2C         [10]   81 	ld	h,(hl)
   003A 24            [ 4]   82 	ld	a,h
   003B 6A 2D         [ 4]   83 	sub	a, #0x2D
   003D CE 0C         [ 7]   84 	jr	NZ,00107$
                             85 ;../_atof.c:45: sign=1;
   003F F4 EF 37 01   [17]   86 	ld	-17 (ix),#0x01
                             87 ;../_atof.c:46: s++;
   0043 F4 04 21      [17]   88 	ld	4 (ix),c
   0046 F4 05 20      [17]   89 	ld	5 (ix),b
   0049 C8 0F         [11]   90 	jr	00108$
   004B                      91 00107$:
                             92 ;../_atof.c:50: sign=0;
   004B F4 EF 37 00   [17]   93 	ld	-17 (ix),#0x00
                             94 ;../_atof.c:51: if (*s == '+') s++;
   004F 24            [ 4]   95 	ld	a,h
   0050 6A 2B         [ 4]   96 	sub	a, #0x2B
   0052 CE 06         [ 7]   97 	jr	NZ,00108$
   0054 F4 04 21      [17]   98 	ld	4 (ix),c
   0057 F4 05 20      [17]   99 	ld	5 (ix),b
   005A                     100 00108$:
                            101 ;../_atof.c:55: for (value=0.0; isdigit(*s); s++)
   005A F4 F4 37 00   [17]  102 	ld	-12 (ix),#0x00
   005E F4 F5 37 00   [17]  103 	ld	-11 (ix),#0x00
   0062 F4 F6 37 00   [17]  104 	ld	-10 (ix),#0x00
   0066 F4 F7 37 00   [17]  105 	ld	-9 (ix),#0x00
   006A 08            [ 4]  106 	ex	de, hl
   006B F2 15 4A      [10]  107 	ld	hl, 21 (sp)
   006E 08            [ 4]  108 	ex	de, hl
   006F                     109 00124$:
   006F E1 2E         [10]  110 	ld	a,(de)
   0071 2D            [ 4]  111 	ld	l,a
   0072 A2            [ 4]  112 	rla
   0073 FE 63         [ 7]  113 	sbc	a, a
   0075 2C            [ 4]  114 	ld	h,a
   0076 51            [ 4]  115 	push	de
   0077 52            [ 4]  116 	push	hl
   0078 1Cr00r00      [ 4]  117 	call	_isdigit
   007B 16 02 00      [ 7]  118 	add	sp, #2
   007E FD 31               119 	ld	c,l
   0080 FC 30         [17]  120 	ld	b,h
   0082 59            [ 4]  121 	pop	de
   0083 E1 2E         [10]  122 	ld	a,(de)
   0085 F4 FE 26      [17]  123 	ld	-2 (ix),a
   0088 3A 01 00      [13]  124 	ld	hl,#0x0001
   008B F9 70         [ 6]  125 	add	hl,de
   008D F6 0D 42      [ 7]  126 	ld	13 (sp), hl
   0090 20            [12]  127 	ld	a,b
   0091 F9 66         [ 6]  128 	or	a,c
   0093 EBrFEr00 C6   [ 4]  129 	jp	Z,00146$
                            130 ;../_atof.c:57: value=10.0*value+(*s-'0');
   0097 F2 07 4A      [10]  131 	ld	hl, 7 (sp)
   009A 52            [ 4]  132 	push	hl
   009B F2 07 4A      [10]  133 	ld	hl, 7 (sp)
   009E 52            [ 4]  134 	push	hl
   009F 3A 20 41      [13]  135 	ld	hl,#0x4120
   00A2 52            [ 4]  136 	push	hl
   00A3 3A 00 00      [13]  137 	ld	hl,#0x0000
   00A6 52            [ 4]  138 	push	hl
   00A7 1Cr00r00      [ 4]  139 	call	___fsmul
   00AA 16 08 00      [ 7]  140 	add	sp, #8
   00AD FD 31               141 	ld	c,l
   00AF FC 30         [17]  142 	ld	b,h
   00B1 F0 FE 2D      [11]  143 	ld	l,-2 (ix)
   00B4 F0 FE 2E      [11]  144 	ld	a,-2 (ix)
   00B7 A2            [ 4]  145 	rla
   00B8 FE 63         [ 7]  146 	sbc	a, a
   00BA 2C            [ 4]  147 	ld	h,a
   00BB 25            [ 4]  148 	ld	a,l
   00BC 68 D0         [ 4]  149 	add	a,#0xD0
   00BE 2D            [ 4]  150 	ld	l,a
   00BF 24            [ 4]  151 	ld	a,h
   00C0 69 FF         [ 4]  152 	adc	a,#0xFF
   00C2 2C            [ 4]  153 	ld	h,a
   00C3 50            [ 4]  154 	push	bc
   00C4 51            [ 4]  155 	push	de
   00C5 52            [ 4]  156 	push	hl
   00C6 1Cr00r00      [ 4]  157 	call	___sint2fs
   00C9 16 02 00      [ 7]  158 	add	sp, #2
   00CC F4 FB 22      [17]  159 	ld	-5 (ix),d
   00CF F4 FA 23      [17]  160 	ld	-6 (ix),e
   00D2 F4 F9 24      [17]  161 	ld	-7 (ix),h
   00D5 F4 F8 25      [17]  162 	ld	-8 (ix),l
   00D8 59            [ 4]  163 	pop	de
   00D9 58            [ 4]  164 	pop	bc
   00DA F2 0B 4A      [10]  165 	ld	hl, 11 (sp)
   00DD 52            [ 4]  166 	push	hl
   00DE F2 0B 4A      [10]  167 	ld	hl, 11 (sp)
   00E1 52            [ 4]  168 	push	hl
   00E2 51            [ 4]  169 	push	de
   00E3 50            [ 4]  170 	push	bc
   00E4 1Cr00r00      [ 4]  171 	call	___fsadd
   00E7 16 08 00      [ 7]  172 	add	sp, #8
   00EA F4 F4 25      [17]  173 	ld	-12 (ix),l
   00ED F4 F5 24      [17]  174 	ld	-11 (ix),h
   00F0 F4 F6 23      [17]  175 	ld	-10 (ix),e
   00F3 F4 F7 22      [17]  176 	ld	-9 (ix),d
                            177 ;../_atof.c:55: for (value=0.0; isdigit(*s); s++)
   00F6 08            [ 4]  178 	ex	de, hl
   00F7 F2 0D 4A      [10]  179 	ld	hl, 13 (sp)
   00FA 08            [ 4]  180 	ex	de, hl
   00FB 1Ar6Fr00      [ 7]  181 	jp	00124$
   00FE                     182 00146$:
   00FE F4 04 23      [17]  183 	ld	4 (ix),e
   0101 F4 05 22      [17]  184 	ld	5 (ix),d
                            185 ;../_atof.c:61: if (*s == '.')
   0104 F0 FE 2E      [11]  186 	ld	a,-2 (ix)
   0107 6A 2E         [ 4]  187 	sub	a, #0x2E
   0109 EBrD0r01 CE   [ 4]  188 	jp	NZ,00112$
                            189 ;../_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   010D F4 F0 37 CD   [17]  190 	ld	-16 (ix),#0xCD
   0111 F4 F1 37 CC   [17]  191 	ld	-15 (ix),#0xCC
   0115 F4 F2 37 CC   [17]  192 	ld	-14 (ix),#0xCC
   0119 F4 F3 37 3D   [17]  193 	ld	-13 (ix),#0x3D
   011D F0 FC 2E      [11]  194 	ld	a,-4 (ix)
   0120 F4 F8 26      [17]  195 	ld	-8 (ix),a
   0123 F0 FD 2E      [11]  196 	ld	a,-3 (ix)
   0126 F4 F9 26      [17]  197 	ld	-7 (ix),a
   0129                     198 00127$:
   0129 F2 09 4A      [10]  199 	ld	hl, 9 (sp)
   012C E2 2E         [10]  200 	ld	a,(hl)
   012E F4 FC 26      [17]  201 	ld	-4 (ix), a
   0131 F4 FC 26      [17]  202 	ld	-4 (ix), a
   0134 A2            [ 4]  203 	rla
   0135 FE 63         [ 7]  204 	sbc	a, a
   0137 F4 FD 26      [17]  205 	ld	-3 (ix),a
   013A F2 0D 4A      [10]  206 	ld	hl, 13 (sp)
   013D 52            [ 4]  207 	push	hl
   013E 1Cr00r00      [ 4]  208 	call	_isdigit
   0141 16 02 00      [ 7]  209 	add	sp, #2
   0144 24            [ 4]  210 	ld	a,h
   0145 FD 66         [19]  211 	or	a,l
   0147 EBrC4r01 C6   [ 4]  212 	jp	Z,00147$
                            213 ;../_atof.c:66: value+=(*s-'0')*fraction;
   014B F2 09 4A      [10]  214 	ld	hl, 9 (sp)
   014E E2 2E         [10]  215 	ld	a,(hl)
   0150 2C            [ 4]  216 	ld	h,a
   0151 A2            [ 4]  217 	rla
   0152 FE 63         [ 7]  218 	sbc	a, a
   0154 2D            [ 4]  219 	ld	l,a
   0155 24            [ 4]  220 	ld	a,h
   0156 68 D0         [ 4]  221 	add	a,#0xD0
   0158 2B            [ 6]  222 	ld	e,a
   0159 25            [ 4]  223 	ld	a,l
   015A 69 FF         [ 4]  224 	adc	a,#0xFF
   015C 2A            [16]  225 	ld	d,a
   015D 51            [ 4]  226 	push	de
   015E 1Cr00r00      [ 4]  227 	call	___sint2fs
   0161 16 02 00      [ 7]  228 	add	sp, #2
   0164 FD 31               229 	ld	c,l
   0166 FC 30         [17]  230 	ld	b,h
   0168 F2 03 4A      [10]  231 	ld	hl, 3 (sp)
   016B 52            [ 4]  232 	push	hl
   016C F2 03 4A      [10]  233 	ld	hl, 3 (sp)
   016F 52            [ 4]  234 	push	hl
   0170 51            [ 4]  235 	push	de
   0171 50            [ 4]  236 	push	bc
   0172 1Cr00r00      [ 4]  237 	call	___fsmul
   0175 16 08 00      [ 7]  238 	add	sp, #8
   0178 08            [ 4]  239 	ex	de, hl
   0179 52            [ 4]  240 	push	hl
   017A 51            [ 4]  241 	push	de
   017B F2 0B 4A      [10]  242 	ld	hl, 11 (sp)
   017E 52            [ 4]  243 	push	hl
   017F F2 0B 4A      [10]  244 	ld	hl, 11 (sp)
   0182 52            [ 4]  245 	push	hl
   0183 1Cr00r00      [ 4]  246 	call	___fsadd
   0186 16 08 00      [ 7]  247 	add	sp, #8
   0189 F4 F4 25      [17]  248 	ld	-12 (ix),l
   018C F4 F5 24      [17]  249 	ld	-11 (ix),h
   018F F4 F6 23      [17]  250 	ld	-10 (ix),e
   0192 F4 F7 22      [17]  251 	ld	-9 (ix),d
                            252 ;../_atof.c:67: fraction*=0.1;
   0195 F2 03 4A      [10]  253 	ld	hl, 3 (sp)
   0198 52            [ 4]  254 	push	hl
   0199 F2 03 4A      [10]  255 	ld	hl, 3 (sp)
   019C 52            [ 4]  256 	push	hl
   019D 3A CC 3D      [13]  257 	ld	hl,#0x3DCC
   01A0 52            [ 4]  258 	push	hl
   01A1 3A CD CC      [13]  259 	ld	hl,#0xCCCD
   01A4 52            [ 4]  260 	push	hl
   01A5 1Cr00r00      [ 4]  261 	call	___fsmul
   01A8 16 08 00      [ 7]  262 	add	sp, #8
   01AB F4 F0 25      [17]  263 	ld	-16 (ix),l
   01AE F4 F1 24      [17]  264 	ld	-15 (ix),h
   01B1 F4 F2 23      [17]  265 	ld	-14 (ix),e
   01B4 F4 F3 22      [17]  266 	ld	-13 (ix),d
                            267 ;../_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
   01B7 F0 F8 87      [11]  268 	inc	-8 (ix)
   01BA EBr29r01 CE   [ 4]  269 	jp	NZ,00127$
   01BE F0 F9 87      [11]  270 	inc	-7 (ix)
   01C1 1Ar29r01      [ 7]  271 	jp	00127$
   01C4                     272 00147$:
   01C4 F0 F8 2E      [11]  273 	ld	a,-8 (ix)
   01C7 F4 04 26      [17]  274 	ld	4 (ix),a
   01CA F0 F9 2E      [11]  275 	ld	a,-7 (ix)
   01CD F4 05 26      [17]  276 	ld	5 (ix),a
   01D0                     277 00112$:
                            278 ;../_atof.c:72: if (toupper(*s)=='E')
   01D0 F0 04 2E      [11]  279 	ld	a,4 (ix)
   01D3 F4 F8 26      [17]  280 	ld	-8 (ix),a
   01D6 F0 05 2E      [11]  281 	ld	a,5 (ix)
   01D9 F4 F9 26      [17]  282 	ld	-7 (ix),a
   01DC F2 09 4A      [10]  283 	ld	hl, 9 (sp)
   01DF E2 2E         [10]  284 	ld	a,(hl)
   01E1 2D            [ 4]  285 	ld	l,a
   01E2 A2            [ 4]  286 	rla
   01E3 FE 63         [ 7]  287 	sbc	a, a
   01E5 2C            [ 4]  288 	ld	h,a
   01E6 52            [ 4]  289 	push	hl
   01E7 1Cr00r00      [ 4]  290 	call	_toupper
   01EA 16 02 00      [ 7]  291 	add	sp, #2
   01ED 25            [ 4]  292 	ld	a,l
   01EE 6A 45         [ 4]  293 	sub	a,#0x45
   01F0 EBr71r02 CE   [ 4]  294 	jp	NZ,00120$
   01F4 FC 66         [17]  295 	or	a,h
   01F6 EBr71r02 CE   [ 4]  296 	jp	NZ,00120$
                            297 ;../_atof.c:74: s++;
   01FA F0 F8 2E      [11]  298 	ld	a,-8 (ix)
   01FD 68 01         [ 4]  299 	add	a, #0x01
   01FF F4 04 26      [17]  300 	ld	4 (ix),a
   0202 F0 F9 2E      [11]  301 	ld	a,-7 (ix)
   0205 69 00         [ 4]  302 	adc	a, #0x00
   0207 F4 05 26      [17]  303 	ld	5 (ix),a
                            304 ;../_atof.c:75: iexp=(signed char)atoi(s);
   020A F2 15 4A      [10]  305 	ld	hl, 21 (sp)
   020D 52            [ 4]  306 	push	hl
   020E 1Cr00r00      [ 4]  307 	call	_atoi
   0211 16 02 00      [ 7]  308 	add	sp, #2
   0214 FD 30               309 	ld	b,l
                            310 ;../_atof.c:77: while(iexp!=0)
   0216                     311 00116$:
   0216 20            [12]  312 	ld	a,b
   0217 FE 66         [ 7]  313 	or	a, a
   0219 EBr71r02 C6   [ 4]  314 	jp	Z,00120$
                            315 ;../_atof.c:79: if(iexp<0)
   021D F8 AF         [11]  316 	bit	7, b
   021F C6 28         [ 7]  317 	jr	Z,00114$
                            318 ;../_atof.c:81: value*=0.1;
   0221 50            [ 4]  319 	push	bc
   0222 F2 09 4A      [10]  320 	ld	hl, 9 (sp)
   0225 52            [ 4]  321 	push	hl
   0226 F2 09 4A      [10]  322 	ld	hl, 9 (sp)
   0229 52            [ 4]  323 	push	hl
   022A 3A CC 3D      [13]  324 	ld	hl,#0x3DCC
   022D 52            [ 4]  325 	push	hl
   022E 3A CD CC      [13]  326 	ld	hl,#0xCCCD
   0231 52            [ 4]  327 	push	hl
   0232 1Cr00r00      [ 4]  328 	call	___fsmul
   0235 16 08 00      [ 7]  329 	add	sp, #8
   0238 58            [ 4]  330 	pop	bc
   0239 F4 F4 25      [17]  331 	ld	-12 (ix),l
   023C F4 F5 24      [17]  332 	ld	-11 (ix),h
   023F F4 F6 23      [17]  333 	ld	-10 (ix),e
   0242 F4 F7 22      [17]  334 	ld	-9 (ix),d
                            335 ;../_atof.c:82: iexp++;
   0245 80            [ 4]  336 	inc	b
   0246 1Ar16r02      [ 7]  337 	jp	00116$
   0249                     338 00114$:
                            339 ;../_atof.c:86: value*=10.0;
   0249 50            [ 4]  340 	push	bc
   024A F2 09 4A      [10]  341 	ld	hl, 9 (sp)
   024D 52            [ 4]  342 	push	hl
   024E F2 09 4A      [10]  343 	ld	hl, 9 (sp)
   0251 52            [ 4]  344 	push	hl
   0252 3A 20 41      [13]  345 	ld	hl,#0x4120
   0255 52            [ 4]  346 	push	hl
   0256 3A 00 00      [13]  347 	ld	hl,#0x0000
   0259 52            [ 4]  348 	push	hl
   025A 1Cr00r00      [ 4]  349 	call	___fsmul
   025D 16 08 00      [ 7]  350 	add	sp, #8
   0260 58            [ 4]  351 	pop	bc
   0261 F4 F4 25      [17]  352 	ld	-12 (ix),l
   0264 F4 F5 24      [17]  353 	ld	-11 (ix),h
   0267 F4 F6 23      [17]  354 	ld	-10 (ix),e
   026A F4 F7 22      [17]  355 	ld	-9 (ix),d
                            356 ;../_atof.c:87: iexp--;
   026D 88            [ 4]  357 	dec	b
   026E 1Ar16r02      [ 7]  358 	jp	00116$
   0271                     359 00120$:
                            360 ;../_atof.c:93: if(sign) value*=-1.0;
   0271 F0 EF A8      [11]  361 	bit	0,-17 (ix)
   0274 C6 08         [ 7]  362 	jr	Z,00122$
   0276 F0 F7 2E      [11]  363 	ld	a,-9 (ix)
   0279 6D 80         [ 4]  364 	xor	a,#0x80
   027B F4 F7 26      [17]  365 	ld	-9 (ix),a
   027E                     366 00122$:
                            367 ;../_atof.c:94: return (value);
   027E F0 F4 2D      [11]  368 	ld	l,-12 (ix)
   0281 F0 F5 2C      [11]  369 	ld	h,-11 (ix)
   0284 F0 F6 2B      [11]  370 	ld	e,-10 (ix)
   0287 F0 F7 2A      [11]  371 	ld	d,-9 (ix)
   028A FC 3E         [17]  372 	ld	sp, ix
   028C 5C            [ 4]  373 	pop	ix
   028D 1E            [ 7]  374 	ret
   028E                     375 _atof_end::
                            376 	.area _CODE
                            377 	.area _INITIALIZER
                            378 	.area _CABS (ABS)
