                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                              4 ; This file was generated Sun Oct 23 01:39:45 2022
                              5 ;--------------------------------------------------------
                              6 	.module atan2f
                              7 	.optsdcc -mtlcs90
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _fabsf
                             13 	.globl _atanf
                             14 	.globl _atan2f
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _HOME
                             39 ;--------------------------------------------------------
                             40 ; code
                             41 ;--------------------------------------------------------
                             42 	.area _CODE
                             43 ;../atan2f.c:34: float atan2f(float x, float y)
                             44 ;	---------------------------------
                             45 ; Function atan2f
                             46 ; ---------------------------------
   0000                      47 _atan2f_start::
   0000                      48 _atan2f:
   0000 54            [ 4]   49 	push	ix
   0001 3C 00 00      [ 4]   50 	ld	ix,#0
   0004 FE 14         [ 7]   51 	add	ix,sp
   0006 16 F4 FF      [ 7]   52 	add	sp, #-12
                             53 ;../atan2f.c:38: if ((x==0.0) && (y==0.0))
   0009 F0 07 2E      [11]   54 	ld	a,7 (ix)
   000C FE B7         [ 7]   55 	res	7, a
   000E F0 06 66      [11]   56 	or	a, 6 (ix)
   0011 F0 05 66      [11]   57 	or	a, 5 (ix)
   0014 F0 04 66      [11]   58 	or	a,4 (ix)
   0017 CE 26         [ 7]   59 	jr	NZ,00102$
   0019 F0 0B 2E      [11]   60 	ld	a,11 (ix)
   001C FE B7         [ 7]   61 	res	7, a
   001E F0 0A 66      [11]   62 	or	a, 10 (ix)
   0021 F0 09 66      [11]   63 	or	a, 9 (ix)
   0024 F0 08 66      [11]   64 	or	a,8 (ix)
   0027 CE 16         [ 7]   65 	jr	NZ,00102$
                             66 ;../atan2f.c:40: errno=EDOM;
   0029 3Ar00r00      [13]   67 	ld	hl,#_errno + 0
   002C EA 37 21      [10]   68 	ld	(hl), #0x21
   002F 3Ar01r00      [13]   69 	ld	hl,#_errno + 1
   0032 EA 37 00      [10]   70 	ld	(hl), #0x00
                             71 ;../atan2f.c:41: return 0.0;
   0035 3A 00 00      [13]   72 	ld	hl,#0x0000
   0038 FD 33                73 	ld	e,l
   003A FC 32         [17]   74 	ld	d,h
   003C 1Ar93r01      [ 7]   75 	jp	00109$
   003F                      76 00102$:
                             77 ;../atan2f.c:44: if(fabsf(y)>=fabsf(x))
   003F F2 16 4A      [10]   78 	ld	hl, 22 (sp)
   0042 52            [ 4]   79 	push	hl
   0043 F2 16 4A      [10]   80 	ld	hl, 22 (sp)
   0046 52            [ 4]   81 	push	hl
   0047 1Cr00r00      [ 4]   82 	call	_fabsf
   004A 16 04 00      [ 7]   83 	add	sp, #4
   004D F4 FF 22      [17]   84 	ld	-1 (ix),d
   0050 F4 FE 23      [17]   85 	ld	-2 (ix),e
   0053 F4 FD 24      [17]   86 	ld	-3 (ix),h
   0056 F4 FC 25      [17]   87 	ld	-4 (ix),l
   0059 F2 12 4A      [10]   88 	ld	hl, 18 (sp)
   005C 52            [ 4]   89 	push	hl
   005D F2 12 4A      [10]   90 	ld	hl, 18 (sp)
   0060 52            [ 4]   91 	push	hl
   0061 1Cr00r00      [ 4]   92 	call	_fabsf
   0064 16 04 00      [ 7]   93 	add	sp, #4
   0067 F4 FB 22      [17]   94 	ld	-5 (ix),d
   006A F4 FA 23      [17]   95 	ld	-6 (ix),e
   006D F4 F9 24      [17]   96 	ld	-7 (ix),h
   0070 F4 F8 25      [17]   97 	ld	-8 (ix),l
                             98 ;../atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
   0073 3A 00 00      [13]   99 	ld	hl,#0x0000
   0076 52            [ 4]  100 	push	hl
   0077 3A 00 00      [13]  101 	ld	hl,#0x0000
   007A 52            [ 4]  102 	push	hl
   007B F2 16 4A      [10]  103 	ld	hl, 22 (sp)
   007E 52            [ 4]  104 	push	hl
   007F F2 16 4A      [10]  105 	ld	hl, 22 (sp)
   0082 52            [ 4]  106 	push	hl
                            107 ;../atan2f.c:44: if(fabsf(y)>=fabsf(x))
   0083 1Cr00r00      [ 4]  108 	call	___fslt
   0086 16 08 00      [ 7]  109 	add	sp, #8
   0089 FD 31               110 	ld	c,l
   008B 50            [ 4]  111 	push	bc
   008C F2 08 4A      [10]  112 	ld	hl, 8 (sp)
   008F 52            [ 4]  113 	push	hl
   0090 F2 08 4A      [10]  114 	ld	hl, 8 (sp)
   0093 52            [ 4]  115 	push	hl
   0094 F2 10 4A      [10]  116 	ld	hl, 16 (sp)
   0097 52            [ 4]  117 	push	hl
   0098 F2 10 4A      [10]  118 	ld	hl, 16 (sp)
   009B 52            [ 4]  119 	push	hl
   009C 1Cr00r00      [ 4]  120 	call	___fslt
   009F 16 08 00      [ 7]  121 	add	sp, #8
   00A2 25            [ 4]  122 	ld	a, l
   00A3 58            [ 4]  123 	pop	bc
   00A4 28            [12]  124 	ld	b,a
   00A5 FE 66         [ 7]  125 	or	a, a
   00A7 EBr28r01 CE   [ 4]  126 	jp	NZ,00107$
                            127 ;../atan2f.c:46: r=atanf(x/y);
   00AB 50            [ 4]  128 	push	bc
   00AC F2 18 4A      [10]  129 	ld	hl, 24 (sp)
   00AF 52            [ 4]  130 	push	hl
   00B0 F2 18 4A      [10]  131 	ld	hl, 24 (sp)
   00B3 52            [ 4]  132 	push	hl
   00B4 F2 18 4A      [10]  133 	ld	hl, 24 (sp)
   00B7 52            [ 4]  134 	push	hl
   00B8 F2 18 4A      [10]  135 	ld	hl, 24 (sp)
   00BB 52            [ 4]  136 	push	hl
   00BC 1Cr00r00      [ 4]  137 	call	___fsdiv
   00BF 16 08 00      [ 7]  138 	add	sp, #8
   00C2 51            [ 4]  139 	push	de
   00C3 52            [ 4]  140 	push	hl
   00C4 1Cr00r00      [ 4]  141 	call	_atanf
   00C7 16 04 00      [ 7]  142 	add	sp, #4
   00CA 58            [ 4]  143 	pop	bc
   00CB F4 F8 25      [17]  144 	ld	-8 (ix),l
   00CE F4 F9 24      [17]  145 	ld	-7 (ix),h
   00D1 F4 FA 23      [17]  146 	ld	-6 (ix),e
   00D4 F4 FB 22      [17]  147 	ld	-5 (ix),d
                            148 ;../atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
   00D7 50            [ 4]  149 	push	bc
   00D8 3A 00 00      [13]  150 	ld	hl,#0x0000
   00DB 52            [ 4]  151 	push	hl
   00DC 3A 00 00      [13]  152 	ld	hl,#0x0000
   00DF 52            [ 4]  153 	push	hl
   00E0 F2 1C 4A      [10]  154 	ld	hl, 28 (sp)
   00E3 52            [ 4]  155 	push	hl
   00E4 F2 1C 4A      [10]  156 	ld	hl, 28 (sp)
   00E7 52            [ 4]  157 	push	hl
   00E8 1Cr00r00      [ 4]  158 	call	___fslt
   00EB 16 08 00      [ 7]  159 	add	sp, #8
   00EE 25            [ 4]  160 	ld	a,l
   00EF 58            [ 4]  161 	pop	bc
   00F0 FE 66         [ 7]  162 	or	a, a
   00F2 EBr87r01 C6   [ 4]  163 	jp	Z,00108$
   00F6 21            [10]  164 	ld	a,c
   00F7 FE 66         [ 7]  165 	or	a, a
   00F9 CE 08         [ 7]  166 	jr	NZ,00111$
   00FB 39 DB 0F      [11]  167 	ld	de,#0x0FDB
   00FE 3A 49 40      [13]  168 	ld	hl,#0x4049
   0101 C8 06         [11]  169 	jr	00112$
   0103                     170 00111$:
   0103 39 DB 0F      [11]  171 	ld	de,#0x0FDB
   0106 3A 49 C0      [13]  172 	ld	hl,#0xC049
   0109                     173 00112$:
   0109 52            [ 4]  174 	push	hl
   010A 51            [ 4]  175 	push	de
   010B F2 0A 4A      [10]  176 	ld	hl, 10 (sp)
   010E 52            [ 4]  177 	push	hl
   010F F2 0A 4A      [10]  178 	ld	hl, 10 (sp)
   0112 52            [ 4]  179 	push	hl
   0113 1Cr00r00      [ 4]  180 	call	___fsadd
   0116 16 08 00      [ 7]  181 	add	sp, #8
   0119 F4 F8 25      [17]  182 	ld	-8 (ix),l
   011C F4 F9 24      [17]  183 	ld	-7 (ix),h
   011F F4 FA 23      [17]  184 	ld	-6 (ix),e
   0122 F4 FB 22      [17]  185 	ld	-5 (ix),d
   0125 1Ar87r01      [ 7]  186 	jp	00108$
   0128                     187 00107$:
                            188 ;../atan2f.c:51: r=-atanf(y/x);
   0128 50            [ 4]  189 	push	bc
   0129 F2 14 4A      [10]  190 	ld	hl, 20 (sp)
   012C 52            [ 4]  191 	push	hl
   012D F2 14 4A      [10]  192 	ld	hl, 20 (sp)
   0130 52            [ 4]  193 	push	hl
   0131 F2 1C 4A      [10]  194 	ld	hl, 28 (sp)
   0134 52            [ 4]  195 	push	hl
   0135 F2 1C 4A      [10]  196 	ld	hl, 28 (sp)
   0138 52            [ 4]  197 	push	hl
   0139 1Cr00r00      [ 4]  198 	call	___fsdiv
   013C 16 08 00      [ 7]  199 	add	sp, #8
   013F 51            [ 4]  200 	push	de
   0140 52            [ 4]  201 	push	hl
   0141 1Cr00r00      [ 4]  202 	call	_atanf
   0144 16 04 00      [ 7]  203 	add	sp, #4
   0147 58            [ 4]  204 	pop	bc
   0148 22            [16]  205 	ld	a,d
   0149 6D 80         [ 4]  206 	xor	a,#0x80
   014B 2A            [16]  207 	ld	d,a
   014C F4 F4 25      [17]  208 	ld	-12 (ix),l
   014F F4 F5 24      [17]  209 	ld	-11 (ix),h
   0152 F4 F6 23      [17]  210 	ld	-10 (ix),e
   0155 F4 F7 22      [17]  211 	ld	-9 (ix),d
                            212 ;../atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
   0158 21            [10]  213 	ld	a,c
   0159 FE 66         [ 7]  214 	or	a, a
   015B C6 08         [ 7]  215 	jr	Z,00113$
   015D 38 DB 0F      [12]  216 	ld	bc,#0x0FDB
   0160 3A C9 BF      [13]  217 	ld	hl,#0xBFC9
   0163 C8 06         [11]  218 	jr	00114$
   0165                     219 00113$:
   0165 38 DB 0F      [12]  220 	ld	bc,#0x0FDB
   0168 3A C9 3F      [13]  221 	ld	hl,#0x3FC9
   016B                     222 00114$:
   016B 52            [ 4]  223 	push	hl
   016C 50            [ 4]  224 	push	bc
   016D F2 06 4A      [10]  225 	ld	hl, 6 (sp)
   0170 52            [ 4]  226 	push	hl
   0171 F2 06 4A      [10]  227 	ld	hl, 6 (sp)
   0174 52            [ 4]  228 	push	hl
   0175 1Cr00r00      [ 4]  229 	call	___fsadd
   0178 16 08 00      [ 7]  230 	add	sp, #8
   017B F4 F8 25      [17]  231 	ld	-8 (ix),l
   017E F4 F9 24      [17]  232 	ld	-7 (ix),h
   0181 F4 FA 23      [17]  233 	ld	-6 (ix),e
   0184 F4 FB 22      [17]  234 	ld	-5 (ix),d
   0187                     235 00108$:
                            236 ;../atan2f.c:54: return r;
   0187 F0 F8 2D      [11]  237 	ld	l,-8 (ix)
   018A F0 F9 2C      [11]  238 	ld	h,-7 (ix)
   018D F0 FA 2B      [11]  239 	ld	e,-6 (ix)
   0190 F0 FB 2A      [11]  240 	ld	d,-5 (ix)
   0193                     241 00109$:
   0193 FC 3E         [17]  242 	ld	sp, ix
   0195 5C            [ 4]  243 	pop	ix
   0196 1E            [ 7]  244 	ret
   0197                     245 _atan2f_end::
                            246 	.area _CODE
                            247 	.area _INITIALIZER
                            248 	.area _CABS (ABS)
