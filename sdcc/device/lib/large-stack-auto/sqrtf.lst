                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:00 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module sqrtf
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ldexpf
                                     13 	.globl _frexpf
                                     14 	.globl _sqrtf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'sqrtf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to stack - _bp +5
                                     96 ;f                         Allocated to stack - _bp +9
                                     97 ;y                         Allocated to stack - _bp +13
                                     98 ;n                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +1
                                    100 ;------------------------------------------------------------
                                    101 ;	sqrtf.c:37: float sqrtf(float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function sqrtf
                                    104 ;	-----------------------------------------
      000000                        105 _sqrtf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C8               [12]  116 	xch	a,r0
      000006 E5 81            [12]  117 	mov	a,sp
      000008 24 12            [12]  118 	add	a,#0x12
      00000A F5 81            [12]  119 	mov	sp,a
      00000C E5*00            [12]  120 	mov	a,_bp
      00000E 24 05            [12]  121 	add	a,#0x05
      000010 C8               [12]  122 	xch	a,r0
      000011 A6 82            [24]  123 	mov	@r0,dpl
      000013 08               [12]  124 	inc	r0
      000014 A6 83            [24]  125 	mov	@r0,dph
      000016 08               [12]  126 	inc	r0
      000017 A6 F0            [24]  127 	mov	@r0,b
      000019 08               [12]  128 	inc	r0
      00001A F6               [12]  129 	mov	@r0,a
                                    130 ;	sqrtf.c:42: if (x==0.0) return x;
      00001B E5*00            [12]  131 	mov	a,_bp
      00001D 24 05            [12]  132 	add	a,#0x05
      00001F F8               [12]  133 	mov	r0,a
      000020 86 F0            [24]  134 	mov	b,@r0
      000022 08               [12]  135 	inc	r0
      000023 E6               [12]  136 	mov	a,@r0
      000024 42 F0            [12]  137 	orl	b,a
      000026 08               [12]  138 	inc	r0
      000027 E6               [12]  139 	mov	a,@r0
      000028 42 F0            [12]  140 	orl	b,a
      00002A 08               [12]  141 	inc	r0
      00002B E6               [12]  142 	mov	a,@r0
      00002C 54 7F            [12]  143 	anl	a,#0x7F
      00002E 45 F0            [12]  144 	orl	a,b
      000030 70 12            [24]  145 	jnz	00107$
      000032 E5*00            [12]  146 	mov	a,_bp
      000034 24 05            [12]  147 	add	a,#0x05
      000036 F8               [12]  148 	mov	r0,a
      000037 86 82            [24]  149 	mov	dpl,@r0
      000039 08               [12]  150 	inc	r0
      00003A 86 83            [24]  151 	mov	dph,@r0
      00003C 08               [12]  152 	inc	r0
      00003D 86 F0            [24]  153 	mov	b,@r0
      00003F 08               [12]  154 	inc	r0
      000040 E6               [12]  155 	mov	a,@r0
      000041 02r02rE1         [24]  156 	ljmp	00111$
      000044                        157 00107$:
                                    158 ;	sqrtf.c:43: else if (x==1.0) return 1.0;
      000044 E4               [12]  159 	clr	a
      000045 C0 E0            [24]  160 	push	acc
      000047 C0 E0            [24]  161 	push	acc
      000049 74 80            [12]  162 	mov	a,#0x80
      00004B C0 E0            [24]  163 	push	acc
      00004D 74 3F            [12]  164 	mov	a,#0x3F
      00004F C0 E0            [24]  165 	push	acc
      000051 E5*00            [12]  166 	mov	a,_bp
      000053 24 05            [12]  167 	add	a,#0x05
      000055 F8               [12]  168 	mov	r0,a
      000056 86 82            [24]  169 	mov	dpl,@r0
      000058 08               [12]  170 	inc	r0
      000059 86 83            [24]  171 	mov	dph,@r0
      00005B 08               [12]  172 	inc	r0
      00005C 86 F0            [24]  173 	mov	b,@r0
      00005E 08               [12]  174 	inc	r0
      00005F E6               [12]  175 	mov	a,@r0
      000060 12r00r00         [24]  176 	lcall	___fseq
      000063 AB 82            [24]  177 	mov	r3,dpl
      000065 E5 81            [12]  178 	mov	a,sp
      000067 24 FC            [12]  179 	add	a,#0xfc
      000069 F5 81            [12]  180 	mov	sp,a
      00006B EB               [12]  181 	mov	a,r3
      00006C 60 0B            [24]  182 	jz	00104$
      00006E 90 00 00         [24]  183 	mov	dptr,#0x0000
      000071 75 F0 80         [24]  184 	mov	b,#0x80
      000074 74 3F            [12]  185 	mov	a,#0x3F
      000076 02r02rE1         [24]  186 	ljmp	00111$
      000079                        187 00104$:
                                    188 ;	sqrtf.c:44: else if (x<0.0)
      000079 E4               [12]  189 	clr	a
      00007A C0 E0            [24]  190 	push	acc
      00007C C0 E0            [24]  191 	push	acc
      00007E C0 E0            [24]  192 	push	acc
      000080 C0 E0            [24]  193 	push	acc
      000082 E5*00            [12]  194 	mov	a,_bp
      000084 24 05            [12]  195 	add	a,#0x05
      000086 F8               [12]  196 	mov	r0,a
      000087 86 82            [24]  197 	mov	dpl,@r0
      000089 08               [12]  198 	inc	r0
      00008A 86 83            [24]  199 	mov	dph,@r0
      00008C 08               [12]  200 	inc	r0
      00008D 86 F0            [24]  201 	mov	b,@r0
      00008F 08               [12]  202 	inc	r0
      000090 E6               [12]  203 	mov	a,@r0
      000091 12r00r00         [24]  204 	lcall	___fslt
      000094 AB 82            [24]  205 	mov	r3,dpl
      000096 E5 81            [12]  206 	mov	a,sp
      000098 24 FC            [12]  207 	add	a,#0xfc
      00009A F5 81            [12]  208 	mov	sp,a
      00009C EB               [12]  209 	mov	a,r3
      00009D 60 12            [24]  210 	jz	00108$
                                    211 ;	sqrtf.c:46: errno=EDOM;
      00009F 90r00r00         [24]  212 	mov	dptr,#_errno
      0000A2 74 21            [12]  213 	mov	a,#0x21
      0000A4 F0               [24]  214 	movx	@dptr,a
      0000A5 E4               [12]  215 	clr	a
      0000A6 A3               [24]  216 	inc	dptr
      0000A7 F0               [24]  217 	movx	@dptr,a
                                    218 ;	sqrtf.c:47: return 0.0;
      0000A8 90 00 00         [24]  219 	mov	dptr,#(0x00&0x00ff)
      0000AB E4               [12]  220 	clr	a
      0000AC F5 F0            [12]  221 	mov	b,a
      0000AE 02r02rE1         [24]  222 	ljmp	00111$
      0000B1                        223 00108$:
                                    224 ;	sqrtf.c:49: f=frexpf(x, &n);
      0000B1 E5*00            [12]  225 	mov	a,_bp
      0000B3 24 11            [12]  226 	add	a,#0x11
      0000B5 FA               [12]  227 	mov	r2,a
      0000B6 7B 00            [12]  228 	mov	r3,#0x00
      0000B8 7F 40            [12]  229 	mov	r7,#0x40
      0000BA C0 02            [24]  230 	push	ar2
      0000BC C0 03            [24]  231 	push	ar3
      0000BE C0 07            [24]  232 	push	ar7
      0000C0 E5*00            [12]  233 	mov	a,_bp
      0000C2 24 05            [12]  234 	add	a,#0x05
      0000C4 F8               [12]  235 	mov	r0,a
      0000C5 86 82            [24]  236 	mov	dpl,@r0
      0000C7 08               [12]  237 	inc	r0
      0000C8 86 83            [24]  238 	mov	dph,@r0
      0000CA 08               [12]  239 	inc	r0
      0000CB 86 F0            [24]  240 	mov	b,@r0
      0000CD 08               [12]  241 	inc	r0
      0000CE E6               [12]  242 	mov	a,@r0
      0000CF 12r00r00         [24]  243 	lcall	_frexpf
      0000D2 AC 82            [24]  244 	mov	r4,dpl
      0000D4 AD 83            [24]  245 	mov	r5,dph
      0000D6 AE F0            [24]  246 	mov	r6,b
      0000D8 FF               [12]  247 	mov	r7,a
      0000D9 15 81            [12]  248 	dec	sp
      0000DB 15 81            [12]  249 	dec	sp
      0000DD 15 81            [12]  250 	dec	sp
      0000DF E5*00            [12]  251 	mov	a,_bp
      0000E1 24 09            [12]  252 	add	a,#0x09
      0000E3 F8               [12]  253 	mov	r0,a
      0000E4 A6 04            [24]  254 	mov	@r0,ar4
      0000E6 08               [12]  255 	inc	r0
      0000E7 A6 05            [24]  256 	mov	@r0,ar5
      0000E9 08               [12]  257 	inc	r0
      0000EA A6 06            [24]  258 	mov	@r0,ar6
      0000EC 08               [12]  259 	inc	r0
      0000ED A6 07            [24]  260 	mov	@r0,ar7
                                    261 ;	sqrtf.c:50: y=0.41731+0.59016*f; /*Educated guess*/
      0000EF E5*00            [12]  262 	mov	a,_bp
      0000F1 24 09            [12]  263 	add	a,#0x09
      0000F3 F8               [12]  264 	mov	r0,a
      0000F4 E6               [12]  265 	mov	a,@r0
      0000F5 C0 E0            [24]  266 	push	acc
      0000F7 08               [12]  267 	inc	r0
      0000F8 E6               [12]  268 	mov	a,@r0
      0000F9 C0 E0            [24]  269 	push	acc
      0000FB 08               [12]  270 	inc	r0
      0000FC E6               [12]  271 	mov	a,@r0
      0000FD C0 E0            [24]  272 	push	acc
      0000FF 08               [12]  273 	inc	r0
      000100 E6               [12]  274 	mov	a,@r0
      000101 C0 E0            [24]  275 	push	acc
      000103 90 14 BA         [24]  276 	mov	dptr,#0x14BA
      000106 75 F0 17         [24]  277 	mov	b,#0x17
      000109 74 3F            [12]  278 	mov	a,#0x3F
      00010B 12r00r00         [24]  279 	lcall	___fsmul
      00010E AA 82            [24]  280 	mov	r2,dpl
      000110 AB 83            [24]  281 	mov	r3,dph
      000112 AE F0            [24]  282 	mov	r6,b
      000114 FF               [12]  283 	mov	r7,a
      000115 E5 81            [12]  284 	mov	a,sp
      000117 24 FC            [12]  285 	add	a,#0xfc
      000119 F5 81            [12]  286 	mov	sp,a
      00011B 74 A8            [12]  287 	mov	a,#0xA8
      00011D C0 E0            [24]  288 	push	acc
      00011F 04               [12]  289 	inc	a
      000120 C0 E0            [24]  290 	push	acc
      000122 74 D5            [12]  291 	mov	a,#0xD5
      000124 C0 E0            [24]  292 	push	acc
      000126 74 3E            [12]  293 	mov	a,#0x3E
      000128 C0 E0            [24]  294 	push	acc
      00012A 8A 82            [24]  295 	mov	dpl,r2
      00012C 8B 83            [24]  296 	mov	dph,r3
      00012E 8E F0            [24]  297 	mov	b,r6
      000130 EF               [12]  298 	mov	a,r7
      000131 12r00r00         [24]  299 	lcall	___fsadd
      000134 AC 82            [24]  300 	mov	r4,dpl
      000136 AD 83            [24]  301 	mov	r5,dph
      000138 AE F0            [24]  302 	mov	r6,b
      00013A FF               [12]  303 	mov	r7,a
      00013B E5 81            [12]  304 	mov	a,sp
      00013D 24 FC            [12]  305 	add	a,#0xfc
      00013F F5 81            [12]  306 	mov	sp,a
      000141 E5*00            [12]  307 	mov	a,_bp
      000143 24 0D            [12]  308 	add	a,#0x0d
      000145 F8               [12]  309 	mov	r0,a
      000146 A6 04            [24]  310 	mov	@r0,ar4
      000148 08               [12]  311 	inc	r0
      000149 A6 05            [24]  312 	mov	@r0,ar5
      00014B 08               [12]  313 	inc	r0
      00014C A6 06            [24]  314 	mov	@r0,ar6
      00014E 08               [12]  315 	inc	r0
      00014F A6 07            [24]  316 	mov	@r0,ar7
                                    317 ;	sqrtf.c:52: y+=f/y;
      000151 E5*00            [12]  318 	mov	a,_bp
      000153 24 0D            [12]  319 	add	a,#0x0d
      000155 F8               [12]  320 	mov	r0,a
      000156 E6               [12]  321 	mov	a,@r0
      000157 C0 E0            [24]  322 	push	acc
      000159 08               [12]  323 	inc	r0
      00015A E6               [12]  324 	mov	a,@r0
      00015B C0 E0            [24]  325 	push	acc
      00015D 08               [12]  326 	inc	r0
      00015E E6               [12]  327 	mov	a,@r0
      00015F C0 E0            [24]  328 	push	acc
      000161 08               [12]  329 	inc	r0
      000162 E6               [12]  330 	mov	a,@r0
      000163 C0 E0            [24]  331 	push	acc
      000165 E5*00            [12]  332 	mov	a,_bp
      000167 24 09            [12]  333 	add	a,#0x09
      000169 F8               [12]  334 	mov	r0,a
      00016A 86 82            [24]  335 	mov	dpl,@r0
      00016C 08               [12]  336 	inc	r0
      00016D 86 83            [24]  337 	mov	dph,@r0
      00016F 08               [12]  338 	inc	r0
      000170 86 F0            [24]  339 	mov	b,@r0
      000172 08               [12]  340 	inc	r0
      000173 E6               [12]  341 	mov	a,@r0
      000174 12r00r00         [24]  342 	lcall	___fsdiv
      000177 AA 82            [24]  343 	mov	r2,dpl
      000179 AB 83            [24]  344 	mov	r3,dph
      00017B AE F0            [24]  345 	mov	r6,b
      00017D FF               [12]  346 	mov	r7,a
      00017E E5 81            [12]  347 	mov	a,sp
      000180 24 FC            [12]  348 	add	a,#0xfc
      000182 F5 81            [12]  349 	mov	sp,a
      000184 C0 02            [24]  350 	push	ar2
      000186 C0 03            [24]  351 	push	ar3
      000188 C0 06            [24]  352 	push	ar6
      00018A C0 07            [24]  353 	push	ar7
      00018C E5*00            [12]  354 	mov	a,_bp
      00018E 24 0D            [12]  355 	add	a,#0x0d
      000190 F8               [12]  356 	mov	r0,a
      000191 86 82            [24]  357 	mov	dpl,@r0
      000193 08               [12]  358 	inc	r0
      000194 86 83            [24]  359 	mov	dph,@r0
      000196 08               [12]  360 	inc	r0
      000197 86 F0            [24]  361 	mov	b,@r0
      000199 08               [12]  362 	inc	r0
      00019A E6               [12]  363 	mov	a,@r0
      00019B 12r00r00         [24]  364 	lcall	___fsadd
      00019E AC 82            [24]  365 	mov	r4,dpl
      0001A0 AD 83            [24]  366 	mov	r5,dph
      0001A2 AE F0            [24]  367 	mov	r6,b
      0001A4 FF               [12]  368 	mov	r7,a
      0001A5 E5 81            [12]  369 	mov	a,sp
      0001A7 24 FC            [12]  370 	add	a,#0xfc
      0001A9 F5 81            [12]  371 	mov	sp,a
      0001AB E5*00            [12]  372 	mov	a,_bp
      0001AD 24 0D            [12]  373 	add	a,#0x0d
      0001AF F8               [12]  374 	mov	r0,a
      0001B0 A6 04            [24]  375 	mov	@r0,ar4
      0001B2 08               [12]  376 	inc	r0
      0001B3 A6 05            [24]  377 	mov	@r0,ar5
      0001B5 08               [12]  378 	inc	r0
      0001B6 A6 06            [24]  379 	mov	@r0,ar6
      0001B8 08               [12]  380 	inc	r0
      0001B9 A6 07            [24]  381 	mov	@r0,ar7
                                    382 ;	sqrtf.c:53: y=ldexpf(y, -2) + f/y; /*Faster version of 0.25 * y + f/y*/
      0001BB 74 FE            [12]  383 	mov	a,#0xFE
      0001BD C0 E0            [24]  384 	push	acc
      0001BF 04               [12]  385 	inc	a
      0001C0 C0 E0            [24]  386 	push	acc
      0001C2 E5*00            [12]  387 	mov	a,_bp
      0001C4 24 0D            [12]  388 	add	a,#0x0d
      0001C6 F8               [12]  389 	mov	r0,a
      0001C7 86 82            [24]  390 	mov	dpl,@r0
      0001C9 08               [12]  391 	inc	r0
      0001CA 86 83            [24]  392 	mov	dph,@r0
      0001CC 08               [12]  393 	inc	r0
      0001CD 86 F0            [24]  394 	mov	b,@r0
      0001CF 08               [12]  395 	inc	r0
      0001D0 E6               [12]  396 	mov	a,@r0
      0001D1 12r00r00         [24]  397 	lcall	_ldexpf
      0001D4 A8*00            [24]  398 	mov	r0,_bp
      0001D6 08               [12]  399 	inc	r0
      0001D7 A6 82            [24]  400 	mov	@r0,dpl
      0001D9 08               [12]  401 	inc	r0
      0001DA A6 83            [24]  402 	mov	@r0,dph
      0001DC 08               [12]  403 	inc	r0
      0001DD A6 F0            [24]  404 	mov	@r0,b
      0001DF 08               [12]  405 	inc	r0
      0001E0 F6               [12]  406 	mov	@r0,a
      0001E1 15 81            [12]  407 	dec	sp
      0001E3 15 81            [12]  408 	dec	sp
      0001E5 E5*00            [12]  409 	mov	a,_bp
      0001E7 24 0D            [12]  410 	add	a,#0x0d
      0001E9 F8               [12]  411 	mov	r0,a
      0001EA E6               [12]  412 	mov	a,@r0
      0001EB C0 E0            [24]  413 	push	acc
      0001ED 08               [12]  414 	inc	r0
      0001EE E6               [12]  415 	mov	a,@r0
      0001EF C0 E0            [24]  416 	push	acc
      0001F1 08               [12]  417 	inc	r0
      0001F2 E6               [12]  418 	mov	a,@r0
      0001F3 C0 E0            [24]  419 	push	acc
      0001F5 08               [12]  420 	inc	r0
      0001F6 E6               [12]  421 	mov	a,@r0
      0001F7 C0 E0            [24]  422 	push	acc
      0001F9 E5*00            [12]  423 	mov	a,_bp
      0001FB 24 09            [12]  424 	add	a,#0x09
      0001FD F8               [12]  425 	mov	r0,a
      0001FE 86 82            [24]  426 	mov	dpl,@r0
      000200 08               [12]  427 	inc	r0
      000201 86 83            [24]  428 	mov	dph,@r0
      000203 08               [12]  429 	inc	r0
      000204 86 F0            [24]  430 	mov	b,@r0
      000206 08               [12]  431 	inc	r0
      000207 E6               [12]  432 	mov	a,@r0
      000208 12r00r00         [24]  433 	lcall	___fsdiv
      00020B AA 82            [24]  434 	mov	r2,dpl
      00020D AB 83            [24]  435 	mov	r3,dph
      00020F AE F0            [24]  436 	mov	r6,b
      000211 FF               [12]  437 	mov	r7,a
      000212 E5 81            [12]  438 	mov	a,sp
      000214 24 FC            [12]  439 	add	a,#0xfc
      000216 F5 81            [12]  440 	mov	sp,a
      000218 C0 02            [24]  441 	push	ar2
      00021A C0 03            [24]  442 	push	ar3
      00021C C0 06            [24]  443 	push	ar6
      00021E C0 07            [24]  444 	push	ar7
      000220 A8*00            [24]  445 	mov	r0,_bp
      000222 08               [12]  446 	inc	r0
      000223 86 82            [24]  447 	mov	dpl,@r0
      000225 08               [12]  448 	inc	r0
      000226 86 83            [24]  449 	mov	dph,@r0
      000228 08               [12]  450 	inc	r0
      000229 86 F0            [24]  451 	mov	b,@r0
      00022B 08               [12]  452 	inc	r0
      00022C E6               [12]  453 	mov	a,@r0
      00022D 12r00r00         [24]  454 	lcall	___fsadd
      000230 AC 82            [24]  455 	mov	r4,dpl
      000232 AD 83            [24]  456 	mov	r5,dph
      000234 AE F0            [24]  457 	mov	r6,b
      000236 FF               [12]  458 	mov	r7,a
      000237 E5 81            [12]  459 	mov	a,sp
      000239 24 FC            [12]  460 	add	a,#0xfc
      00023B F5 81            [12]  461 	mov	sp,a
      00023D E5*00            [12]  462 	mov	a,_bp
      00023F 24 0D            [12]  463 	add	a,#0x0d
      000241 F8               [12]  464 	mov	r0,a
      000242 A6 04            [24]  465 	mov	@r0,ar4
      000244 08               [12]  466 	inc	r0
      000245 A6 05            [24]  467 	mov	@r0,ar5
      000247 08               [12]  468 	inc	r0
      000248 A6 06            [24]  469 	mov	@r0,ar6
      00024A 08               [12]  470 	inc	r0
      00024B A6 07            [24]  471 	mov	@r0,ar7
                                    472 ;	sqrtf.c:55: if (n&1)
      00024D E5*00            [12]  473 	mov	a,_bp
      00024F 24 11            [12]  474 	add	a,#0x11
      000251 F8               [12]  475 	mov	r0,a
      000252 E6               [12]  476 	mov	a,@r0
      000253 30 E0 47         [24]  477 	jnb	acc.0,00110$
                                    478 ;	sqrtf.c:57: y*=0.7071067812;
      000256 E5*00            [12]  479 	mov	a,_bp
      000258 24 0D            [12]  480 	add	a,#0x0d
      00025A F8               [12]  481 	mov	r0,a
      00025B E6               [12]  482 	mov	a,@r0
      00025C C0 E0            [24]  483 	push	acc
      00025E 08               [12]  484 	inc	r0
      00025F E6               [12]  485 	mov	a,@r0
      000260 C0 E0            [24]  486 	push	acc
      000262 08               [12]  487 	inc	r0
      000263 E6               [12]  488 	mov	a,@r0
      000264 C0 E0            [24]  489 	push	acc
      000266 08               [12]  490 	inc	r0
      000267 E6               [12]  491 	mov	a,@r0
      000268 C0 E0            [24]  492 	push	acc
      00026A 90 04 F3         [24]  493 	mov	dptr,#0x04F3
      00026D 75 F0 35         [24]  494 	mov	b,#0x35
      000270 74 3F            [12]  495 	mov	a,#0x3F
      000272 12r00r00         [24]  496 	lcall	___fsmul
      000275 AC 82            [24]  497 	mov	r4,dpl
      000277 AD 83            [24]  498 	mov	r5,dph
      000279 AE F0            [24]  499 	mov	r6,b
      00027B FF               [12]  500 	mov	r7,a
      00027C E5 81            [12]  501 	mov	a,sp
      00027E 24 FC            [12]  502 	add	a,#0xfc
      000280 F5 81            [12]  503 	mov	sp,a
      000282 E5*00            [12]  504 	mov	a,_bp
      000284 24 0D            [12]  505 	add	a,#0x0d
      000286 F8               [12]  506 	mov	r0,a
      000287 A6 04            [24]  507 	mov	@r0,ar4
      000289 08               [12]  508 	inc	r0
      00028A A6 05            [24]  509 	mov	@r0,ar5
      00028C 08               [12]  510 	inc	r0
      00028D A6 06            [24]  511 	mov	@r0,ar6
      00028F 08               [12]  512 	inc	r0
      000290 A6 07            [24]  513 	mov	@r0,ar7
                                    514 ;	sqrtf.c:58: ++n;
      000292 E5*00            [12]  515 	mov	a,_bp
      000294 24 11            [12]  516 	add	a,#0x11
      000296 F8               [12]  517 	mov	r0,a
      000297 06               [12]  518 	inc	@r0
      000298 B6 00 02         [24]  519 	cjne	@r0,#0x00,00129$
      00029B 08               [12]  520 	inc	r0
      00029C 06               [12]  521 	inc	@r0
      00029D                        522 00129$:
      00029D                        523 00110$:
                                    524 ;	sqrtf.c:60: return ldexpf(y, n/2);
      00029D 74 02            [12]  525 	mov	a,#0x02
      00029F C0 E0            [24]  526 	push	acc
      0002A1 E4               [12]  527 	clr	a
      0002A2 C0 E0            [24]  528 	push	acc
      0002A4 E5*00            [12]  529 	mov	a,_bp
      0002A6 24 11            [12]  530 	add	a,#0x11
      0002A8 F8               [12]  531 	mov	r0,a
      0002A9 86 82            [24]  532 	mov	dpl,@r0
      0002AB 08               [12]  533 	inc	r0
      0002AC 86 83            [24]  534 	mov	dph,@r0
      0002AE 12r00r00         [24]  535 	lcall	__divsint
      0002B1 AE 82            [24]  536 	mov	r6,dpl
      0002B3 AF 83            [24]  537 	mov	r7,dph
      0002B5 15 81            [12]  538 	dec	sp
      0002B7 15 81            [12]  539 	dec	sp
      0002B9 C0 06            [24]  540 	push	ar6
      0002BB C0 07            [24]  541 	push	ar7
      0002BD E5*00            [12]  542 	mov	a,_bp
      0002BF 24 0D            [12]  543 	add	a,#0x0d
      0002C1 F8               [12]  544 	mov	r0,a
      0002C2 86 82            [24]  545 	mov	dpl,@r0
      0002C4 08               [12]  546 	inc	r0
      0002C5 86 83            [24]  547 	mov	dph,@r0
      0002C7 08               [12]  548 	inc	r0
      0002C8 86 F0            [24]  549 	mov	b,@r0
      0002CA 08               [12]  550 	inc	r0
      0002CB E6               [12]  551 	mov	a,@r0
      0002CC 12r00r00         [24]  552 	lcall	_ldexpf
      0002CF AC 82            [24]  553 	mov	r4,dpl
      0002D1 AD 83            [24]  554 	mov	r5,dph
      0002D3 AE F0            [24]  555 	mov	r6,b
      0002D5 FF               [12]  556 	mov	r7,a
      0002D6 15 81            [12]  557 	dec	sp
      0002D8 15 81            [12]  558 	dec	sp
      0002DA 8C 82            [24]  559 	mov	dpl,r4
      0002DC 8D 83            [24]  560 	mov	dph,r5
      0002DE 8E F0            [24]  561 	mov	b,r6
      0002E0 EF               [12]  562 	mov	a,r7
      0002E1                        563 00111$:
      0002E1 85*00 81         [24]  564 	mov	sp,_bp
      0002E4 D0*00            [24]  565 	pop	_bp
      0002E6 22               [24]  566 	ret
                                    567 	.area CSEG    (CODE)
                                    568 	.area CONST   (CODE)
                                    569 	.area XINIT   (CODE)
                                    570 	.area CABS    (ABS,CODE)
