                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:06 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _memset
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _memset
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'memset'
                                     92 ;------------------------------------------------------------
                                     93 ;c                         Allocated to stack - _bp -3
                                     94 ;n                         Allocated to stack - _bp -5
                                     95 ;s                         Allocated to stack - _bp +3
                                     96 ;ret                       Allocated to registers 
                                     97 ;sloc0                     Allocated to stack - _bp +1
                                     98 ;------------------------------------------------------------
                                     99 ;	_memset.c:39: void *memset (void *s, unsigned char c, size_t n)
                                    100 ;	-----------------------------------------
                                    101 ;	 function memset
                                    102 ;	-----------------------------------------
      000000                        103 _memset:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0*00            [24]  112 	push	_bp
      000002 E5 81            [12]  113 	mov	a,sp
      000004 F5*00            [12]  114 	mov	_bp,a
      000006 24 05            [12]  115 	add	a,#0x05
      000008 F5 81            [12]  116 	mov	sp,a
      00000A A8*00            [24]  117 	mov	r0,_bp
      00000C 08               [12]  118 	inc	r0
      00000D 08               [12]  119 	inc	r0
      00000E 08               [12]  120 	inc	r0
      00000F A6 82            [24]  121 	mov	@r0,dpl
      000011 08               [12]  122 	inc	r0
      000012 A6 83            [24]  123 	mov	@r0,dph
      000014 08               [12]  124 	inc	r0
      000015 A6 F0            [24]  125 	mov	@r0,b
                                    126 ;	_memset.c:44: register unsigned char *ret = s;
      000017 E5*00            [12]  127 	mov	a,_bp
      000019 24 03            [12]  128 	add	a,#0x03
      00001B F8               [12]  129 	mov	r0,a
      00001C 86 02            [24]  130 	mov	ar2,@r0
      00001E 08               [12]  131 	inc	r0
      00001F 86 03            [24]  132 	mov	ar3,@r0
      000021 08               [12]  133 	inc	r0
      000022 86 04            [24]  134 	mov	ar4,@r0
                                    135 ;	_memset.c:46: while (n--)
      000024 E5*00            [12]  136 	mov	a,_bp
      000026 24 FB            [12]  137 	add	a,#0xfb
      000028 F8               [12]  138 	mov	r0,a
      000029 A9*00            [24]  139 	mov	r1,_bp
      00002B 09               [12]  140 	inc	r1
      00002C E6               [12]  141 	mov	a,@r0
      00002D F7               [12]  142 	mov	@r1,a
      00002E 08               [12]  143 	inc	r0
      00002F 09               [12]  144 	inc	r1
      000030 E6               [12]  145 	mov	a,@r0
      000031 F7               [12]  146 	mov	@r1,a
      000032                        147 00101$:
      000032 A8*00            [24]  148 	mov	r0,_bp
      000034 08               [12]  149 	inc	r0
      000035 86 06            [24]  150 	mov	ar6,@r0
      000037 08               [12]  151 	inc	r0
      000038 86 07            [24]  152 	mov	ar7,@r0
      00003A A8*00            [24]  153 	mov	r0,_bp
      00003C 08               [12]  154 	inc	r0
      00003D 16               [12]  155 	dec	@r0
      00003E B6 FF 02         [24]  156 	cjne	@r0,#0xFF,00113$
      000041 08               [12]  157 	inc	r0
      000042 16               [12]  158 	dec	@r0
      000043                        159 00113$:
      000043 EE               [12]  160 	mov	a,r6
      000044 4F               [12]  161 	orl	a,r7
      000045 60 16            [24]  162 	jz	00103$
                                    163 ;	_memset.c:48: *(unsigned char *) ret = c;
      000047 8A 82            [24]  164 	mov	dpl,r2
      000049 8B 83            [24]  165 	mov	dph,r3
      00004B 8C F0            [24]  166 	mov	b,r4
      00004D E5*00            [12]  167 	mov	a,_bp
      00004F 24 FD            [12]  168 	add	a,#0xfd
      000051 F8               [12]  169 	mov	r0,a
      000052 E6               [12]  170 	mov	a,@r0
      000053 12r00r00         [24]  171 	lcall	__gptrput
      000056 A3               [24]  172 	inc	dptr
      000057 AA 82            [24]  173 	mov	r2,dpl
      000059 AB 83            [24]  174 	mov	r3,dph
                                    175 ;	_memset.c:49: ret = ((unsigned char *) ret) + 1;
      00005B 80 D5            [24]  176 	sjmp	00101$
      00005D                        177 00103$:
                                    178 ;	_memset.c:52: return s;
      00005D E5*00            [12]  179 	mov	a,_bp
      00005F 24 03            [12]  180 	add	a,#0x03
      000061 F8               [12]  181 	mov	r0,a
      000062 86 82            [24]  182 	mov	dpl,@r0
      000064 08               [12]  183 	inc	r0
      000065 86 83            [24]  184 	mov	dph,@r0
      000067 08               [12]  185 	inc	r0
      000068 86 F0            [24]  186 	mov	b,@r0
      00006A 85*00 81         [24]  187 	mov	sp,_bp
      00006D D0*00            [24]  188 	pop	_bp
      00006F 22               [24]  189 	ret
                                    190 	.area CSEG    (CODE)
                                    191 	.area CONST   (CODE)
                                    192 	.area XINIT   (CODE)
                                    193 	.area CABS    (ABS,CODE)
