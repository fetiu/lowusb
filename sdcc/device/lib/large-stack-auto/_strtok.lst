                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:06 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _strtok
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _strchr
                                     13 	.globl _strtok
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
      000000                         57 _strtok_s_1_22:
      000000                         58 	.ds 3
                                     59 ;--------------------------------------------------------
                                     60 ; absolute external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XABS    (ABS,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external initialized ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XISEG   (XDATA)
                                     67 	.area HOME    (CODE)
                                     68 	.area GSINIT0 (CODE)
                                     69 	.area GSINIT1 (CODE)
                                     70 	.area GSINIT2 (CODE)
                                     71 	.area GSINIT3 (CODE)
                                     72 	.area GSINIT4 (CODE)
                                     73 	.area GSINIT5 (CODE)
                                     74 	.area GSINIT  (CODE)
                                     75 	.area GSFINAL (CODE)
                                     76 	.area CSEG    (CODE)
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME    (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area GSINIT  (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; Home
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area HOME    (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; code
                                     91 ;--------------------------------------------------------
                                     92 	.area CSEG    (CODE)
                                     93 ;------------------------------------------------------------
                                     94 ;Allocation info for local variables in function 'strtok'
                                     95 ;------------------------------------------------------------
                                     96 ;control                   Allocated to stack - _bp -5
                                     97 ;str                       Allocated to registers r5 r6 r7 
                                     98 ;s1                        Allocated to registers r5 r6 r7 
                                     99 ;s                         Allocated with name '_strtok_s_1_22'
                                    100 ;------------------------------------------------------------
                                    101 ;	_strtok.c:36: char * strtok ( char * str, const char * control )
                                    102 ;	-----------------------------------------
                                    103 ;	 function strtok
                                    104 ;	-----------------------------------------
      000000                        105 _strtok:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 AD 82            [24]  116 	mov	r5,dpl
      000007 AE 83            [24]  117 	mov	r6,dph
      000009 AF F0            [24]  118 	mov	r7,b
                                    119 ;	_strtok.c:41: if ( str )
      00000B ED               [12]  120 	mov	a,r5
      00000C 4E               [12]  121 	orl	a,r6
      00000D 60 0B            [24]  122 	jz	00102$
                                    123 ;	_strtok.c:42: s = str;
      00000F 90r00r00         [24]  124 	mov	dptr,#_strtok_s_1_22
      000012 ED               [12]  125 	mov	a,r5
      000013 F0               [24]  126 	movx	@dptr,a
      000014 EE               [12]  127 	mov	a,r6
      000015 A3               [24]  128 	inc	dptr
      000016 F0               [24]  129 	movx	@dptr,a
      000017 EF               [12]  130 	mov	a,r7
      000018 A3               [24]  131 	inc	dptr
      000019 F0               [24]  132 	movx	@dptr,a
      00001A                        133 00102$:
                                    134 ;	_strtok.c:43: if ( !s )
      00001A 90r00r00         [24]  135 	mov	dptr,#_strtok_s_1_22
      00001D E0               [24]  136 	movx	a,@dptr
      00001E F5 F0            [12]  137 	mov	b,a
      000020 A3               [24]  138 	inc	dptr
      000021 E0               [24]  139 	movx	a,@dptr
      000022 45 F0            [12]  140 	orl	a,b
                                    141 ;	_strtok.c:44: return NULL;
      000024 70 08            [24]  142 	jnz	00108$
      000026 90 00 00         [24]  143 	mov	dptr,#0x0000
      000029 F5 F0            [12]  144 	mov	b,a
      00002B 02r01r16         [24]  145 	ljmp	00119$
                                    146 ;	_strtok.c:46: while (*s) {
      00002E                        147 00108$:
      00002E 90r00r00         [24]  148 	mov	dptr,#_strtok_s_1_22
      000031 E0               [24]  149 	movx	a,@dptr
      000032 FD               [12]  150 	mov	r5,a
      000033 A3               [24]  151 	inc	dptr
      000034 E0               [24]  152 	movx	a,@dptr
      000035 FE               [12]  153 	mov	r6,a
      000036 A3               [24]  154 	inc	dptr
      000037 E0               [24]  155 	movx	a,@dptr
      000038 FF               [12]  156 	mov	r7,a
      000039 8D 82            [24]  157 	mov	dpl,r5
      00003B 8E 83            [24]  158 	mov	dph,r6
      00003D 8F F0            [24]  159 	mov	b,r7
      00003F 12r00r00         [24]  160 	lcall	__gptrget
      000042 FF               [12]  161 	mov	r7,a
      000043 60 2C            [24]  162 	jz	00110$
                                    163 ;	_strtok.c:47: if (strchr(control,*s))
      000045 C0 07            [24]  164 	push	ar7
      000047 E5*00            [12]  165 	mov	a,_bp
      000049 24 FB            [12]  166 	add	a,#0xfb
      00004B F8               [12]  167 	mov	r0,a
      00004C 86 82            [24]  168 	mov	dpl,@r0
      00004E 08               [12]  169 	inc	r0
      00004F 86 83            [24]  170 	mov	dph,@r0
      000051 08               [12]  171 	inc	r0
      000052 86 F0            [24]  172 	mov	b,@r0
      000054 12r00r00         [24]  173 	lcall	_strchr
      000057 AD 82            [24]  174 	mov	r5,dpl
      000059 AE 83            [24]  175 	mov	r6,dph
      00005B AF F0            [24]  176 	mov	r7,b
      00005D 15 81            [12]  177 	dec	sp
      00005F ED               [12]  178 	mov	a,r5
      000060 4E               [12]  179 	orl	a,r6
      000061 60 0E            [24]  180 	jz	00110$
                                    181 ;	_strtok.c:48: s++;
      000063 90r00r00         [24]  182 	mov	dptr,#_strtok_s_1_22
      000066 E0               [24]  183 	movx	a,@dptr
      000067 24 01            [12]  184 	add	a,#0x01
      000069 F0               [24]  185 	movx	@dptr,a
      00006A A3               [24]  186 	inc	dptr
      00006B E0               [24]  187 	movx	a,@dptr
      00006C 34 00            [12]  188 	addc	a,#0x00
      00006E F0               [24]  189 	movx	@dptr,a
                                    190 ;	_strtok.c:50: break;
      00006F 80 BD            [24]  191 	sjmp	00108$
      000071                        192 00110$:
                                    193 ;	_strtok.c:53: s1 = s;
      000071 90r00r00         [24]  194 	mov	dptr,#_strtok_s_1_22
      000074 E0               [24]  195 	movx	a,@dptr
      000075 FD               [12]  196 	mov	r5,a
      000076 A3               [24]  197 	inc	dptr
      000077 E0               [24]  198 	movx	a,@dptr
      000078 FE               [12]  199 	mov	r6,a
      000079 A3               [24]  200 	inc	dptr
      00007A E0               [24]  201 	movx	a,@dptr
      00007B FF               [12]  202 	mov	r7,a
                                    203 ;	_strtok.c:55: while (*s) {
      00007C                        204 00113$:
      00007C 90r00r00         [24]  205 	mov	dptr,#_strtok_s_1_22
      00007F E0               [24]  206 	movx	a,@dptr
      000080 FA               [12]  207 	mov	r2,a
      000081 A3               [24]  208 	inc	dptr
      000082 E0               [24]  209 	movx	a,@dptr
      000083 FB               [12]  210 	mov	r3,a
      000084 A3               [24]  211 	inc	dptr
      000085 E0               [24]  212 	movx	a,@dptr
      000086 FC               [12]  213 	mov	r4,a
      000087 8A 82            [24]  214 	mov	dpl,r2
      000089 8B 83            [24]  215 	mov	dph,r3
      00008B 8C F0            [24]  216 	mov	b,r4
      00008D 12r00r00         [24]  217 	lcall	__gptrget
      000090 FC               [12]  218 	mov	r4,a
      000091 60 61            [24]  219 	jz	00115$
                                    220 ;	_strtok.c:56: if (strchr(control,*s)) {
      000093 C0 07            [24]  221 	push	ar7
      000095 C0 06            [24]  222 	push	ar6
      000097 C0 05            [24]  223 	push	ar5
      000099 C0 04            [24]  224 	push	ar4
      00009B E5*00            [12]  225 	mov	a,_bp
      00009D 24 FB            [12]  226 	add	a,#0xfb
      00009F F8               [12]  227 	mov	r0,a
      0000A0 86 82            [24]  228 	mov	dpl,@r0
      0000A2 08               [12]  229 	inc	r0
      0000A3 86 83            [24]  230 	mov	dph,@r0
      0000A5 08               [12]  231 	inc	r0
      0000A6 86 F0            [24]  232 	mov	b,@r0
      0000A8 12r00r00         [24]  233 	lcall	_strchr
      0000AB AA 82            [24]  234 	mov	r2,dpl
      0000AD AB 83            [24]  235 	mov	r3,dph
      0000AF AC F0            [24]  236 	mov	r4,b
      0000B1 15 81            [12]  237 	dec	sp
      0000B3 D0 05            [24]  238 	pop	ar5
      0000B5 D0 06            [24]  239 	pop	ar6
      0000B7 D0 07            [24]  240 	pop	ar7
      0000B9 EA               [12]  241 	mov	a,r2
      0000BA 4B               [12]  242 	orl	a,r3
      0000BB 60 29            [24]  243 	jz	00112$
                                    244 ;	_strtok.c:57: *s++ = '\0';
      0000BD 90r00r00         [24]  245 	mov	dptr,#_strtok_s_1_22
      0000C0 E0               [24]  246 	movx	a,@dptr
      0000C1 FA               [12]  247 	mov	r2,a
      0000C2 A3               [24]  248 	inc	dptr
      0000C3 E0               [24]  249 	movx	a,@dptr
      0000C4 FB               [12]  250 	mov	r3,a
      0000C5 A3               [24]  251 	inc	dptr
      0000C6 E0               [24]  252 	movx	a,@dptr
      0000C7 FC               [12]  253 	mov	r4,a
      0000C8 8A 82            [24]  254 	mov	dpl,r2
      0000CA 8B 83            [24]  255 	mov	dph,r3
      0000CC 8C F0            [24]  256 	mov	b,r4
      0000CE E4               [12]  257 	clr	a
      0000CF 12r00r00         [24]  258 	lcall	__gptrput
      0000D2 90r00r00         [24]  259 	mov	dptr,#_strtok_s_1_22
      0000D5 E0               [24]  260 	movx	a,@dptr
      0000D6 24 01            [12]  261 	add	a,#0x01
      0000D8 F0               [24]  262 	movx	@dptr,a
      0000D9 A3               [24]  263 	inc	dptr
      0000DA E0               [24]  264 	movx	a,@dptr
      0000DB 34 00            [12]  265 	addc	a,#0x00
      0000DD F0               [24]  266 	movx	@dptr,a
                                    267 ;	_strtok.c:58: return s1;
      0000DE 8D 82            [24]  268 	mov	dpl,r5
      0000E0 8E 83            [24]  269 	mov	dph,r6
      0000E2 8F F0            [24]  270 	mov	b,r7
      0000E4 80 30            [24]  271 	sjmp	00119$
      0000E6                        272 00112$:
                                    273 ;	_strtok.c:60: s++ ;
      0000E6 90r00r00         [24]  274 	mov	dptr,#_strtok_s_1_22
      0000E9 E0               [24]  275 	movx	a,@dptr
      0000EA 24 01            [12]  276 	add	a,#0x01
      0000EC F0               [24]  277 	movx	@dptr,a
      0000ED A3               [24]  278 	inc	dptr
      0000EE E0               [24]  279 	movx	a,@dptr
      0000EF 34 00            [12]  280 	addc	a,#0x00
      0000F1 F0               [24]  281 	movx	@dptr,a
      0000F2 80 88            [24]  282 	sjmp	00113$
      0000F4                        283 00115$:
                                    284 ;	_strtok.c:63: s = NULL;
      0000F4 90r00r00         [24]  285 	mov	dptr,#_strtok_s_1_22
      0000F7 E4               [12]  286 	clr	a
      0000F8 F0               [24]  287 	movx	@dptr,a
      0000F9 A3               [24]  288 	inc	dptr
      0000FA F0               [24]  289 	movx	@dptr,a
      0000FB A3               [24]  290 	inc	dptr
      0000FC F0               [24]  291 	movx	@dptr,a
                                    292 ;	_strtok.c:65: if (*s1)
      0000FD 8D 82            [24]  293 	mov	dpl,r5
      0000FF 8E 83            [24]  294 	mov	dph,r6
      000101 8F F0            [24]  295 	mov	b,r7
      000103 12r00r00         [24]  296 	lcall	__gptrget
      000106 60 08            [24]  297 	jz	00117$
                                    298 ;	_strtok.c:66: return s1;
      000108 8D 82            [24]  299 	mov	dpl,r5
      00010A 8E 83            [24]  300 	mov	dph,r6
      00010C 8F F0            [24]  301 	mov	b,r7
      00010E 80 06            [24]  302 	sjmp	00119$
      000110                        303 00117$:
                                    304 ;	_strtok.c:68: return NULL;
      000110 90 00 00         [24]  305 	mov	dptr,#0x0000
      000113 75 F0 00         [24]  306 	mov	b,#0x00
      000116                        307 00119$:
      000116 D0*00            [24]  308 	pop	_bp
      000118 22               [24]  309 	ret
                                    310 	.area CSEG    (CODE)
                                    311 	.area CONST   (CODE)
                                    312 	.area XINIT   (CODE)
                                    313 	.area CABS    (ABS,CODE)
