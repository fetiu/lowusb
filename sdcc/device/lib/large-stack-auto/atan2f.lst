                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:39:01 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atan2f
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 	.globl _atan2f
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'atan2f'
                                     94 ;------------------------------------------------------------
                                     95 ;y                         Allocated to stack - _bp -6
                                     96 ;x                         Allocated to stack - _bp +1
                                     97 ;r                         Allocated to stack - _bp +9
                                     98 ;sloc0                     Allocated to stack - _bp +5
                                     99 ;------------------------------------------------------------
                                    100 ;	atan2f.c:34: float atan2f(float x, float y)
                                    101 ;	-----------------------------------------
                                    102 ;	 function atan2f
                                    103 ;	-----------------------------------------
      000000                        104 _atan2f:
                           000007   105 	ar7 = 0x07
                           000006   106 	ar6 = 0x06
                           000005   107 	ar5 = 0x05
                           000004   108 	ar4 = 0x04
                           000003   109 	ar3 = 0x03
                           000002   110 	ar2 = 0x02
                           000001   111 	ar1 = 0x01
                           000000   112 	ar0 = 0x00
      000000 C0*00            [24]  113 	push	_bp
      000002 85 81*00         [24]  114 	mov	_bp,sp
      000005 C0 82            [24]  115 	push	dpl
      000007 C0 83            [24]  116 	push	dph
      000009 C0 F0            [24]  117 	push	b
      00000B C0 E0            [24]  118 	push	acc
      00000D E5 81            [12]  119 	mov	a,sp
      00000F 24 08            [12]  120 	add	a,#0x08
      000011 F5 81            [12]  121 	mov	sp,a
                                    122 ;	atan2f.c:38: if ((x==0.0) && (y==0.0))
      000013 A8*00            [24]  123 	mov	r0,_bp
      000015 08               [12]  124 	inc	r0
      000016 86 F0            [24]  125 	mov	b,@r0
      000018 08               [12]  126 	inc	r0
      000019 E6               [12]  127 	mov	a,@r0
      00001A 42 F0            [12]  128 	orl	b,a
      00001C 08               [12]  129 	inc	r0
      00001D E6               [12]  130 	mov	a,@r0
      00001E 42 F0            [12]  131 	orl	b,a
      000020 08               [12]  132 	inc	r0
      000021 E6               [12]  133 	mov	a,@r0
      000022 54 7F            [12]  134 	anl	a,#0x7F
      000024 45 F0            [12]  135 	orl	a,b
      000026 70 29            [24]  136 	jnz	00102$
      000028 E5*00            [12]  137 	mov	a,_bp
      00002A 24 FA            [12]  138 	add	a,#0xfa
      00002C F8               [12]  139 	mov	r0,a
      00002D 86 F0            [24]  140 	mov	b,@r0
      00002F 08               [12]  141 	inc	r0
      000030 E6               [12]  142 	mov	a,@r0
      000031 42 F0            [12]  143 	orl	b,a
      000033 08               [12]  144 	inc	r0
      000034 E6               [12]  145 	mov	a,@r0
      000035 42 F0            [12]  146 	orl	b,a
      000037 08               [12]  147 	inc	r0
      000038 E6               [12]  148 	mov	a,@r0
      000039 54 7F            [12]  149 	anl	a,#0x7F
      00003B 45 F0            [12]  150 	orl	a,b
      00003D 70 12            [24]  151 	jnz	00102$
                                    152 ;	atan2f.c:40: errno=EDOM;
      00003F 90r00r00         [24]  153 	mov	dptr,#_errno
      000042 74 21            [12]  154 	mov	a,#0x21
      000044 F0               [24]  155 	movx	@dptr,a
      000045 E4               [12]  156 	clr	a
      000046 A3               [24]  157 	inc	dptr
      000047 F0               [24]  158 	movx	@dptr,a
                                    159 ;	atan2f.c:41: return 0.0;
      000048 90 00 00         [24]  160 	mov	dptr,#(0x00&0x00ff)
      00004B E4               [12]  161 	clr	a
      00004C F5 F0            [12]  162 	mov	b,a
      00004E 02r02r6D         [24]  163 	ljmp	00109$
      000051                        164 00102$:
                                    165 ;	atan2f.c:44: if(fabsf(y)>=fabsf(x))
      000051 E5*00            [12]  166 	mov	a,_bp
      000053 24 FA            [12]  167 	add	a,#0xfa
      000055 F8               [12]  168 	mov	r0,a
      000056 86 82            [24]  169 	mov	dpl,@r0
      000058 08               [12]  170 	inc	r0
      000059 86 83            [24]  171 	mov	dph,@r0
      00005B 08               [12]  172 	inc	r0
      00005C 86 F0            [24]  173 	mov	b,@r0
      00005E 08               [12]  174 	inc	r0
      00005F E6               [12]  175 	mov	a,@r0
      000060 12r00r00         [24]  176 	lcall	_fabsf
      000063 C8               [12]  177 	xch	a,r0
      000064 E5*00            [12]  178 	mov	a,_bp
      000066 24 05            [12]  179 	add	a,#0x05
      000068 C8               [12]  180 	xch	a,r0
      000069 A6 82            [24]  181 	mov	@r0,dpl
      00006B 08               [12]  182 	inc	r0
      00006C A6 83            [24]  183 	mov	@r0,dph
      00006E 08               [12]  184 	inc	r0
      00006F A6 F0            [24]  185 	mov	@r0,b
      000071 08               [12]  186 	inc	r0
      000072 F6               [12]  187 	mov	@r0,a
      000073 A8*00            [24]  188 	mov	r0,_bp
      000075 08               [12]  189 	inc	r0
      000076 86 82            [24]  190 	mov	dpl,@r0
      000078 08               [12]  191 	inc	r0
      000079 86 83            [24]  192 	mov	dph,@r0
      00007B 08               [12]  193 	inc	r0
      00007C 86 F0            [24]  194 	mov	b,@r0
      00007E 08               [12]  195 	inc	r0
      00007F E6               [12]  196 	mov	a,@r0
      000080 12r00r00         [24]  197 	lcall	_fabsf
      000083 AC 82            [24]  198 	mov	r4,dpl
      000085 AD 83            [24]  199 	mov	r5,dph
      000087 AE F0            [24]  200 	mov	r6,b
      000089 FF               [12]  201 	mov	r7,a
      00008A C0 04            [24]  202 	push	ar4
      00008C C0 05            [24]  203 	push	ar5
      00008E C0 06            [24]  204 	push	ar6
      000090 C0 07            [24]  205 	push	ar7
      000092 E5*00            [12]  206 	mov	a,_bp
      000094 24 05            [12]  207 	add	a,#0x05
      000096 F8               [12]  208 	mov	r0,a
      000097 86 82            [24]  209 	mov	dpl,@r0
      000099 08               [12]  210 	inc	r0
      00009A 86 83            [24]  211 	mov	dph,@r0
      00009C 08               [12]  212 	inc	r0
      00009D 86 F0            [24]  213 	mov	b,@r0
      00009F 08               [12]  214 	inc	r0
      0000A0 E6               [12]  215 	mov	a,@r0
      0000A1 12r00r00         [24]  216 	lcall	___fslt
      0000A4 AF 82            [24]  217 	mov	r7,dpl
      0000A6 E5 81            [12]  218 	mov	a,sp
      0000A8 24 FC            [12]  219 	add	a,#0xfc
      0000AA F5 81            [12]  220 	mov	sp,a
      0000AC EF               [12]  221 	mov	a,r7
      0000AD 60 03            [24]  222 	jz	00135$
      0000AF 02r01r9D         [24]  223 	ljmp	00107$
      0000B2                        224 00135$:
                                    225 ;	atan2f.c:46: r=atanf(x/y);
      0000B2 E5*00            [12]  226 	mov	a,_bp
      0000B4 24 FA            [12]  227 	add	a,#0xfa
      0000B6 F8               [12]  228 	mov	r0,a
      0000B7 E6               [12]  229 	mov	a,@r0
      0000B8 C0 E0            [24]  230 	push	acc
      0000BA 08               [12]  231 	inc	r0
      0000BB E6               [12]  232 	mov	a,@r0
      0000BC C0 E0            [24]  233 	push	acc
      0000BE 08               [12]  234 	inc	r0
      0000BF E6               [12]  235 	mov	a,@r0
      0000C0 C0 E0            [24]  236 	push	acc
      0000C2 08               [12]  237 	inc	r0
      0000C3 E6               [12]  238 	mov	a,@r0
      0000C4 C0 E0            [24]  239 	push	acc
      0000C6 A8*00            [24]  240 	mov	r0,_bp
      0000C8 08               [12]  241 	inc	r0
      0000C9 86 82            [24]  242 	mov	dpl,@r0
      0000CB 08               [12]  243 	inc	r0
      0000CC 86 83            [24]  244 	mov	dph,@r0
      0000CE 08               [12]  245 	inc	r0
      0000CF 86 F0            [24]  246 	mov	b,@r0
      0000D1 08               [12]  247 	inc	r0
      0000D2 E6               [12]  248 	mov	a,@r0
      0000D3 12r00r00         [24]  249 	lcall	___fsdiv
      0000D6 AC 82            [24]  250 	mov	r4,dpl
      0000D8 AD 83            [24]  251 	mov	r5,dph
      0000DA AE F0            [24]  252 	mov	r6,b
      0000DC FF               [12]  253 	mov	r7,a
      0000DD E5 81            [12]  254 	mov	a,sp
      0000DF 24 FC            [12]  255 	add	a,#0xfc
      0000E1 F5 81            [12]  256 	mov	sp,a
      0000E3 8C 82            [24]  257 	mov	dpl,r4
      0000E5 8D 83            [24]  258 	mov	dph,r5
      0000E7 8E F0            [24]  259 	mov	b,r6
      0000E9 EF               [12]  260 	mov	a,r7
      0000EA 12r00r00         [24]  261 	lcall	_atanf
      0000ED AC 82            [24]  262 	mov	r4,dpl
      0000EF AD 83            [24]  263 	mov	r5,dph
      0000F1 AE F0            [24]  264 	mov	r6,b
      0000F3 FF               [12]  265 	mov	r7,a
      0000F4 E5*00            [12]  266 	mov	a,_bp
      0000F6 24 09            [12]  267 	add	a,#0x09
      0000F8 F8               [12]  268 	mov	r0,a
      0000F9 A6 04            [24]  269 	mov	@r0,ar4
      0000FB 08               [12]  270 	inc	r0
      0000FC A6 05            [24]  271 	mov	@r0,ar5
      0000FE 08               [12]  272 	inc	r0
      0000FF A6 06            [24]  273 	mov	@r0,ar6
      000101 08               [12]  274 	inc	r0
      000102 A6 07            [24]  275 	mov	@r0,ar7
                                    276 ;	atan2f.c:47: if(y<0.0) r+=(x>=0?PI:-PI);
      000104 E4               [12]  277 	clr	a
      000105 C0 E0            [24]  278 	push	acc
      000107 C0 E0            [24]  279 	push	acc
      000109 C0 E0            [24]  280 	push	acc
      00010B C0 E0            [24]  281 	push	acc
      00010D E5*00            [12]  282 	mov	a,_bp
      00010F 24 FA            [12]  283 	add	a,#0xfa
      000111 F8               [12]  284 	mov	r0,a
      000112 86 82            [24]  285 	mov	dpl,@r0
      000114 08               [12]  286 	inc	r0
      000115 86 83            [24]  287 	mov	dph,@r0
      000117 08               [12]  288 	inc	r0
      000118 86 F0            [24]  289 	mov	b,@r0
      00011A 08               [12]  290 	inc	r0
      00011B E6               [12]  291 	mov	a,@r0
      00011C 12r00r00         [24]  292 	lcall	___fslt
      00011F AB 82            [24]  293 	mov	r3,dpl
      000121 E5 81            [12]  294 	mov	a,sp
      000123 24 FC            [12]  295 	add	a,#0xfc
      000125 F5 81            [12]  296 	mov	sp,a
      000127 EB               [12]  297 	mov	a,r3
      000128 70 03            [24]  298 	jnz	00136$
      00012A 02r02r5E         [24]  299 	ljmp	00108$
      00012D                        300 00136$:
      00012D E4               [12]  301 	clr	a
      00012E C0 E0            [24]  302 	push	acc
      000130 C0 E0            [24]  303 	push	acc
      000132 C0 E0            [24]  304 	push	acc
      000134 C0 E0            [24]  305 	push	acc
      000136 A8*00            [24]  306 	mov	r0,_bp
      000138 08               [12]  307 	inc	r0
      000139 86 82            [24]  308 	mov	dpl,@r0
      00013B 08               [12]  309 	inc	r0
      00013C 86 83            [24]  310 	mov	dph,@r0
      00013E 08               [12]  311 	inc	r0
      00013F 86 F0            [24]  312 	mov	b,@r0
      000141 08               [12]  313 	inc	r0
      000142 E6               [12]  314 	mov	a,@r0
      000143 12r00r00         [24]  315 	lcall	___fslt
      000146 AB 82            [24]  316 	mov	r3,dpl
      000148 E5 81            [12]  317 	mov	a,sp
      00014A 24 FC            [12]  318 	add	a,#0xfc
      00014C F5 81            [12]  319 	mov	sp,a
      00014E EB               [12]  320 	mov	a,r3
      00014F 70 0A            [24]  321 	jnz	00111$
      000151 7A DB            [12]  322 	mov	r2,#0xDB
      000153 7B 0F            [12]  323 	mov	r3,#0x0F
      000155 7E 49            [12]  324 	mov	r6,#0x49
      000157 7F 40            [12]  325 	mov	r7,#0x40
      000159 80 08            [24]  326 	sjmp	00112$
      00015B                        327 00111$:
      00015B 7A DB            [12]  328 	mov	r2,#0xDB
      00015D 7B 0F            [12]  329 	mov	r3,#0x0F
      00015F 7E 49            [12]  330 	mov	r6,#0x49
      000161 7F C0            [12]  331 	mov	r7,#0xC0
      000163                        332 00112$:
      000163 C0 02            [24]  333 	push	ar2
      000165 C0 03            [24]  334 	push	ar3
      000167 C0 06            [24]  335 	push	ar6
      000169 C0 07            [24]  336 	push	ar7
      00016B E5*00            [12]  337 	mov	a,_bp
      00016D 24 09            [12]  338 	add	a,#0x09
      00016F F8               [12]  339 	mov	r0,a
      000170 86 82            [24]  340 	mov	dpl,@r0
      000172 08               [12]  341 	inc	r0
      000173 86 83            [24]  342 	mov	dph,@r0
      000175 08               [12]  343 	inc	r0
      000176 86 F0            [24]  344 	mov	b,@r0
      000178 08               [12]  345 	inc	r0
      000179 E6               [12]  346 	mov	a,@r0
      00017A 12r00r00         [24]  347 	lcall	___fsadd
      00017D AC 82            [24]  348 	mov	r4,dpl
      00017F AD 83            [24]  349 	mov	r5,dph
      000181 AE F0            [24]  350 	mov	r6,b
      000183 FF               [12]  351 	mov	r7,a
      000184 E5 81            [12]  352 	mov	a,sp
      000186 24 FC            [12]  353 	add	a,#0xfc
      000188 F5 81            [12]  354 	mov	sp,a
      00018A E5*00            [12]  355 	mov	a,_bp
      00018C 24 09            [12]  356 	add	a,#0x09
      00018E F8               [12]  357 	mov	r0,a
      00018F A6 04            [24]  358 	mov	@r0,ar4
      000191 08               [12]  359 	inc	r0
      000192 A6 05            [24]  360 	mov	@r0,ar5
      000194 08               [12]  361 	inc	r0
      000195 A6 06            [24]  362 	mov	@r0,ar6
      000197 08               [12]  363 	inc	r0
      000198 A6 07            [24]  364 	mov	@r0,ar7
      00019A 02r02r5E         [24]  365 	ljmp	00108$
      00019D                        366 00107$:
                                    367 ;	atan2f.c:51: r=-atanf(y/x);
      00019D A8*00            [24]  368 	mov	r0,_bp
      00019F 08               [12]  369 	inc	r0
      0001A0 E6               [12]  370 	mov	a,@r0
      0001A1 C0 E0            [24]  371 	push	acc
      0001A3 08               [12]  372 	inc	r0
      0001A4 E6               [12]  373 	mov	a,@r0
      0001A5 C0 E0            [24]  374 	push	acc
      0001A7 08               [12]  375 	inc	r0
      0001A8 E6               [12]  376 	mov	a,@r0
      0001A9 C0 E0            [24]  377 	push	acc
      0001AB 08               [12]  378 	inc	r0
      0001AC E6               [12]  379 	mov	a,@r0
      0001AD C0 E0            [24]  380 	push	acc
      0001AF E5*00            [12]  381 	mov	a,_bp
      0001B1 24 FA            [12]  382 	add	a,#0xfa
      0001B3 F8               [12]  383 	mov	r0,a
      0001B4 86 82            [24]  384 	mov	dpl,@r0
      0001B6 08               [12]  385 	inc	r0
      0001B7 86 83            [24]  386 	mov	dph,@r0
      0001B9 08               [12]  387 	inc	r0
      0001BA 86 F0            [24]  388 	mov	b,@r0
      0001BC 08               [12]  389 	inc	r0
      0001BD E6               [12]  390 	mov	a,@r0
      0001BE 12r00r00         [24]  391 	lcall	___fsdiv
      0001C1 AC 82            [24]  392 	mov	r4,dpl
      0001C3 AD 83            [24]  393 	mov	r5,dph
      0001C5 AE F0            [24]  394 	mov	r6,b
      0001C7 FF               [12]  395 	mov	r7,a
      0001C8 E5 81            [12]  396 	mov	a,sp
      0001CA 24 FC            [12]  397 	add	a,#0xfc
      0001CC F5 81            [12]  398 	mov	sp,a
      0001CE 8C 82            [24]  399 	mov	dpl,r4
      0001D0 8D 83            [24]  400 	mov	dph,r5
      0001D2 8E F0            [24]  401 	mov	b,r6
      0001D4 EF               [12]  402 	mov	a,r7
      0001D5 12r00r00         [24]  403 	lcall	_atanf
      0001D8 AC 82            [24]  404 	mov	r4,dpl
      0001DA AD 83            [24]  405 	mov	r5,dph
      0001DC AE F0            [24]  406 	mov	r6,b
      0001DE B2 E7            [12]  407 	cpl	acc.7
      0001E0 FF               [12]  408 	mov	r7,a
      0001E1 E5*00            [12]  409 	mov	a,_bp
      0001E3 24 09            [12]  410 	add	a,#0x09
      0001E5 F8               [12]  411 	mov	r0,a
      0001E6 A6 04            [24]  412 	mov	@r0,ar4
      0001E8 08               [12]  413 	inc	r0
      0001E9 A6 05            [24]  414 	mov	@r0,ar5
      0001EB 08               [12]  415 	inc	r0
      0001EC A6 06            [24]  416 	mov	@r0,ar6
      0001EE 08               [12]  417 	inc	r0
      0001EF A6 07            [24]  418 	mov	@r0,ar7
                                    419 ;	atan2f.c:52: r+=(x<0.0?-HALF_PI:HALF_PI);
      0001F1 E4               [12]  420 	clr	a
      0001F2 C0 E0            [24]  421 	push	acc
      0001F4 C0 E0            [24]  422 	push	acc
      0001F6 C0 E0            [24]  423 	push	acc
      0001F8 C0 E0            [24]  424 	push	acc
      0001FA A8*00            [24]  425 	mov	r0,_bp
      0001FC 08               [12]  426 	inc	r0
      0001FD 86 82            [24]  427 	mov	dpl,@r0
      0001FF 08               [12]  428 	inc	r0
      000200 86 83            [24]  429 	mov	dph,@r0
      000202 08               [12]  430 	inc	r0
      000203 86 F0            [24]  431 	mov	b,@r0
      000205 08               [12]  432 	inc	r0
      000206 E6               [12]  433 	mov	a,@r0
      000207 12r00r00         [24]  434 	lcall	___fslt
      00020A AF 82            [24]  435 	mov	r7,dpl
      00020C E5 81            [12]  436 	mov	a,sp
      00020E 24 FC            [12]  437 	add	a,#0xfc
      000210 F5 81            [12]  438 	mov	sp,a
      000212 EF               [12]  439 	mov	a,r7
      000213 60 0A            [24]  440 	jz	00113$
      000215 7C DB            [12]  441 	mov	r4,#0xDB
      000217 7D 0F            [12]  442 	mov	r5,#0x0F
      000219 7E C9            [12]  443 	mov	r6,#0xC9
      00021B 7F BF            [12]  444 	mov	r7,#0xBF
      00021D 80 08            [24]  445 	sjmp	00114$
      00021F                        446 00113$:
      00021F 7C DB            [12]  447 	mov	r4,#0xDB
      000221 7D 0F            [12]  448 	mov	r5,#0x0F
      000223 7E C9            [12]  449 	mov	r6,#0xC9
      000225 7F 3F            [12]  450 	mov	r7,#0x3F
      000227                        451 00114$:
      000227 C0 04            [24]  452 	push	ar4
      000229 C0 05            [24]  453 	push	ar5
      00022B C0 06            [24]  454 	push	ar6
      00022D C0 07            [24]  455 	push	ar7
      00022F E5*00            [12]  456 	mov	a,_bp
      000231 24 09            [12]  457 	add	a,#0x09
      000233 F8               [12]  458 	mov	r0,a
      000234 86 82            [24]  459 	mov	dpl,@r0
      000236 08               [12]  460 	inc	r0
      000237 86 83            [24]  461 	mov	dph,@r0
      000239 08               [12]  462 	inc	r0
      00023A 86 F0            [24]  463 	mov	b,@r0
      00023C 08               [12]  464 	inc	r0
      00023D E6               [12]  465 	mov	a,@r0
      00023E 12r00r00         [24]  466 	lcall	___fsadd
      000241 AC 82            [24]  467 	mov	r4,dpl
      000243 AD 83            [24]  468 	mov	r5,dph
      000245 AE F0            [24]  469 	mov	r6,b
      000247 FF               [12]  470 	mov	r7,a
      000248 E5 81            [12]  471 	mov	a,sp
      00024A 24 FC            [12]  472 	add	a,#0xfc
      00024C F5 81            [12]  473 	mov	sp,a
      00024E E5*00            [12]  474 	mov	a,_bp
      000250 24 09            [12]  475 	add	a,#0x09
      000252 F8               [12]  476 	mov	r0,a
      000253 A6 04            [24]  477 	mov	@r0,ar4
      000255 08               [12]  478 	inc	r0
      000256 A6 05            [24]  479 	mov	@r0,ar5
      000258 08               [12]  480 	inc	r0
      000259 A6 06            [24]  481 	mov	@r0,ar6
      00025B 08               [12]  482 	inc	r0
      00025C A6 07            [24]  483 	mov	@r0,ar7
      00025E                        484 00108$:
                                    485 ;	atan2f.c:54: return r;
      00025E E5*00            [12]  486 	mov	a,_bp
      000260 24 09            [12]  487 	add	a,#0x09
      000262 F8               [12]  488 	mov	r0,a
      000263 86 82            [24]  489 	mov	dpl,@r0
      000265 08               [12]  490 	inc	r0
      000266 86 83            [24]  491 	mov	dph,@r0
      000268 08               [12]  492 	inc	r0
      000269 86 F0            [24]  493 	mov	b,@r0
      00026B 08               [12]  494 	inc	r0
      00026C E6               [12]  495 	mov	a,@r0
      00026D                        496 00109$:
      00026D 85*00 81         [24]  497 	mov	sp,_bp
      000270 D0*00            [24]  498 	pop	_bp
      000272 22               [24]  499 	ret
                                    500 	.area CSEG    (CODE)
                                    501 	.area CONST   (CODE)
                                    502 	.area XINIT   (CODE)
                                    503 	.area CABS    (ABS,CODE)
