                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:20 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module atanf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _atanf
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
                                     57 ;--------------------------------------------------------
                                     58 ; absolute external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area XABS    (ABS,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external initialized ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XISEG   (XDATA)
                                     65 	.area HOME    (CODE)
                                     66 	.area GSINIT0 (CODE)
                                     67 	.area GSINIT1 (CODE)
                                     68 	.area GSINIT2 (CODE)
                                     69 	.area GSINIT3 (CODE)
                                     70 	.area GSINIT4 (CODE)
                                     71 	.area GSINIT5 (CODE)
                                     72 	.area GSINIT  (CODE)
                                     73 	.area GSFINAL (CODE)
                                     74 	.area CSEG    (CODE)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area HOME    (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area HOME    (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CSEG    (CODE)
                                     91 ;------------------------------------------------------------
                                     92 ;Allocation info for local variables in function 'atanf'
                                     93 ;------------------------------------------------------------
                                     94 ;x                         Allocated to stack - _bp +5
                                     95 ;f                         Allocated to stack - _bp +9
                                     96 ;r                         Allocated to stack - _bp +13
                                     97 ;g                         Allocated to registers r7 r6 r5 r4 
                                     98 ;n                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +1
                                    100 ;sloc1                     Allocated to stack - _bp +23
                                    101 ;------------------------------------------------------------
                                    102 ;	atanf.c:55: float atanf(float x) _FLOAT_FUNC_REENTRANT
                                    103 ;	-----------------------------------------
                                    104 ;	 function atanf
                                    105 ;	-----------------------------------------
      000000                        106 _atanf:
                           000007   107 	ar7 = 0x07
                           000006   108 	ar6 = 0x06
                           000005   109 	ar5 = 0x05
                           000004   110 	ar4 = 0x04
                           000003   111 	ar3 = 0x03
                           000002   112 	ar2 = 0x02
                           000001   113 	ar1 = 0x01
                           000000   114 	ar0 = 0x00
      000000 C0*00            [24]  115 	push	_bp
      000002 85 81*00         [24]  116 	mov	_bp,sp
      000005 C8               [12]  117 	xch	a,r0
      000006 E5 81            [12]  118 	mov	a,sp
      000008 24 12            [12]  119 	add	a,#0x12
      00000A F5 81            [12]  120 	mov	sp,a
      00000C E5*00            [12]  121 	mov	a,_bp
      00000E 24 05            [12]  122 	add	a,#0x05
      000010 C8               [12]  123 	xch	a,r0
      000011 A6 82            [24]  124 	mov	@r0,dpl
      000013 08               [12]  125 	inc	r0
      000014 A6 83            [24]  126 	mov	@r0,dph
      000016 08               [12]  127 	inc	r0
      000017 A6 F0            [24]  128 	mov	@r0,b
      000019 08               [12]  129 	inc	r0
      00001A F6               [12]  130 	mov	@r0,a
                                    131 ;	atanf.c:58: int n=0;
      00001B E5*00            [12]  132 	mov	a,_bp
      00001D 24 11            [12]  133 	add	a,#0x11
      00001F F8               [12]  134 	mov	r0,a
      000020 E4               [12]  135 	clr	a
      000021 F6               [12]  136 	mov	@r0,a
      000022 08               [12]  137 	inc	r0
      000023 F6               [12]  138 	mov	@r0,a
                                    139 ;	atanf.c:61: f=fabsf(x);
      000024 E5*00            [12]  140 	mov	a,_bp
      000026 24 05            [12]  141 	add	a,#0x05
      000028 F8               [12]  142 	mov	r0,a
      000029 86 82            [24]  143 	mov	dpl,@r0
      00002B 08               [12]  144 	inc	r0
      00002C 86 83            [24]  145 	mov	dph,@r0
      00002E 08               [12]  146 	inc	r0
      00002F 86 F0            [24]  147 	mov	b,@r0
      000031 08               [12]  148 	inc	r0
      000032 E6               [12]  149 	mov	a,@r0
      000033 78r00            [12]  150 	mov	r0,#_fabsf
      000035 79s00            [12]  151 	mov	r1,#(_fabsf >> 8)
      000037 7As00            [12]  152 	mov	r2,#(_fabsf >> 16)
      000039 12r00r00         [24]  153 	lcall	__sdcc_banked_call
      00003C AF 82            [24]  154 	mov	r7,dpl
      00003E AE 83            [24]  155 	mov	r6,dph
      000040 AD F0            [24]  156 	mov	r5,b
      000042 FC               [12]  157 	mov	r4,a
      000043 E5*00            [12]  158 	mov	a,_bp
      000045 24 09            [12]  159 	add	a,#0x09
      000047 F8               [12]  160 	mov	r0,a
      000048 A6 07            [24]  161 	mov	@r0,ar7
      00004A 08               [12]  162 	inc	r0
      00004B A6 06            [24]  163 	mov	@r0,ar6
      00004D 08               [12]  164 	inc	r0
      00004E A6 05            [24]  165 	mov	@r0,ar5
      000050 08               [12]  166 	inc	r0
      000051 A6 04            [24]  167 	mov	@r0,ar4
                                    168 ;	atanf.c:62: if(f>1.0)
      000053 E4               [12]  169 	clr	a
      000054 C0 E0            [24]  170 	push	acc
      000056 C0 E0            [24]  171 	push	acc
      000058 74 80            [12]  172 	mov	a,#0x80
      00005A C0 E0            [24]  173 	push	acc
      00005C 74 3F            [12]  174 	mov	a,#0x3F
      00005E C0 E0            [24]  175 	push	acc
      000060 E5*00            [12]  176 	mov	a,_bp
      000062 24 09            [12]  177 	add	a,#0x09
      000064 F8               [12]  178 	mov	r0,a
      000065 86 82            [24]  179 	mov	dpl,@r0
      000067 08               [12]  180 	inc	r0
      000068 86 83            [24]  181 	mov	dph,@r0
      00006A 08               [12]  182 	inc	r0
      00006B 86 F0            [24]  183 	mov	b,@r0
      00006D 08               [12]  184 	inc	r0
      00006E E6               [12]  185 	mov	a,@r0
      00006F 12r00r00         [24]  186 	lcall	___fsgt
      000072 AB 82            [24]  187 	mov	r3,dpl
      000074 E5 81            [12]  188 	mov	a,sp
      000076 24 FC            [12]  189 	add	a,#0xfc
      000078 F5 81            [12]  190 	mov	sp,a
      00007A EB               [12]  191 	mov	a,r3
      00007B 60 46            [24]  192 	jz	00102$
                                    193 ;	atanf.c:64: f=1.0/f;
      00007D E5*00            [12]  194 	mov	a,_bp
      00007F 24 09            [12]  195 	add	a,#0x09
      000081 F8               [12]  196 	mov	r0,a
      000082 E6               [12]  197 	mov	a,@r0
      000083 C0 E0            [24]  198 	push	acc
      000085 08               [12]  199 	inc	r0
      000086 E6               [12]  200 	mov	a,@r0
      000087 C0 E0            [24]  201 	push	acc
      000089 08               [12]  202 	inc	r0
      00008A E6               [12]  203 	mov	a,@r0
      00008B C0 E0            [24]  204 	push	acc
      00008D 08               [12]  205 	inc	r0
      00008E E6               [12]  206 	mov	a,@r0
      00008F C0 E0            [24]  207 	push	acc
      000091 90 00 00         [24]  208 	mov	dptr,#0x0000
      000094 75 F0 80         [24]  209 	mov	b,#0x80
      000097 74 3F            [12]  210 	mov	a,#0x3F
      000099 12r00r00         [24]  211 	lcall	___fsdiv
      00009C AF 82            [24]  212 	mov	r7,dpl
      00009E AE 83            [24]  213 	mov	r6,dph
      0000A0 AD F0            [24]  214 	mov	r5,b
      0000A2 FC               [12]  215 	mov	r4,a
      0000A3 E5 81            [12]  216 	mov	a,sp
      0000A5 24 FC            [12]  217 	add	a,#0xfc
      0000A7 F5 81            [12]  218 	mov	sp,a
      0000A9 E5*00            [12]  219 	mov	a,_bp
      0000AB 24 09            [12]  220 	add	a,#0x09
      0000AD F8               [12]  221 	mov	r0,a
      0000AE A6 07            [24]  222 	mov	@r0,ar7
      0000B0 08               [12]  223 	inc	r0
      0000B1 A6 06            [24]  224 	mov	@r0,ar6
      0000B3 08               [12]  225 	inc	r0
      0000B4 A6 05            [24]  226 	mov	@r0,ar5
      0000B6 08               [12]  227 	inc	r0
      0000B7 A6 04            [24]  228 	mov	@r0,ar4
                                    229 ;	atanf.c:65: n=2;
      0000B9 E5*00            [12]  230 	mov	a,_bp
      0000BB 24 11            [12]  231 	add	a,#0x11
      0000BD F8               [12]  232 	mov	r0,a
      0000BE 76 02            [12]  233 	mov	@r0,#0x02
      0000C0 08               [12]  234 	inc	r0
      0000C1 76 00            [12]  235 	mov	@r0,#0x00
      0000C3                        236 00102$:
                                    237 ;	atanf.c:67: if(f>K1)
      0000C3 74 A3            [12]  238 	mov	a,#0xA3
      0000C5 C0 E0            [24]  239 	push	acc
      0000C7 74 30            [12]  240 	mov	a,#0x30
      0000C9 C0 E0            [24]  241 	push	acc
      0000CB 74 89            [12]  242 	mov	a,#0x89
      0000CD C0 E0            [24]  243 	push	acc
      0000CF 74 3E            [12]  244 	mov	a,#0x3E
      0000D1 C0 E0            [24]  245 	push	acc
      0000D3 E5*00            [12]  246 	mov	a,_bp
      0000D5 24 09            [12]  247 	add	a,#0x09
      0000D7 F8               [12]  248 	mov	r0,a
      0000D8 86 82            [24]  249 	mov	dpl,@r0
      0000DA 08               [12]  250 	inc	r0
      0000DB 86 83            [24]  251 	mov	dph,@r0
      0000DD 08               [12]  252 	inc	r0
      0000DE 86 F0            [24]  253 	mov	b,@r0
      0000E0 08               [12]  254 	inc	r0
      0000E1 E6               [12]  255 	mov	a,@r0
      0000E2 12r00r00         [24]  256 	lcall	___fsgt
      0000E5 AB 82            [24]  257 	mov	r3,dpl
      0000E7 E5 81            [12]  258 	mov	a,sp
      0000E9 24 FC            [12]  259 	add	a,#0xfc
      0000EB F5 81            [12]  260 	mov	sp,a
      0000ED EB               [12]  261 	mov	a,r3
      0000EE 70 03            [24]  262 	jnz	00130$
      0000F0 02r01rE3         [24]  263 	ljmp	00104$
      0000F3                        264 00130$:
                                    265 ;	atanf.c:69: f=((K2*f-1.0)+f)/(K3+f);
      0000F3 E5*00            [12]  266 	mov	a,_bp
      0000F5 24 09            [12]  267 	add	a,#0x09
      0000F7 F8               [12]  268 	mov	r0,a
      0000F8 E6               [12]  269 	mov	a,@r0
      0000F9 C0 E0            [24]  270 	push	acc
      0000FB 08               [12]  271 	inc	r0
      0000FC E6               [12]  272 	mov	a,@r0
      0000FD C0 E0            [24]  273 	push	acc
      0000FF 08               [12]  274 	inc	r0
      000100 E6               [12]  275 	mov	a,@r0
      000101 C0 E0            [24]  276 	push	acc
      000103 08               [12]  277 	inc	r0
      000104 E6               [12]  278 	mov	a,@r0
      000105 C0 E0            [24]  279 	push	acc
      000107 90 67 AF         [24]  280 	mov	dptr,#0x67AF
      00010A 75 F0 3B         [24]  281 	mov	b,#0x3B
      00010D 74 3F            [12]  282 	mov	a,#0x3F
      00010F 12r00r00         [24]  283 	lcall	___fsmul
      000112 AA 82            [24]  284 	mov	r2,dpl
      000114 AB 83            [24]  285 	mov	r3,dph
      000116 AE F0            [24]  286 	mov	r6,b
      000118 FF               [12]  287 	mov	r7,a
      000119 E5 81            [12]  288 	mov	a,sp
      00011B 24 FC            [12]  289 	add	a,#0xfc
      00011D F5 81            [12]  290 	mov	sp,a
      00011F E4               [12]  291 	clr	a
      000120 C0 E0            [24]  292 	push	acc
      000122 C0 E0            [24]  293 	push	acc
      000124 74 80            [12]  294 	mov	a,#0x80
      000126 C0 E0            [24]  295 	push	acc
      000128 74 3F            [12]  296 	mov	a,#0x3F
      00012A C0 E0            [24]  297 	push	acc
      00012C 8A 82            [24]  298 	mov	dpl,r2
      00012E 8B 83            [24]  299 	mov	dph,r3
      000130 8E F0            [24]  300 	mov	b,r6
      000132 EF               [12]  301 	mov	a,r7
      000133 12r00r00         [24]  302 	lcall	___fssub
      000136 AC 82            [24]  303 	mov	r4,dpl
      000138 AD 83            [24]  304 	mov	r5,dph
      00013A AE F0            [24]  305 	mov	r6,b
      00013C FF               [12]  306 	mov	r7,a
      00013D E5 81            [12]  307 	mov	a,sp
      00013F 24 FC            [12]  308 	add	a,#0xfc
      000141 F5 81            [12]  309 	mov	sp,a
      000143 E5*00            [12]  310 	mov	a,_bp
      000145 24 09            [12]  311 	add	a,#0x09
      000147 F8               [12]  312 	mov	r0,a
      000148 E6               [12]  313 	mov	a,@r0
      000149 C0 E0            [24]  314 	push	acc
      00014B 08               [12]  315 	inc	r0
      00014C E6               [12]  316 	mov	a,@r0
      00014D C0 E0            [24]  317 	push	acc
      00014F 08               [12]  318 	inc	r0
      000150 E6               [12]  319 	mov	a,@r0
      000151 C0 E0            [24]  320 	push	acc
      000153 08               [12]  321 	inc	r0
      000154 E6               [12]  322 	mov	a,@r0
      000155 C0 E0            [24]  323 	push	acc
      000157 8C 82            [24]  324 	mov	dpl,r4
      000159 8D 83            [24]  325 	mov	dph,r5
      00015B 8E F0            [24]  326 	mov	b,r6
      00015D EF               [12]  327 	mov	a,r7
      00015E 12r00r00         [24]  328 	lcall	___fsadd
      000161 A8*00            [24]  329 	mov	r0,_bp
      000163 08               [12]  330 	inc	r0
      000164 A6 82            [24]  331 	mov	@r0,dpl
      000166 08               [12]  332 	inc	r0
      000167 A6 83            [24]  333 	mov	@r0,dph
      000169 08               [12]  334 	inc	r0
      00016A A6 F0            [24]  335 	mov	@r0,b
      00016C 08               [12]  336 	inc	r0
      00016D F6               [12]  337 	mov	@r0,a
      00016E E5 81            [12]  338 	mov	a,sp
      000170 24 FC            [12]  339 	add	a,#0xfc
      000172 F5 81            [12]  340 	mov	sp,a
      000174 74 D7            [12]  341 	mov	a,#0xD7
      000176 C0 E0            [24]  342 	push	acc
      000178 74 B3            [12]  343 	mov	a,#0xB3
      00017A C0 E0            [24]  344 	push	acc
      00017C 74 DD            [12]  345 	mov	a,#0xDD
      00017E C0 E0            [24]  346 	push	acc
      000180 74 3F            [12]  347 	mov	a,#0x3F
      000182 C0 E0            [24]  348 	push	acc
      000184 E5*00            [12]  349 	mov	a,_bp
      000186 24 09            [12]  350 	add	a,#0x09
      000188 F8               [12]  351 	mov	r0,a
      000189 86 82            [24]  352 	mov	dpl,@r0
      00018B 08               [12]  353 	inc	r0
      00018C 86 83            [24]  354 	mov	dph,@r0
      00018E 08               [12]  355 	inc	r0
      00018F 86 F0            [24]  356 	mov	b,@r0
      000191 08               [12]  357 	inc	r0
      000192 E6               [12]  358 	mov	a,@r0
      000193 12r00r00         [24]  359 	lcall	___fsadd
      000196 AA 82            [24]  360 	mov	r2,dpl
      000198 AB 83            [24]  361 	mov	r3,dph
      00019A AE F0            [24]  362 	mov	r6,b
      00019C FF               [12]  363 	mov	r7,a
      00019D E5 81            [12]  364 	mov	a,sp
      00019F 24 FC            [12]  365 	add	a,#0xfc
      0001A1 F5 81            [12]  366 	mov	sp,a
      0001A3 C0 02            [24]  367 	push	ar2
      0001A5 C0 03            [24]  368 	push	ar3
      0001A7 C0 06            [24]  369 	push	ar6
      0001A9 C0 07            [24]  370 	push	ar7
      0001AB A8*00            [24]  371 	mov	r0,_bp
      0001AD 08               [12]  372 	inc	r0
      0001AE 86 82            [24]  373 	mov	dpl,@r0
      0001B0 08               [12]  374 	inc	r0
      0001B1 86 83            [24]  375 	mov	dph,@r0
      0001B3 08               [12]  376 	inc	r0
      0001B4 86 F0            [24]  377 	mov	b,@r0
      0001B6 08               [12]  378 	inc	r0
      0001B7 E6               [12]  379 	mov	a,@r0
      0001B8 12r00r00         [24]  380 	lcall	___fsdiv
      0001BB AC 82            [24]  381 	mov	r4,dpl
      0001BD AD 83            [24]  382 	mov	r5,dph
      0001BF AE F0            [24]  383 	mov	r6,b
      0001C1 FF               [12]  384 	mov	r7,a
      0001C2 E5 81            [12]  385 	mov	a,sp
      0001C4 24 FC            [12]  386 	add	a,#0xfc
      0001C6 F5 81            [12]  387 	mov	sp,a
      0001C8 E5*00            [12]  388 	mov	a,_bp
      0001CA 24 09            [12]  389 	add	a,#0x09
      0001CC F8               [12]  390 	mov	r0,a
      0001CD A6 04            [24]  391 	mov	@r0,ar4
      0001CF 08               [12]  392 	inc	r0
      0001D0 A6 05            [24]  393 	mov	@r0,ar5
      0001D2 08               [12]  394 	inc	r0
      0001D3 A6 06            [24]  395 	mov	@r0,ar6
      0001D5 08               [12]  396 	inc	r0
      0001D6 A6 07            [24]  397 	mov	@r0,ar7
                                    398 ;	atanf.c:73: n++;
      0001D8 E5*00            [12]  399 	mov	a,_bp
      0001DA 24 11            [12]  400 	add	a,#0x11
      0001DC F8               [12]  401 	mov	r0,a
      0001DD 06               [12]  402 	inc	@r0
      0001DE B6 00 02         [24]  403 	cjne	@r0,#0x00,00131$
      0001E1 08               [12]  404 	inc	r0
      0001E2 06               [12]  405 	inc	@r0
      0001E3                        406 00131$:
      0001E3                        407 00104$:
                                    408 ;	atanf.c:75: if(fabsf(f)<EPS) r=f;
      0001E3 E5*00            [12]  409 	mov	a,_bp
      0001E5 24 09            [12]  410 	add	a,#0x09
      0001E7 F8               [12]  411 	mov	r0,a
      0001E8 86 82            [24]  412 	mov	dpl,@r0
      0001EA 08               [12]  413 	inc	r0
      0001EB 86 83            [24]  414 	mov	dph,@r0
      0001ED 08               [12]  415 	inc	r0
      0001EE 86 F0            [24]  416 	mov	b,@r0
      0001F0 08               [12]  417 	inc	r0
      0001F1 E6               [12]  418 	mov	a,@r0
      0001F2 78r00            [12]  419 	mov	r0,#_fabsf
      0001F4 79s00            [12]  420 	mov	r1,#(_fabsf >> 8)
      0001F6 7As00            [12]  421 	mov	r2,#(_fabsf >> 16)
      0001F8 12r00r00         [24]  422 	lcall	__sdcc_banked_call
      0001FB AC 82            [24]  423 	mov	r4,dpl
      0001FD AD 83            [24]  424 	mov	r5,dph
      0001FF AE F0            [24]  425 	mov	r6,b
      000201 FF               [12]  426 	mov	r7,a
      000202 E4               [12]  427 	clr	a
      000203 C0 E0            [24]  428 	push	acc
      000205 C0 E0            [24]  429 	push	acc
      000207 74 80            [12]  430 	mov	a,#0x80
      000209 C0 E0            [24]  431 	push	acc
      00020B 74 39            [12]  432 	mov	a,#0x39
      00020D C0 E0            [24]  433 	push	acc
      00020F 8C 82            [24]  434 	mov	dpl,r4
      000211 8D 83            [24]  435 	mov	dph,r5
      000213 8E F0            [24]  436 	mov	b,r6
      000215 EF               [12]  437 	mov	a,r7
      000216 12r00r00         [24]  438 	lcall	___fslt
      000219 AF 82            [24]  439 	mov	r7,dpl
      00021B E5 81            [12]  440 	mov	a,sp
      00021D 24 FC            [12]  441 	add	a,#0xfc
      00021F F5 81            [12]  442 	mov	sp,a
      000221 EF               [12]  443 	mov	a,r7
      000222 60 1B            [24]  444 	jz	00106$
      000224 E5*00            [12]  445 	mov	a,_bp
      000226 24 09            [12]  446 	add	a,#0x09
      000228 F8               [12]  447 	mov	r0,a
      000229 E5*00            [12]  448 	mov	a,_bp
      00022B 24 0D            [12]  449 	add	a,#0x0d
      00022D F9               [12]  450 	mov	r1,a
      00022E E6               [12]  451 	mov	a,@r0
      00022F F7               [12]  452 	mov	@r1,a
      000230 08               [12]  453 	inc	r0
      000231 09               [12]  454 	inc	r1
      000232 E6               [12]  455 	mov	a,@r0
      000233 F7               [12]  456 	mov	@r1,a
      000234 08               [12]  457 	inc	r0
      000235 09               [12]  458 	inc	r1
      000236 E6               [12]  459 	mov	a,@r0
      000237 F7               [12]  460 	mov	@r1,a
      000238 08               [12]  461 	inc	r0
      000239 09               [12]  462 	inc	r1
      00023A E6               [12]  463 	mov	a,@r0
      00023B F7               [12]  464 	mov	@r1,a
      00023C 02r03rD0         [24]  465 	ljmp	00107$
      00023F                        466 00106$:
                                    467 ;	atanf.c:78: g=f*f;
      00023F E5*00            [12]  468 	mov	a,_bp
      000241 24 09            [12]  469 	add	a,#0x09
      000243 F8               [12]  470 	mov	r0,a
      000244 E6               [12]  471 	mov	a,@r0
      000245 C0 E0            [24]  472 	push	acc
      000247 08               [12]  473 	inc	r0
      000248 E6               [12]  474 	mov	a,@r0
      000249 C0 E0            [24]  475 	push	acc
      00024B 08               [12]  476 	inc	r0
      00024C E6               [12]  477 	mov	a,@r0
      00024D C0 E0            [24]  478 	push	acc
      00024F 08               [12]  479 	inc	r0
      000250 E6               [12]  480 	mov	a,@r0
      000251 C0 E0            [24]  481 	push	acc
      000253 E5*00            [12]  482 	mov	a,_bp
      000255 24 09            [12]  483 	add	a,#0x09
      000257 F8               [12]  484 	mov	r0,a
      000258 86 82            [24]  485 	mov	dpl,@r0
      00025A 08               [12]  486 	inc	r0
      00025B 86 83            [24]  487 	mov	dph,@r0
      00025D 08               [12]  488 	inc	r0
      00025E 86 F0            [24]  489 	mov	b,@r0
      000260 08               [12]  490 	inc	r0
      000261 E6               [12]  491 	mov	a,@r0
      000262 12r00r00         [24]  492 	lcall	___fsmul
      000265 AF 82            [24]  493 	mov	r7,dpl
      000267 AE 83            [24]  494 	mov	r6,dph
      000269 AD F0            [24]  495 	mov	r5,b
      00026B FC               [12]  496 	mov	r4,a
      00026C E5 81            [12]  497 	mov	a,sp
      00026E 24 FC            [12]  498 	add	a,#0xfc
      000270 F5 81            [12]  499 	mov	sp,a
                                    500 ;	atanf.c:79: r=f+P(g,f)/Q(g);
      000272 C0 07            [24]  501 	push	ar7
      000274 C0 06            [24]  502 	push	ar6
      000276 C0 05            [24]  503 	push	ar5
      000278 C0 04            [24]  504 	push	ar4
      00027A C0 07            [24]  505 	push	ar7
      00027C C0 06            [24]  506 	push	ar6
      00027E C0 05            [24]  507 	push	ar5
      000280 C0 04            [24]  508 	push	ar4
      000282 90 86 91         [24]  509 	mov	dptr,#0x8691
      000285 75 F0 50         [24]  510 	mov	b,#0x50
      000288 74 BD            [12]  511 	mov	a,#0xBD
      00028A 12r00r00         [24]  512 	lcall	___fsmul
      00028D A8*00            [24]  513 	mov	r0,_bp
      00028F 08               [12]  514 	inc	r0
      000290 A6 82            [24]  515 	mov	@r0,dpl
      000292 08               [12]  516 	inc	r0
      000293 A6 83            [24]  517 	mov	@r0,dph
      000295 08               [12]  518 	inc	r0
      000296 A6 F0            [24]  519 	mov	@r0,b
      000298 08               [12]  520 	inc	r0
      000299 F6               [12]  521 	mov	@r0,a
      00029A E5 81            [12]  522 	mov	a,sp
      00029C 24 FC            [12]  523 	add	a,#0xfc
      00029E F5 81            [12]  524 	mov	sp,a
      0002A0 74 F6            [12]  525 	mov	a,#0xF6
      0002A2 C0 E0            [24]  526 	push	acc
      0002A4 74 10            [12]  527 	mov	a,#0x10
      0002A6 C0 E0            [24]  528 	push	acc
      0002A8 74 F1            [12]  529 	mov	a,#0xF1
      0002AA C0 E0            [24]  530 	push	acc
      0002AC 74 BE            [12]  531 	mov	a,#0xBE
      0002AE C0 E0            [24]  532 	push	acc
      0002B0 A8*00            [24]  533 	mov	r0,_bp
      0002B2 08               [12]  534 	inc	r0
      0002B3 86 82            [24]  535 	mov	dpl,@r0
      0002B5 08               [12]  536 	inc	r0
      0002B6 86 83            [24]  537 	mov	dph,@r0
      0002B8 08               [12]  538 	inc	r0
      0002B9 86 F0            [24]  539 	mov	b,@r0
      0002BB 08               [12]  540 	inc	r0
      0002BC E6               [12]  541 	mov	a,@r0
      0002BD 12r00r00         [24]  542 	lcall	___fsadd
      0002C0 A8*00            [24]  543 	mov	r0,_bp
      0002C2 08               [12]  544 	inc	r0
      0002C3 A6 82            [24]  545 	mov	@r0,dpl
      0002C5 08               [12]  546 	inc	r0
      0002C6 A6 83            [24]  547 	mov	@r0,dph
      0002C8 08               [12]  548 	inc	r0
      0002C9 A6 F0            [24]  549 	mov	@r0,b
      0002CB 08               [12]  550 	inc	r0
      0002CC F6               [12]  551 	mov	@r0,a
      0002CD E5 81            [12]  552 	mov	a,sp
      0002CF 24 FC            [12]  553 	add	a,#0xfc
      0002D1 F5 81            [12]  554 	mov	sp,a
      0002D3 D0 04            [24]  555 	pop	ar4
      0002D5 D0 05            [24]  556 	pop	ar5
      0002D7 D0 06            [24]  557 	pop	ar6
      0002D9 D0 07            [24]  558 	pop	ar7
      0002DB C0 07            [24]  559 	push	ar7
      0002DD C0 06            [24]  560 	push	ar6
      0002DF C0 05            [24]  561 	push	ar5
      0002E1 C0 04            [24]  562 	push	ar4
      0002E3 C0 07            [24]  563 	push	ar7
      0002E5 C0 06            [24]  564 	push	ar6
      0002E7 C0 05            [24]  565 	push	ar5
      0002E9 C0 04            [24]  566 	push	ar4
      0002EB A8*00            [24]  567 	mov	r0,_bp
      0002ED 08               [12]  568 	inc	r0
      0002EE 86 82            [24]  569 	mov	dpl,@r0
      0002F0 08               [12]  570 	inc	r0
      0002F1 86 83            [24]  571 	mov	dph,@r0
      0002F3 08               [12]  572 	inc	r0
      0002F4 86 F0            [24]  573 	mov	b,@r0
      0002F6 08               [12]  574 	inc	r0
      0002F7 E6               [12]  575 	mov	a,@r0
      0002F8 12r00r00         [24]  576 	lcall	___fsmul
      0002FB A8*00            [24]  577 	mov	r0,_bp
      0002FD 08               [12]  578 	inc	r0
      0002FE A6 82            [24]  579 	mov	@r0,dpl
      000300 08               [12]  580 	inc	r0
      000301 A6 83            [24]  581 	mov	@r0,dph
      000303 08               [12]  582 	inc	r0
      000304 A6 F0            [24]  583 	mov	@r0,b
      000306 08               [12]  584 	inc	r0
      000307 F6               [12]  585 	mov	@r0,a
      000308 E5 81            [12]  586 	mov	a,sp
      00030A 24 FC            [12]  587 	add	a,#0xfc
      00030C F5 81            [12]  588 	mov	sp,a
      00030E E5*00            [12]  589 	mov	a,_bp
      000310 24 09            [12]  590 	add	a,#0x09
      000312 F8               [12]  591 	mov	r0,a
      000313 E6               [12]  592 	mov	a,@r0
      000314 C0 E0            [24]  593 	push	acc
      000316 08               [12]  594 	inc	r0
      000317 E6               [12]  595 	mov	a,@r0
      000318 C0 E0            [24]  596 	push	acc
      00031A 08               [12]  597 	inc	r0
      00031B E6               [12]  598 	mov	a,@r0
      00031C C0 E0            [24]  599 	push	acc
      00031E 08               [12]  600 	inc	r0
      00031F E6               [12]  601 	mov	a,@r0
      000320 C0 E0            [24]  602 	push	acc
      000322 A8*00            [24]  603 	mov	r0,_bp
      000324 08               [12]  604 	inc	r0
      000325 86 82            [24]  605 	mov	dpl,@r0
      000327 08               [12]  606 	inc	r0
      000328 86 83            [24]  607 	mov	dph,@r0
      00032A 08               [12]  608 	inc	r0
      00032B 86 F0            [24]  609 	mov	b,@r0
      00032D 08               [12]  610 	inc	r0
      00032E E6               [12]  611 	mov	a,@r0
      00032F 12r00r00         [24]  612 	lcall	___fsmul
      000332 A8*00            [24]  613 	mov	r0,_bp
      000334 08               [12]  614 	inc	r0
      000335 A6 82            [24]  615 	mov	@r0,dpl
      000337 08               [12]  616 	inc	r0
      000338 A6 83            [24]  617 	mov	@r0,dph
      00033A 08               [12]  618 	inc	r0
      00033B A6 F0            [24]  619 	mov	@r0,b
      00033D 08               [12]  620 	inc	r0
      00033E F6               [12]  621 	mov	@r0,a
      00033F E5 81            [12]  622 	mov	a,sp
      000341 24 FC            [12]  623 	add	a,#0xfc
      000343 F5 81            [12]  624 	mov	sp,a
      000345 D0 04            [24]  625 	pop	ar4
      000347 D0 05            [24]  626 	pop	ar5
      000349 D0 06            [24]  627 	pop	ar6
      00034B D0 07            [24]  628 	pop	ar7
      00034D 74 D3            [12]  629 	mov	a,#0xD3
      00034F C0 E0            [24]  630 	push	acc
      000351 74 CC            [12]  631 	mov	a,#0xCC
      000353 C0 E0            [24]  632 	push	acc
      000355 74 B4            [12]  633 	mov	a,#0xB4
      000357 C0 E0            [24]  634 	push	acc
      000359 74 3F            [12]  635 	mov	a,#0x3F
      00035B C0 E0            [24]  636 	push	acc
      00035D 8F 82            [24]  637 	mov	dpl,r7
      00035F 8E 83            [24]  638 	mov	dph,r6
      000361 8D F0            [24]  639 	mov	b,r5
      000363 EC               [12]  640 	mov	a,r4
      000364 12r00r00         [24]  641 	lcall	___fsadd
      000367 AF 82            [24]  642 	mov	r7,dpl
      000369 AE 83            [24]  643 	mov	r6,dph
      00036B AD F0            [24]  644 	mov	r5,b
      00036D FC               [12]  645 	mov	r4,a
      00036E E5 81            [12]  646 	mov	a,sp
      000370 24 FC            [12]  647 	add	a,#0xfc
      000372 F5 81            [12]  648 	mov	sp,a
      000374 C0 07            [24]  649 	push	ar7
      000376 C0 06            [24]  650 	push	ar6
      000378 C0 05            [24]  651 	push	ar5
      00037A C0 04            [24]  652 	push	ar4
      00037C A8*00            [24]  653 	mov	r0,_bp
      00037E 08               [12]  654 	inc	r0
      00037F 86 82            [24]  655 	mov	dpl,@r0
      000381 08               [12]  656 	inc	r0
      000382 86 83            [24]  657 	mov	dph,@r0
      000384 08               [12]  658 	inc	r0
      000385 86 F0            [24]  659 	mov	b,@r0
      000387 08               [12]  660 	inc	r0
      000388 E6               [12]  661 	mov	a,@r0
      000389 12r00r00         [24]  662 	lcall	___fsdiv
      00038C AF 82            [24]  663 	mov	r7,dpl
      00038E AE 83            [24]  664 	mov	r6,dph
      000390 AD F0            [24]  665 	mov	r5,b
      000392 FC               [12]  666 	mov	r4,a
      000393 E5 81            [12]  667 	mov	a,sp
      000395 24 FC            [12]  668 	add	a,#0xfc
      000397 F5 81            [12]  669 	mov	sp,a
      000399 C0 07            [24]  670 	push	ar7
      00039B C0 06            [24]  671 	push	ar6
      00039D C0 05            [24]  672 	push	ar5
      00039F C0 04            [24]  673 	push	ar4
      0003A1 E5*00            [12]  674 	mov	a,_bp
      0003A3 24 09            [12]  675 	add	a,#0x09
      0003A5 F8               [12]  676 	mov	r0,a
      0003A6 86 82            [24]  677 	mov	dpl,@r0
      0003A8 08               [12]  678 	inc	r0
      0003A9 86 83            [24]  679 	mov	dph,@r0
      0003AB 08               [12]  680 	inc	r0
      0003AC 86 F0            [24]  681 	mov	b,@r0
      0003AE 08               [12]  682 	inc	r0
      0003AF E6               [12]  683 	mov	a,@r0
      0003B0 12r00r00         [24]  684 	lcall	___fsadd
      0003B3 AF 82            [24]  685 	mov	r7,dpl
      0003B5 AE 83            [24]  686 	mov	r6,dph
      0003B7 AD F0            [24]  687 	mov	r5,b
      0003B9 FC               [12]  688 	mov	r4,a
      0003BA E5 81            [12]  689 	mov	a,sp
      0003BC 24 FC            [12]  690 	add	a,#0xfc
      0003BE F5 81            [12]  691 	mov	sp,a
      0003C0 E5*00            [12]  692 	mov	a,_bp
      0003C2 24 0D            [12]  693 	add	a,#0x0d
      0003C4 F8               [12]  694 	mov	r0,a
      0003C5 A6 07            [24]  695 	mov	@r0,ar7
      0003C7 08               [12]  696 	inc	r0
      0003C8 A6 06            [24]  697 	mov	@r0,ar6
      0003CA 08               [12]  698 	inc	r0
      0003CB A6 05            [24]  699 	mov	@r0,ar5
      0003CD 08               [12]  700 	inc	r0
      0003CE A6 04            [24]  701 	mov	@r0,ar4
      0003D0                        702 00107$:
                                    703 ;	atanf.c:81: if(n>1) r=-r;
      0003D0 E5*00            [12]  704 	mov	a,_bp
      0003D2 24 11            [12]  705 	add	a,#0x11
      0003D4 F8               [12]  706 	mov	r0,a
      0003D5 C3               [12]  707 	clr	c
      0003D6 74 01            [12]  708 	mov	a,#0x01
      0003D8 96               [12]  709 	subb	a,@r0
      0003D9 74 80            [12]  710 	mov	a,#(0x00 ^ 0x80)
      0003DB 08               [12]  711 	inc	r0
      0003DC 86 F0            [24]  712 	mov	b,@r0
      0003DE 63 F0 80         [24]  713 	xrl	b,#0x80
      0003E1 95 F0            [12]  714 	subb	a,b
      0003E3 50 12            [24]  715 	jnc	00109$
      0003E5 E5*00            [12]  716 	mov	a,_bp
      0003E7 24 0D            [12]  717 	add	a,#0x0d
      0003E9 F8               [12]  718 	mov	r0,a
      0003EA E6               [12]  719 	mov	a,@r0
      0003EB F6               [12]  720 	mov	@r0,a
      0003EC 08               [12]  721 	inc	r0
      0003ED E6               [12]  722 	mov	a,@r0
      0003EE F6               [12]  723 	mov	@r0,a
      0003EF 08               [12]  724 	inc	r0
      0003F0 E6               [12]  725 	mov	a,@r0
      0003F1 F6               [12]  726 	mov	@r0,a
      0003F2 08               [12]  727 	inc	r0
      0003F3 E6               [12]  728 	mov	a,@r0
      0003F4 B2 E7            [12]  729 	cpl	acc.7
      0003F6 F6               [12]  730 	mov	@r0,a
      0003F7                        731 00109$:
                                    732 ;	atanf.c:82: r+=a[n];
      0003F7 E5*00            [12]  733 	mov	a,_bp
      0003F9 24 11            [12]  734 	add	a,#0x11
      0003FB F8               [12]  735 	mov	r0,a
      0003FC 86 02            [24]  736 	mov	ar2,@r0
      0003FE 08               [12]  737 	inc	r0
      0003FF E6               [12]  738 	mov	a,@r0
      000400 CA               [12]  739 	xch	a,r2
      000401 25 E0            [12]  740 	add	a,acc
      000403 CA               [12]  741 	xch	a,r2
      000404 33               [12]  742 	rlc	a
      000405 CA               [12]  743 	xch	a,r2
      000406 25 E0            [12]  744 	add	a,acc
      000408 CA               [12]  745 	xch	a,r2
      000409 33               [12]  746 	rlc	a
      00040A FB               [12]  747 	mov	r3,a
      00040B EA               [12]  748 	mov	a,r2
      00040C 24r00            [12]  749 	add	a,#_atanf_a_1_24
      00040E F5 82            [12]  750 	mov	dpl,a
      000410 EB               [12]  751 	mov	a,r3
      000411 34s00            [12]  752 	addc	a,#(_atanf_a_1_24 >> 8)
      000413 F5 83            [12]  753 	mov	dph,a
      000415 E4               [12]  754 	clr	a
      000416 93               [24]  755 	movc	a,@a+dptr
      000417 FA               [12]  756 	mov	r2,a
      000418 A3               [24]  757 	inc	dptr
      000419 E4               [12]  758 	clr	a
      00041A 93               [24]  759 	movc	a,@a+dptr
      00041B FB               [12]  760 	mov	r3,a
      00041C A3               [24]  761 	inc	dptr
      00041D E4               [12]  762 	clr	a
      00041E 93               [24]  763 	movc	a,@a+dptr
      00041F FE               [12]  764 	mov	r6,a
      000420 A3               [24]  765 	inc	dptr
      000421 E4               [12]  766 	clr	a
      000422 93               [24]  767 	movc	a,@a+dptr
      000423 FF               [12]  768 	mov	r7,a
      000424 C0 02            [24]  769 	push	ar2
      000426 C0 03            [24]  770 	push	ar3
      000428 C0 06            [24]  771 	push	ar6
      00042A C0 07            [24]  772 	push	ar7
      00042C E5*00            [12]  773 	mov	a,_bp
      00042E 24 0D            [12]  774 	add	a,#0x0d
      000430 F8               [12]  775 	mov	r0,a
      000431 86 82            [24]  776 	mov	dpl,@r0
      000433 08               [12]  777 	inc	r0
      000434 86 83            [24]  778 	mov	dph,@r0
      000436 08               [12]  779 	inc	r0
      000437 86 F0            [24]  780 	mov	b,@r0
      000439 08               [12]  781 	inc	r0
      00043A E6               [12]  782 	mov	a,@r0
      00043B 12r00r00         [24]  783 	lcall	___fsadd
      00043E AC 82            [24]  784 	mov	r4,dpl
      000440 AD 83            [24]  785 	mov	r5,dph
      000442 AE F0            [24]  786 	mov	r6,b
      000444 FF               [12]  787 	mov	r7,a
      000445 E5 81            [12]  788 	mov	a,sp
      000447 24 FC            [12]  789 	add	a,#0xfc
      000449 F5 81            [12]  790 	mov	sp,a
      00044B E5*00            [12]  791 	mov	a,_bp
      00044D 24 0D            [12]  792 	add	a,#0x0d
      00044F F8               [12]  793 	mov	r0,a
      000450 A6 04            [24]  794 	mov	@r0,ar4
      000452 08               [12]  795 	inc	r0
      000453 A6 05            [24]  796 	mov	@r0,ar5
      000455 08               [12]  797 	inc	r0
      000456 A6 06            [24]  798 	mov	@r0,ar6
      000458 08               [12]  799 	inc	r0
      000459 A6 07            [24]  800 	mov	@r0,ar7
                                    801 ;	atanf.c:83: if(x<0.0) r=-r;
      00045B E4               [12]  802 	clr	a
      00045C C0 E0            [24]  803 	push	acc
      00045E C0 E0            [24]  804 	push	acc
      000460 C0 E0            [24]  805 	push	acc
      000462 C0 E0            [24]  806 	push	acc
      000464 E5*00            [12]  807 	mov	a,_bp
      000466 24 05            [12]  808 	add	a,#0x05
      000468 F8               [12]  809 	mov	r0,a
      000469 86 82            [24]  810 	mov	dpl,@r0
      00046B 08               [12]  811 	inc	r0
      00046C 86 83            [24]  812 	mov	dph,@r0
      00046E 08               [12]  813 	inc	r0
      00046F 86 F0            [24]  814 	mov	b,@r0
      000471 08               [12]  815 	inc	r0
      000472 E6               [12]  816 	mov	a,@r0
      000473 12r00r00         [24]  817 	lcall	___fslt
      000476 AF 82            [24]  818 	mov	r7,dpl
      000478 E5 81            [12]  819 	mov	a,sp
      00047A 24 FC            [12]  820 	add	a,#0xfc
      00047C F5 81            [12]  821 	mov	sp,a
      00047E EF               [12]  822 	mov	a,r7
      00047F 60 12            [24]  823 	jz	00111$
      000481 E5*00            [12]  824 	mov	a,_bp
      000483 24 0D            [12]  825 	add	a,#0x0d
      000485 F8               [12]  826 	mov	r0,a
      000486 E6               [12]  827 	mov	a,@r0
      000487 F6               [12]  828 	mov	@r0,a
      000488 08               [12]  829 	inc	r0
      000489 E6               [12]  830 	mov	a,@r0
      00048A F6               [12]  831 	mov	@r0,a
      00048B 08               [12]  832 	inc	r0
      00048C E6               [12]  833 	mov	a,@r0
      00048D F6               [12]  834 	mov	@r0,a
      00048E 08               [12]  835 	inc	r0
      00048F E6               [12]  836 	mov	a,@r0
      000490 B2 E7            [12]  837 	cpl	acc.7
      000492 F6               [12]  838 	mov	@r0,a
      000493                        839 00111$:
                                    840 ;	atanf.c:84: return r;
      000493 E5*00            [12]  841 	mov	a,_bp
      000495 24 0D            [12]  842 	add	a,#0x0d
      000497 F8               [12]  843 	mov	r0,a
      000498 86 82            [24]  844 	mov	dpl,@r0
      00049A 08               [12]  845 	inc	r0
      00049B 86 83            [24]  846 	mov	dph,@r0
      00049D 08               [12]  847 	inc	r0
      00049E 86 F0            [24]  848 	mov	b,@r0
      0004A0 08               [12]  849 	inc	r0
      0004A1 E6               [12]  850 	mov	a,@r0
      0004A2 85*00 81         [24]  851 	mov	sp,_bp
      0004A5 D0*00            [24]  852 	pop	_bp
      0004A7 02r00r00         [24]  853 	ljmp	__sdcc_banked_ret
                                    854 	.area CSEG    (CODE)
                                    855 	.area CONST   (CODE)
      000000                        856 _atanf_a_1_24:
      000000 00 00 00 00            857 	.byte #0x00,#0x00,#0x00,#0x00	;  0.000000e+00
      000004 92 0A 06 3F            858 	.byte #0x92,#0x0A,#0x06,#0x3F	;  5.235988e-01
      000008 DB 0F C9 3F            859 	.byte #0xDB,#0x0F,#0xC9,#0x3F	;  1.570796e+00
      00000C 92 0A 86 3F            860 	.byte #0x92,#0x0A,#0x86,#0x3F	;  1.047198e+00
                                    861 	.area XINIT   (CODE)
                                    862 	.area CABS    (ABS,CODE)
