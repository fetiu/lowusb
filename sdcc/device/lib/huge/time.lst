                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:27 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module time
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl ___day
                                     13 	.globl ___month
                                     14 	.globl _RtcRead
                                     15 	.globl _sprintf
                                     16 	.globl _time
                                     17 	.globl _asctime
                                     18 	.globl _ctime
                                     19 	.globl _localtime
                                     20 	.globl _gmtime
                                     21 	.globl _mktime
                                     22 ;--------------------------------------------------------
                                     23 ; special function registers
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; special function bits
                                     29 ;--------------------------------------------------------
                                     30 	.area RSEG    (ABS,DATA)
      000000                         31 	.org 0x0000
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable register banks
                                     34 ;--------------------------------------------------------
                                     35 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         36 	.ds 8
                                     37 ;--------------------------------------------------------
                                     38 ; internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DSEG    (DATA)
      000000                         41 _asctime_sloc0_1_0:
      000000                         42 	.ds 2
      000002                         43 _asctime_sloc1_1_0:
      000002                         44 	.ds 2
      000004                         45 _asctime_sloc2_1_0:
      000004                         46 	.ds 2
      000006                         47 _asctime_sloc3_1_0:
      000006                         48 	.ds 2
      000008                         49 _gmtime_sloc0_1_0:
      000008                         50 	.ds 2
      00000A                         51 _gmtime_sloc1_1_0:
      00000A                         52 	.ds 4
      00000E                         53 _gmtime_sloc2_1_0:
      00000E                         54 	.ds 2
      000010                         55 _gmtime_sloc3_1_0:
      000010                         56 	.ds 4
      000014                         57 _mktime_sloc0_1_0:
      000014                         58 	.ds 2
      000016                         59 _mktime_sloc1_1_0:
      000016                         60 	.ds 4
      00001A                         61 _mktime_sloc2_1_0:
      00001A                         62 	.ds 3
      00001D                         63 _mktime_sloc3_1_0:
      00001D                         64 	.ds 4
                                     65 ;--------------------------------------------------------
                                     66 ; overlayable items in internal ram 
                                     67 ;--------------------------------------------------------
                                     68 ;--------------------------------------------------------
                                     69 ; indirectly addressable internal ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area ISEG    (DATA)
                                     72 ;--------------------------------------------------------
                                     73 ; absolute internal ram data
                                     74 ;--------------------------------------------------------
                                     75 	.area IABS    (ABS,DATA)
                                     76 	.area IABS    (ABS,DATA)
                                     77 ;--------------------------------------------------------
                                     78 ; bit data
                                     79 ;--------------------------------------------------------
                                     80 	.area BSEG    (BIT)
                                     81 ;--------------------------------------------------------
                                     82 ; paged external ram data
                                     83 ;--------------------------------------------------------
                                     84 	.area PSEG    (PAG,XDATA)
                                     85 ;--------------------------------------------------------
                                     86 ; external ram data
                                     87 ;--------------------------------------------------------
                                     88 	.area XSEG    (XDATA)
      000000                         89 _time_timeptr_1_20:
      000000                         90 	.ds 3
      000003                         91 _time_now_1_21:
      000003                         92 	.ds 12
      00000F                         93 _time_t_1_21:
      00000F                         94 	.ds 4
      000013                         95 _ascTimeBuffer:
      000013                         96 	.ds 32
      000033                         97 _CheckTime_timeptr_1_24:
      000033                         98 	.ds 3
      000036                         99 _asctime_timeptr_1_26:
      000036                        100 	.ds 3
      000039                        101 _ctime_timep_1_28:
      000039                        102 	.ds 3
      00003C                        103 _lastTime:
      00003C                        104 	.ds 12
      000048                        105 _localtime_timep_1_30:
      000048                        106 	.ds 3
      00004B                        107 _gmtime_timep_1_32:
      00004B                        108 	.ds 3
      00004E                        109 _gmtime_epoch_1_33:
      00004E                        110 	.ds 4
      000052                        111 _gmtime_monthLength_1_33:
      000052                        112 	.ds 1
      000053                        113 _gmtime_days_1_33:
      000053                        114 	.ds 4
      000057                        115 _mktime_timeptr_1_42:
      000057                        116 	.ds 3
      00005A                        117 _mktime_seconds_1_43:
      00005A                        118 	.ds 4
                                    119 ;--------------------------------------------------------
                                    120 ; absolute external ram data
                                    121 ;--------------------------------------------------------
                                    122 	.area XABS    (ABS,XDATA)
                                    123 ;--------------------------------------------------------
                                    124 ; external initialized ram data
                                    125 ;--------------------------------------------------------
                                    126 	.area XISEG   (XDATA)
                                    127 	.area HOME    (CODE)
                                    128 	.area GSINIT0 (CODE)
                                    129 	.area GSINIT1 (CODE)
                                    130 	.area GSINIT2 (CODE)
                                    131 	.area GSINIT3 (CODE)
                                    132 	.area GSINIT4 (CODE)
                                    133 	.area GSINIT5 (CODE)
                                    134 	.area GSINIT  (CODE)
                                    135 	.area GSFINAL (CODE)
                                    136 	.area CSEG    (CODE)
                                    137 ;--------------------------------------------------------
                                    138 ; global & static initialisations
                                    139 ;--------------------------------------------------------
                                    140 	.area HOME    (CODE)
                                    141 	.area GSINIT  (CODE)
                                    142 	.area GSFINAL (CODE)
                                    143 	.area GSINIT  (CODE)
                                    144 ;--------------------------------------------------------
                                    145 ; Home
                                    146 ;--------------------------------------------------------
                                    147 	.area HOME    (CODE)
                                    148 	.area HOME    (CODE)
                                    149 ;--------------------------------------------------------
                                    150 ; code
                                    151 ;--------------------------------------------------------
                                    152 	.area CSEG    (CODE)
                                    153 ;------------------------------------------------------------
                                    154 ;Allocation info for local variables in function 'RtcRead'
                                    155 ;------------------------------------------------------------
                                    156 ;timeptr                   Allocated with name '_RtcRead_timeptr_1_18'
                                    157 ;------------------------------------------------------------
                                    158 ;	time.c:42: unsigned char RtcRead(struct tm *timeptr) {
                                    159 ;	-----------------------------------------
                                    160 ;	 function RtcRead
                                    161 ;	-----------------------------------------
      000000                        162 _RtcRead:
                           000007   163 	ar7 = 0x07
                           000006   164 	ar6 = 0x06
                           000005   165 	ar5 = 0x05
                           000004   166 	ar4 = 0x04
                           000003   167 	ar3 = 0x03
                           000002   168 	ar2 = 0x02
                           000001   169 	ar1 = 0x01
                           000000   170 	ar0 = 0x00
                                    171 ;	time.c:45: return 0;
      000000 75 82 00         [24]  172 	mov	dpl,#0x00
      000003 02r00r00         [24]  173 	ljmp	__sdcc_banked_ret
                                    174 ;------------------------------------------------------------
                                    175 ;Allocation info for local variables in function 'time'
                                    176 ;------------------------------------------------------------
                                    177 ;timeptr                   Allocated with name '_time_timeptr_1_20'
                                    178 ;now                       Allocated with name '_time_now_1_21'
                                    179 ;t                         Allocated with name '_time_t_1_21'
                                    180 ;------------------------------------------------------------
                                    181 ;	time.c:50: time_t time(time_t *timeptr) {
                                    182 ;	-----------------------------------------
                                    183 ;	 function time
                                    184 ;	-----------------------------------------
      000006                        185 _time:
      000006 AF F0            [24]  186 	mov	r7,b
      000008 AE 83            [24]  187 	mov	r6,dph
      00000A E5 82            [12]  188 	mov	a,dpl
      00000C 90r00r00         [24]  189 	mov	dptr,#_time_timeptr_1_20
      00000F F0               [24]  190 	movx	@dptr,a
      000010 EE               [12]  191 	mov	a,r6
      000011 A3               [24]  192 	inc	dptr
      000012 F0               [24]  193 	movx	@dptr,a
      000013 EF               [12]  194 	mov	a,r7
      000014 A3               [24]  195 	inc	dptr
      000015 F0               [24]  196 	movx	@dptr,a
                                    197 ;	time.c:52: time_t t=-1;
      000016 90r00r0F         [24]  198 	mov	dptr,#_time_t_1_21
      000019 74 FF            [12]  199 	mov	a,#0xFF
      00001B F0               [24]  200 	movx	@dptr,a
      00001C A3               [24]  201 	inc	dptr
      00001D F0               [24]  202 	movx	@dptr,a
      00001E A3               [24]  203 	inc	dptr
      00001F F0               [24]  204 	movx	@dptr,a
      000020 A3               [24]  205 	inc	dptr
      000021 F0               [24]  206 	movx	@dptr,a
                                    207 ;	time.c:54: if (RtcRead(&now)) {
      000022 90r00r03         [24]  208 	mov	dptr,#_time_now_1_21
      000025 75 F0 00         [24]  209 	mov	b,#0x00
      000028 78r00            [12]  210 	mov	r0,#_RtcRead
      00002A 79s00            [12]  211 	mov	r1,#(_RtcRead >> 8)
      00002C 7As00            [12]  212 	mov	r2,#(_RtcRead >> 16)
      00002E 12r00r00         [24]  213 	lcall	__sdcc_banked_call
      000031 E5 82            [12]  214 	mov	a,dpl
      000033 60 24            [24]  215 	jz	00102$
                                    216 ;	time.c:55: t=mktime(&now);
      000035 90r00r03         [24]  217 	mov	dptr,#_time_now_1_21
      000038 75 F0 00         [24]  218 	mov	b,#0x00
      00003B 78r7F            [12]  219 	mov	r0,#_mktime
      00003D 79s06            [12]  220 	mov	r1,#(_mktime >> 8)
      00003F 7As00            [12]  221 	mov	r2,#(_mktime >> 16)
      000041 12r00r00         [24]  222 	lcall	__sdcc_banked_call
      000044 AC 82            [24]  223 	mov	r4,dpl
      000046 AD 83            [24]  224 	mov	r5,dph
      000048 AE F0            [24]  225 	mov	r6,b
      00004A FF               [12]  226 	mov	r7,a
      00004B 90r00r0F         [24]  227 	mov	dptr,#_time_t_1_21
      00004E EC               [12]  228 	mov	a,r4
      00004F F0               [24]  229 	movx	@dptr,a
      000050 ED               [12]  230 	mov	a,r5
      000051 A3               [24]  231 	inc	dptr
      000052 F0               [24]  232 	movx	@dptr,a
      000053 EE               [12]  233 	mov	a,r6
      000054 A3               [24]  234 	inc	dptr
      000055 F0               [24]  235 	movx	@dptr,a
      000056 EF               [12]  236 	mov	a,r7
      000057 A3               [24]  237 	inc	dptr
      000058 F0               [24]  238 	movx	@dptr,a
      000059                        239 00102$:
                                    240 ;	time.c:57: if (timeptr) {
      000059 90r00r00         [24]  241 	mov	dptr,#_time_timeptr_1_20
      00005C E0               [24]  242 	movx	a,@dptr
      00005D FD               [12]  243 	mov	r5,a
      00005E A3               [24]  244 	inc	dptr
      00005F E0               [24]  245 	movx	a,@dptr
      000060 FE               [12]  246 	mov	r6,a
      000061 A3               [24]  247 	inc	dptr
      000062 E0               [24]  248 	movx	a,@dptr
      000063 FF               [12]  249 	mov	r7,a
      000064 90r00r00         [24]  250 	mov	dptr,#_time_timeptr_1_20
      000067 E0               [24]  251 	movx	a,@dptr
      000068 F5 F0            [12]  252 	mov	b,a
      00006A A3               [24]  253 	inc	dptr
      00006B E0               [24]  254 	movx	a,@dptr
      00006C 45 F0            [12]  255 	orl	a,b
      00006E 60 27            [24]  256 	jz	00104$
                                    257 ;	time.c:58: *timeptr=t;
      000070 90r00r0F         [24]  258 	mov	dptr,#_time_t_1_21
      000073 E0               [24]  259 	movx	a,@dptr
      000074 F9               [12]  260 	mov	r1,a
      000075 A3               [24]  261 	inc	dptr
      000076 E0               [24]  262 	movx	a,@dptr
      000077 FA               [12]  263 	mov	r2,a
      000078 A3               [24]  264 	inc	dptr
      000079 E0               [24]  265 	movx	a,@dptr
      00007A FB               [12]  266 	mov	r3,a
      00007B A3               [24]  267 	inc	dptr
      00007C E0               [24]  268 	movx	a,@dptr
      00007D FC               [12]  269 	mov	r4,a
      00007E 8D 82            [24]  270 	mov	dpl,r5
      000080 8E 83            [24]  271 	mov	dph,r6
      000082 8F F0            [24]  272 	mov	b,r7
      000084 E9               [12]  273 	mov	a,r1
      000085 12r00r00         [24]  274 	lcall	__gptrput
      000088 A3               [24]  275 	inc	dptr
      000089 EA               [12]  276 	mov	a,r2
      00008A 12r00r00         [24]  277 	lcall	__gptrput
      00008D A3               [24]  278 	inc	dptr
      00008E EB               [12]  279 	mov	a,r3
      00008F 12r00r00         [24]  280 	lcall	__gptrput
      000092 A3               [24]  281 	inc	dptr
      000093 EC               [12]  282 	mov	a,r4
      000094 12r00r00         [24]  283 	lcall	__gptrput
      000097                        284 00104$:
                                    285 ;	time.c:60: return t;
      000097 90r00r0F         [24]  286 	mov	dptr,#_time_t_1_21
      00009A E0               [24]  287 	movx	a,@dptr
      00009B FC               [12]  288 	mov	r4,a
      00009C A3               [24]  289 	inc	dptr
      00009D E0               [24]  290 	movx	a,@dptr
      00009E FD               [12]  291 	mov	r5,a
      00009F A3               [24]  292 	inc	dptr
      0000A0 E0               [24]  293 	movx	a,@dptr
      0000A1 FE               [12]  294 	mov	r6,a
      0000A2 A3               [24]  295 	inc	dptr
      0000A3 E0               [24]  296 	movx	a,@dptr
      0000A4 FF               [12]  297 	mov	r7,a
      0000A5 8C 82            [24]  298 	mov	dpl,r4
      0000A7 8D 83            [24]  299 	mov	dph,r5
      0000A9 8E F0            [24]  300 	mov	b,r6
      0000AB 02r00r00         [24]  301 	ljmp	__sdcc_banked_ret
                                    302 ;------------------------------------------------------------
                                    303 ;Allocation info for local variables in function 'CheckTime'
                                    304 ;------------------------------------------------------------
                                    305 ;timeptr                   Allocated with name '_CheckTime_timeptr_1_24'
                                    306 ;------------------------------------------------------------
                                    307 ;	time.c:73: static void CheckTime(struct tm *timeptr) {
                                    308 ;	-----------------------------------------
                                    309 ;	 function CheckTime
                                    310 ;	-----------------------------------------
      0000AE                        311 _CheckTime:
      0000AE AF F0            [24]  312 	mov	r7,b
      0000B0 AE 83            [24]  313 	mov	r6,dph
      0000B2 E5 82            [12]  314 	mov	a,dpl
      0000B4 90r00r33         [24]  315 	mov	dptr,#_CheckTime_timeptr_1_24
      0000B7 F0               [24]  316 	movx	@dptr,a
      0000B8 EE               [12]  317 	mov	a,r6
      0000B9 A3               [24]  318 	inc	dptr
      0000BA F0               [24]  319 	movx	@dptr,a
      0000BB EF               [12]  320 	mov	a,r7
      0000BC A3               [24]  321 	inc	dptr
      0000BD F0               [24]  322 	movx	@dptr,a
                                    323 ;	time.c:84: if (timeptr->tm_sec>59) timeptr->tm_sec=59;
      0000BE 90r00r33         [24]  324 	mov	dptr,#_CheckTime_timeptr_1_24
      0000C1 E0               [24]  325 	movx	a,@dptr
      0000C2 FD               [12]  326 	mov	r5,a
      0000C3 A3               [24]  327 	inc	dptr
      0000C4 E0               [24]  328 	movx	a,@dptr
      0000C5 FE               [12]  329 	mov	r6,a
      0000C6 A3               [24]  330 	inc	dptr
      0000C7 E0               [24]  331 	movx	a,@dptr
      0000C8 FF               [12]  332 	mov	r7,a
      0000C9 8D 82            [24]  333 	mov	dpl,r5
      0000CB 8E 83            [24]  334 	mov	dph,r6
      0000CD 8F F0            [24]  335 	mov	b,r7
      0000CF 12r00r00         [24]  336 	lcall	__gptrget
      0000D2 FC               [12]  337 	mov  r4,a
      0000D3 24 C4            [12]  338 	add	a,#0xff - 0x3B
      0000D5 50 0B            [24]  339 	jnc	00102$
      0000D7 8D 82            [24]  340 	mov	dpl,r5
      0000D9 8E 83            [24]  341 	mov	dph,r6
      0000DB 8F F0            [24]  342 	mov	b,r7
      0000DD 74 3B            [12]  343 	mov	a,#0x3B
      0000DF 12r00r00         [24]  344 	lcall	__gptrput
      0000E2                        345 00102$:
                                    346 ;	time.c:85: if (timeptr->tm_min>59) timeptr->tm_min=59;
      0000E2 74 01            [12]  347 	mov	a,#0x01
      0000E4 2D               [12]  348 	add	a,r5
      0000E5 FA               [12]  349 	mov	r2,a
      0000E6 E4               [12]  350 	clr	a
      0000E7 3E               [12]  351 	addc	a,r6
      0000E8 FB               [12]  352 	mov	r3,a
      0000E9 8F 04            [24]  353 	mov	ar4,r7
      0000EB 8A 82            [24]  354 	mov	dpl,r2
      0000ED 8B 83            [24]  355 	mov	dph,r3
      0000EF 8C F0            [24]  356 	mov	b,r4
      0000F1 12r00r00         [24]  357 	lcall	__gptrget
      0000F4 F9               [12]  358 	mov  r1,a
      0000F5 24 C4            [12]  359 	add	a,#0xff - 0x3B
      0000F7 50 0B            [24]  360 	jnc	00104$
      0000F9 8A 82            [24]  361 	mov	dpl,r2
      0000FB 8B 83            [24]  362 	mov	dph,r3
      0000FD 8C F0            [24]  363 	mov	b,r4
      0000FF 74 3B            [12]  364 	mov	a,#0x3B
      000101 12r00r00         [24]  365 	lcall	__gptrput
      000104                        366 00104$:
                                    367 ;	time.c:86: if (timeptr->tm_hour>23) timeptr->tm_hour=23;
      000104 74 02            [12]  368 	mov	a,#0x02
      000106 2D               [12]  369 	add	a,r5
      000107 FA               [12]  370 	mov	r2,a
      000108 E4               [12]  371 	clr	a
      000109 3E               [12]  372 	addc	a,r6
      00010A FB               [12]  373 	mov	r3,a
      00010B 8F 04            [24]  374 	mov	ar4,r7
      00010D 8A 82            [24]  375 	mov	dpl,r2
      00010F 8B 83            [24]  376 	mov	dph,r3
      000111 8C F0            [24]  377 	mov	b,r4
      000113 12r00r00         [24]  378 	lcall	__gptrget
      000116 F9               [12]  379 	mov  r1,a
      000117 24 E8            [12]  380 	add	a,#0xff - 0x17
      000119 50 0B            [24]  381 	jnc	00106$
      00011B 8A 82            [24]  382 	mov	dpl,r2
      00011D 8B 83            [24]  383 	mov	dph,r3
      00011F 8C F0            [24]  384 	mov	b,r4
      000121 74 17            [12]  385 	mov	a,#0x17
      000123 12r00r00         [24]  386 	lcall	__gptrput
      000126                        387 00106$:
                                    388 ;	time.c:87: if (timeptr->tm_wday>6) timeptr->tm_wday=6;
      000126 74 07            [12]  389 	mov	a,#0x07
      000128 2D               [12]  390 	add	a,r5
      000129 FA               [12]  391 	mov	r2,a
      00012A E4               [12]  392 	clr	a
      00012B 3E               [12]  393 	addc	a,r6
      00012C FB               [12]  394 	mov	r3,a
      00012D 8F 04            [24]  395 	mov	ar4,r7
      00012F 8A 82            [24]  396 	mov	dpl,r2
      000131 8B 83            [24]  397 	mov	dph,r3
      000133 8C F0            [24]  398 	mov	b,r4
      000135 12r00r00         [24]  399 	lcall	__gptrget
      000138 F9               [12]  400 	mov  r1,a
      000139 24 F9            [12]  401 	add	a,#0xff - 0x06
      00013B 50 0B            [24]  402 	jnc	00108$
      00013D 8A 82            [24]  403 	mov	dpl,r2
      00013F 8B 83            [24]  404 	mov	dph,r3
      000141 8C F0            [24]  405 	mov	b,r4
      000143 74 06            [12]  406 	mov	a,#0x06
      000145 12r00r00         [24]  407 	lcall	__gptrput
      000148                        408 00108$:
                                    409 ;	time.c:88: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
      000148 74 03            [12]  410 	mov	a,#0x03
      00014A 2D               [12]  411 	add	a,r5
      00014B FA               [12]  412 	mov	r2,a
      00014C E4               [12]  413 	clr	a
      00014D 3E               [12]  414 	addc	a,r6
      00014E FB               [12]  415 	mov	r3,a
      00014F 8F 04            [24]  416 	mov	ar4,r7
      000151 8A 82            [24]  417 	mov	dpl,r2
      000153 8B 83            [24]  418 	mov	dph,r3
      000155 8C F0            [24]  419 	mov	b,r4
      000157 12r00r00         [24]  420 	lcall	__gptrget
      00015A F9               [12]  421 	mov	r1,a
      00015B B9 01 00         [24]  422 	cjne	r1,#0x01,00148$
      00015E                        423 00148$:
      00015E 50 0D            [24]  424 	jnc	00112$
      000160 8A 82            [24]  425 	mov	dpl,r2
      000162 8B 83            [24]  426 	mov	dph,r3
      000164 8C F0            [24]  427 	mov	b,r4
      000166 74 01            [12]  428 	mov	a,#0x01
      000168 12r00r00         [24]  429 	lcall	__gptrput
      00016B 80 10            [24]  430 	sjmp	00113$
      00016D                        431 00112$:
                                    432 ;	time.c:89: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
      00016D E9               [12]  433 	mov	a,r1
      00016E 24 E0            [12]  434 	add	a,#0xff - 0x1F
      000170 50 0B            [24]  435 	jnc	00113$
      000172 8A 82            [24]  436 	mov	dpl,r2
      000174 8B 83            [24]  437 	mov	dph,r3
      000176 8C F0            [24]  438 	mov	b,r4
      000178 74 1F            [12]  439 	mov	a,#0x1F
      00017A 12r00r00         [24]  440 	lcall	__gptrput
      00017D                        441 00113$:
                                    442 ;	time.c:90: if (timeptr->tm_mon>11) timeptr->tm_mon=11;
      00017D 74 04            [12]  443 	mov	a,#0x04
      00017F 2D               [12]  444 	add	a,r5
      000180 FA               [12]  445 	mov	r2,a
      000181 E4               [12]  446 	clr	a
      000182 3E               [12]  447 	addc	a,r6
      000183 FB               [12]  448 	mov	r3,a
      000184 8F 04            [24]  449 	mov	ar4,r7
      000186 8A 82            [24]  450 	mov	dpl,r2
      000188 8B 83            [24]  451 	mov	dph,r3
      00018A 8C F0            [24]  452 	mov	b,r4
      00018C 12r00r00         [24]  453 	lcall	__gptrget
      00018F F9               [12]  454 	mov  r1,a
      000190 24 F4            [12]  455 	add	a,#0xff - 0x0B
      000192 50 0B            [24]  456 	jnc	00115$
      000194 8A 82            [24]  457 	mov	dpl,r2
      000196 8B 83            [24]  458 	mov	dph,r3
      000198 8C F0            [24]  459 	mov	b,r4
      00019A 74 0B            [12]  460 	mov	a,#0x0B
      00019C 12r00r00         [24]  461 	lcall	__gptrput
      00019F                        462 00115$:
                                    463 ;	time.c:91: if (timeptr->tm_year<0) timeptr->tm_year=0;
      00019F 74 05            [12]  464 	mov	a,#0x05
      0001A1 2D               [12]  465 	add	a,r5
      0001A2 FD               [12]  466 	mov	r5,a
      0001A3 E4               [12]  467 	clr	a
      0001A4 3E               [12]  468 	addc	a,r6
      0001A5 FE               [12]  469 	mov	r6,a
      0001A6 8D 82            [24]  470 	mov	dpl,r5
      0001A8 8E 83            [24]  471 	mov	dph,r6
      0001AA 8F F0            [24]  472 	mov	b,r7
      0001AC 12r00r00         [24]  473 	lcall	__gptrget
      0001AF FB               [12]  474 	mov	r3,a
      0001B0 A3               [24]  475 	inc	dptr
      0001B1 12r00r00         [24]  476 	lcall	__gptrget
      0001B4 FC               [12]  477 	mov	r4,a
      0001B5 30 E7 0E         [24]  478 	jnb	acc.7,00118$
      0001B8 8D 82            [24]  479 	mov	dpl,r5
      0001BA 8E 83            [24]  480 	mov	dph,r6
      0001BC 8F F0            [24]  481 	mov	b,r7
      0001BE E4               [12]  482 	clr	a
      0001BF 12r00r00         [24]  483 	lcall	__gptrput
      0001C2 A3               [24]  484 	inc	dptr
      0001C3 12r00r00         [24]  485 	lcall	__gptrput
      0001C6                        486 00118$:
      0001C6 02r00r00         [24]  487 	ljmp	__sdcc_banked_ret
                                    488 ;------------------------------------------------------------
                                    489 ;Allocation info for local variables in function 'asctime'
                                    490 ;------------------------------------------------------------
                                    491 ;sloc0                     Allocated with name '_asctime_sloc0_1_0'
                                    492 ;sloc1                     Allocated with name '_asctime_sloc1_1_0'
                                    493 ;sloc2                     Allocated with name '_asctime_sloc2_1_0'
                                    494 ;sloc3                     Allocated with name '_asctime_sloc3_1_0'
                                    495 ;timeptr                   Allocated with name '_asctime_timeptr_1_26'
                                    496 ;------------------------------------------------------------
                                    497 ;	time.c:95: char *asctime(struct tm *timeptr) {
                                    498 ;	-----------------------------------------
                                    499 ;	 function asctime
                                    500 ;	-----------------------------------------
      0001C9                        501 _asctime:
      0001C9 AF F0            [24]  502 	mov	r7,b
      0001CB AE 83            [24]  503 	mov	r6,dph
      0001CD E5 82            [12]  504 	mov	a,dpl
      0001CF 90r00r36         [24]  505 	mov	dptr,#_asctime_timeptr_1_26
      0001D2 F0               [24]  506 	movx	@dptr,a
      0001D3 EE               [12]  507 	mov	a,r6
      0001D4 A3               [24]  508 	inc	dptr
      0001D5 F0               [24]  509 	movx	@dptr,a
      0001D6 EF               [12]  510 	mov	a,r7
      0001D7 A3               [24]  511 	inc	dptr
      0001D8 F0               [24]  512 	movx	@dptr,a
                                    513 ;	time.c:96: CheckTime(timeptr);
      0001D9 90r00r36         [24]  514 	mov	dptr,#_asctime_timeptr_1_26
      0001DC E0               [24]  515 	movx	a,@dptr
      0001DD FD               [12]  516 	mov	r5,a
      0001DE A3               [24]  517 	inc	dptr
      0001DF E0               [24]  518 	movx	a,@dptr
      0001E0 FE               [12]  519 	mov	r6,a
      0001E1 A3               [24]  520 	inc	dptr
      0001E2 E0               [24]  521 	movx	a,@dptr
      0001E3 FF               [12]  522 	mov	r7,a
      0001E4 8D 82            [24]  523 	mov	dpl,r5
      0001E6 8E 83            [24]  524 	mov	dph,r6
      0001E8 8F F0            [24]  525 	mov	b,r7
      0001EA 78rAE            [12]  526 	mov	r0,#_CheckTime
      0001EC 79s00            [12]  527 	mov	r1,#(_CheckTime >> 8)
      0001EE 7As00            [12]  528 	mov	r2,#(_CheckTime >> 16)
      0001F0 12r00r00         [24]  529 	lcall	__sdcc_banked_call
                                    530 ;	time.c:100: timeptr->tm_year+1900);
      0001F3 90r00r36         [24]  531 	mov	dptr,#_asctime_timeptr_1_26
      0001F6 E0               [24]  532 	movx	a,@dptr
      0001F7 FD               [12]  533 	mov	r5,a
      0001F8 A3               [24]  534 	inc	dptr
      0001F9 E0               [24]  535 	movx	a,@dptr
      0001FA FE               [12]  536 	mov	r6,a
      0001FB A3               [24]  537 	inc	dptr
      0001FC E0               [24]  538 	movx	a,@dptr
      0001FD FF               [12]  539 	mov	r7,a
      0001FE 74 05            [12]  540 	mov	a,#0x05
      000200 2D               [12]  541 	add	a,r5
      000201 FA               [12]  542 	mov	r2,a
      000202 E4               [12]  543 	clr	a
      000203 3E               [12]  544 	addc	a,r6
      000204 FB               [12]  545 	mov	r3,a
      000205 8F 04            [24]  546 	mov	ar4,r7
      000207 8A 82            [24]  547 	mov	dpl,r2
      000209 8B 83            [24]  548 	mov	dph,r3
      00020B 8C F0            [24]  549 	mov	b,r4
      00020D 12r00r00         [24]  550 	lcall	__gptrget
      000210 FA               [12]  551 	mov	r2,a
      000211 A3               [24]  552 	inc	dptr
      000212 12r00r00         [24]  553 	lcall	__gptrget
      000215 FB               [12]  554 	mov	r3,a
      000216 74 6C            [12]  555 	mov	a,#0x6C
      000218 2A               [12]  556 	add	a,r2
      000219 FA               [12]  557 	mov	r2,a
      00021A 74 07            [12]  558 	mov	a,#0x07
      00021C 3B               [12]  559 	addc	a,r3
      00021D FB               [12]  560 	mov	r3,a
                                    561 ;	time.c:99: timeptr->tm_hour, timeptr->tm_min, timeptr->tm_sec, 
      00021E 8D 82            [24]  562 	mov	dpl,r5
      000220 8E 83            [24]  563 	mov	dph,r6
      000222 8F F0            [24]  564 	mov	b,r7
      000224 12r00r00         [24]  565 	lcall	__gptrget
      000227 FC               [12]  566 	mov	r4,a
      000228 8C*00            [24]  567 	mov	_asctime_sloc0_1_0,r4
      00022A 75*01 00         [24]  568 	mov	(_asctime_sloc0_1_0 + 1),#0x00
      00022D 74 01            [12]  569 	mov	a,#0x01
      00022F 2D               [12]  570 	add	a,r5
      000230 F8               [12]  571 	mov	r0,a
      000231 E4               [12]  572 	clr	a
      000232 3E               [12]  573 	addc	a,r6
      000233 F9               [12]  574 	mov	r1,a
      000234 8F 04            [24]  575 	mov	ar4,r7
      000236 88 82            [24]  576 	mov	dpl,r0
      000238 89 83            [24]  577 	mov	dph,r1
      00023A 8C F0            [24]  578 	mov	b,r4
      00023C 12r00r00         [24]  579 	lcall	__gptrget
      00023F F8               [12]  580 	mov	r0,a
      000240 88*02            [24]  581 	mov	_asctime_sloc1_1_0,r0
      000242 75*03 00         [24]  582 	mov	(_asctime_sloc1_1_0 + 1),#0x00
      000245 74 02            [12]  583 	mov	a,#0x02
      000247 2D               [12]  584 	add	a,r5
      000248 F8               [12]  585 	mov	r0,a
      000249 E4               [12]  586 	clr	a
      00024A 3E               [12]  587 	addc	a,r6
      00024B F9               [12]  588 	mov	r1,a
      00024C 8F 04            [24]  589 	mov	ar4,r7
      00024E 88 82            [24]  590 	mov	dpl,r0
      000250 89 83            [24]  591 	mov	dph,r1
      000252 8C F0            [24]  592 	mov	b,r4
      000254 12r00r00         [24]  593 	lcall	__gptrget
      000257 F8               [12]  594 	mov	r0,a
      000258 88*04            [24]  595 	mov	_asctime_sloc2_1_0,r0
      00025A 75*05 00         [24]  596 	mov	(_asctime_sloc2_1_0 + 1),#0x00
                                    597 ;	time.c:98: __day[timeptr->tm_wday], __month[timeptr->tm_mon], timeptr->tm_mday,
      00025D 74 03            [12]  598 	mov	a,#0x03
      00025F 2D               [12]  599 	add	a,r5
      000260 F8               [12]  600 	mov	r0,a
      000261 E4               [12]  601 	clr	a
      000262 3E               [12]  602 	addc	a,r6
      000263 F9               [12]  603 	mov	r1,a
      000264 8F 04            [24]  604 	mov	ar4,r7
      000266 88 82            [24]  605 	mov	dpl,r0
      000268 89 83            [24]  606 	mov	dph,r1
      00026A 8C F0            [24]  607 	mov	b,r4
      00026C 12r00r00         [24]  608 	lcall	__gptrget
      00026F F8               [12]  609 	mov	r0,a
      000270 88*06            [24]  610 	mov	_asctime_sloc3_1_0,r0
      000272 75*07 00         [24]  611 	mov	(_asctime_sloc3_1_0 + 1),#0x00
      000275 74 04            [12]  612 	mov	a,#0x04
      000277 2D               [12]  613 	add	a,r5
      000278 F8               [12]  614 	mov	r0,a
      000279 E4               [12]  615 	clr	a
      00027A 3E               [12]  616 	addc	a,r6
      00027B F9               [12]  617 	mov	r1,a
      00027C 8F 04            [24]  618 	mov	ar4,r7
      00027E 88 82            [24]  619 	mov	dpl,r0
      000280 89 83            [24]  620 	mov	dph,r1
      000282 8C F0            [24]  621 	mov	b,r4
      000284 12r00r00         [24]  622 	lcall	__gptrget
      000287 75 F0 02         [24]  623 	mov	b,#0x02
      00028A A4               [48]  624 	mul	ab
      00028B 24r0C            [12]  625 	add	a,#___month
      00028D F5 82            [12]  626 	mov	dpl,a
      00028F 74s00            [12]  627 	mov	a,#(___month >> 8)
      000291 35 F0            [12]  628 	addc	a,b
      000293 F5 83            [12]  629 	mov	dph,a
      000295 E4               [12]  630 	clr	a
      000296 93               [24]  631 	movc	a,@a+dptr
      000297 F9               [12]  632 	mov	r1,a
      000298 A3               [24]  633 	inc	dptr
      000299 E4               [12]  634 	clr	a
      00029A 93               [24]  635 	movc	a,@a+dptr
      00029B F8               [12]  636 	mov	r0,a
      00029C 7C 80            [12]  637 	mov	r4,#0x80
      00029E 74 07            [12]  638 	mov	a,#0x07
      0002A0 2D               [12]  639 	add	a,r5
      0002A1 FD               [12]  640 	mov	r5,a
      0002A2 E4               [12]  641 	clr	a
      0002A3 3E               [12]  642 	addc	a,r6
      0002A4 FE               [12]  643 	mov	r6,a
      0002A5 8D 82            [24]  644 	mov	dpl,r5
      0002A7 8E 83            [24]  645 	mov	dph,r6
      0002A9 8F F0            [24]  646 	mov	b,r7
      0002AB 12r00r00         [24]  647 	lcall	__gptrget
      0002AE 75 F0 02         [24]  648 	mov	b,#0x02
      0002B1 A4               [48]  649 	mul	ab
      0002B2 24r24            [12]  650 	add	a,#___day
      0002B4 F5 82            [12]  651 	mov	dpl,a
      0002B6 74s00            [12]  652 	mov	a,#(___day >> 8)
      0002B8 35 F0            [12]  653 	addc	a,b
      0002BA F5 83            [12]  654 	mov	dph,a
      0002BC E4               [12]  655 	clr	a
      0002BD 93               [24]  656 	movc	a,@a+dptr
      0002BE FE               [12]  657 	mov	r6,a
      0002BF A3               [24]  658 	inc	dptr
      0002C0 E4               [12]  659 	clr	a
      0002C1 93               [24]  660 	movc	a,@a+dptr
      0002C2 FF               [12]  661 	mov	r7,a
      0002C3 7D 80            [12]  662 	mov	r5,#0x80
                                    663 ;	time.c:97: sprintf (ascTimeBuffer, "%s %s %2d %02d:%02d:%02d %04d\n",
      0002C5 C0 02            [24]  664 	push	ar2
      0002C7 C0 03            [24]  665 	push	ar3
      0002C9 C0*00            [24]  666 	push	_asctime_sloc0_1_0
      0002CB C0*01            [24]  667 	push	(_asctime_sloc0_1_0 + 1)
      0002CD C0*02            [24]  668 	push	_asctime_sloc1_1_0
      0002CF C0*03            [24]  669 	push	(_asctime_sloc1_1_0 + 1)
      0002D1 C0*04            [24]  670 	push	_asctime_sloc2_1_0
      0002D3 C0*05            [24]  671 	push	(_asctime_sloc2_1_0 + 1)
      0002D5 C0*06            [24]  672 	push	_asctime_sloc3_1_0
      0002D7 C0*07            [24]  673 	push	(_asctime_sloc3_1_0 + 1)
      0002D9 C0 01            [24]  674 	push	ar1
      0002DB C0 00            [24]  675 	push	ar0
      0002DD C0 04            [24]  676 	push	ar4
      0002DF C0 06            [24]  677 	push	ar6
      0002E1 C0 07            [24]  678 	push	ar7
      0002E3 C0 05            [24]  679 	push	ar5
      0002E5 74r32            [12]  680 	mov	a,#___str_0
      0002E7 C0 E0            [24]  681 	push	acc
      0002E9 74s00            [12]  682 	mov	a,#(___str_0 >> 8)
      0002EB C0 E0            [24]  683 	push	acc
      0002ED ED               [12]  684 	mov	a,r5
      0002EE C0 E0            [24]  685 	push	acc
      0002F0 74r13            [12]  686 	mov	a,#_ascTimeBuffer
      0002F2 C0 E0            [24]  687 	push	acc
      0002F4 74s00            [12]  688 	mov	a,#(_ascTimeBuffer >> 8)
      0002F6 C0 E0            [24]  689 	push	acc
      0002F8 E4               [12]  690 	clr	a
      0002F9 C0 E0            [24]  691 	push	acc
      0002FB 78r00            [12]  692 	mov	r0,#_sprintf
      0002FD 79s00            [12]  693 	mov	r1,#(_sprintf >> 8)
      0002FF 7As00            [12]  694 	mov	r2,#(_sprintf >> 16)
      000301 12r00r00         [24]  695 	lcall	__sdcc_banked_call
      000304 E5 81            [12]  696 	mov	a,sp
      000306 24 EA            [12]  697 	add	a,#0xea
      000308 F5 81            [12]  698 	mov	sp,a
                                    699 ;	time.c:101: return ascTimeBuffer;
      00030A 90r00r13         [24]  700 	mov	dptr,#_ascTimeBuffer
      00030D 75 F0 00         [24]  701 	mov	b,#0x00
      000310 02r00r00         [24]  702 	ljmp	__sdcc_banked_ret
                                    703 ;------------------------------------------------------------
                                    704 ;Allocation info for local variables in function 'ctime'
                                    705 ;------------------------------------------------------------
                                    706 ;timep                     Allocated with name '_ctime_timep_1_28'
                                    707 ;------------------------------------------------------------
                                    708 ;	time.c:104: char *ctime(time_t *timep) {
                                    709 ;	-----------------------------------------
                                    710 ;	 function ctime
                                    711 ;	-----------------------------------------
      000313                        712 _ctime:
      000313 AF F0            [24]  713 	mov	r7,b
      000315 AE 83            [24]  714 	mov	r6,dph
      000317 E5 82            [12]  715 	mov	a,dpl
      000319 90r00r39         [24]  716 	mov	dptr,#_ctime_timep_1_28
      00031C F0               [24]  717 	movx	@dptr,a
      00031D EE               [12]  718 	mov	a,r6
      00031E A3               [24]  719 	inc	dptr
      00031F F0               [24]  720 	movx	@dptr,a
      000320 EF               [12]  721 	mov	a,r7
      000321 A3               [24]  722 	inc	dptr
      000322 F0               [24]  723 	movx	@dptr,a
                                    724 ;	time.c:105: return asctime(localtime(timep));
      000323 90r00r39         [24]  725 	mov	dptr,#_ctime_timep_1_28
      000326 E0               [24]  726 	movx	a,@dptr
      000327 FD               [12]  727 	mov	r5,a
      000328 A3               [24]  728 	inc	dptr
      000329 E0               [24]  729 	movx	a,@dptr
      00032A FE               [12]  730 	mov	r6,a
      00032B A3               [24]  731 	inc	dptr
      00032C E0               [24]  732 	movx	a,@dptr
      00032D FF               [12]  733 	mov	r7,a
      00032E 8D 82            [24]  734 	mov	dpl,r5
      000330 8E 83            [24]  735 	mov	dph,r6
      000332 8F F0            [24]  736 	mov	b,r7
      000334 78r4F            [12]  737 	mov	r0,#_localtime
      000336 79s03            [12]  738 	mov	r1,#(_localtime >> 8)
      000338 7As00            [12]  739 	mov	r2,#(_localtime >> 16)
      00033A 12r00r00         [24]  740 	lcall	__sdcc_banked_call
      00033D 78rC9            [12]  741 	mov	r0,#_asctime
      00033F 79s01            [12]  742 	mov	r1,#(_asctime >> 8)
      000341 7As00            [12]  743 	mov	r2,#(_asctime >> 16)
      000343 12r00r00         [24]  744 	lcall	__sdcc_banked_call
      000346 AD 82            [24]  745 	mov	r5,dpl
      000348 AE 83            [24]  746 	mov	r6,dph
      00034A AF F0            [24]  747 	mov	r7,b
      00034C 02r00r00         [24]  748 	ljmp	__sdcc_banked_ret
                                    749 ;------------------------------------------------------------
                                    750 ;Allocation info for local variables in function 'localtime'
                                    751 ;------------------------------------------------------------
                                    752 ;timep                     Allocated with name '_localtime_timep_1_30'
                                    753 ;------------------------------------------------------------
                                    754 ;	time.c:121: struct tm *localtime(time_t *timep) {
                                    755 ;	-----------------------------------------
                                    756 ;	 function localtime
                                    757 ;	-----------------------------------------
      00034F                        758 _localtime:
      00034F AF F0            [24]  759 	mov	r7,b
      000351 AE 83            [24]  760 	mov	r6,dph
      000353 E5 82            [12]  761 	mov	a,dpl
      000355 90r00r48         [24]  762 	mov	dptr,#_localtime_timep_1_30
      000358 F0               [24]  763 	movx	@dptr,a
      000359 EE               [12]  764 	mov	a,r6
      00035A A3               [24]  765 	inc	dptr
      00035B F0               [24]  766 	movx	@dptr,a
      00035C EF               [12]  767 	mov	a,r7
      00035D A3               [24]  768 	inc	dptr
      00035E F0               [24]  769 	movx	@dptr,a
                                    770 ;	time.c:122: return gmtime(timep);
      00035F 90r00r48         [24]  771 	mov	dptr,#_localtime_timep_1_30
      000362 E0               [24]  772 	movx	a,@dptr
      000363 FD               [12]  773 	mov	r5,a
      000364 A3               [24]  774 	inc	dptr
      000365 E0               [24]  775 	movx	a,@dptr
      000366 FE               [12]  776 	mov	r6,a
      000367 A3               [24]  777 	inc	dptr
      000368 E0               [24]  778 	movx	a,@dptr
      000369 FF               [12]  779 	mov	r7,a
      00036A 8D 82            [24]  780 	mov	dpl,r5
      00036C 8E 83            [24]  781 	mov	dph,r6
      00036E 8F F0            [24]  782 	mov	b,r7
      000370 78r82            [12]  783 	mov	r0,#_gmtime
      000372 79s03            [12]  784 	mov	r1,#(_gmtime >> 8)
      000374 7As00            [12]  785 	mov	r2,#(_gmtime >> 16)
      000376 12r00r00         [24]  786 	lcall	__sdcc_banked_call
      000379 AD 82            [24]  787 	mov	r5,dpl
      00037B AE 83            [24]  788 	mov	r6,dph
      00037D AF F0            [24]  789 	mov	r7,b
      00037F 02r00r00         [24]  790 	ljmp	__sdcc_banked_ret
                                    791 ;------------------------------------------------------------
                                    792 ;Allocation info for local variables in function 'gmtime'
                                    793 ;------------------------------------------------------------
                                    794 ;sloc0                     Allocated with name '_gmtime_sloc0_1_0'
                                    795 ;sloc1                     Allocated with name '_gmtime_sloc1_1_0'
                                    796 ;sloc2                     Allocated with name '_gmtime_sloc2_1_0'
                                    797 ;sloc3                     Allocated with name '_gmtime_sloc3_1_0'
                                    798 ;timep                     Allocated with name '_gmtime_timep_1_32'
                                    799 ;epoch                     Allocated with name '_gmtime_epoch_1_33'
                                    800 ;year                      Allocated with name '_gmtime_year_1_33'
                                    801 ;month                     Allocated with name '_gmtime_month_1_33'
                                    802 ;monthLength               Allocated with name '_gmtime_monthLength_1_33'
                                    803 ;days                      Allocated with name '_gmtime_days_1_33'
                                    804 ;------------------------------------------------------------
                                    805 ;	time.c:125: struct tm *gmtime(time_t *timep) {
                                    806 ;	-----------------------------------------
                                    807 ;	 function gmtime
                                    808 ;	-----------------------------------------
      000382                        809 _gmtime:
      000382 AF F0            [24]  810 	mov	r7,b
      000384 AE 83            [24]  811 	mov	r6,dph
      000386 E5 82            [12]  812 	mov	a,dpl
      000388 90r00r4B         [24]  813 	mov	dptr,#_gmtime_timep_1_32
      00038B F0               [24]  814 	movx	@dptr,a
      00038C EE               [12]  815 	mov	a,r6
      00038D A3               [24]  816 	inc	dptr
      00038E F0               [24]  817 	movx	@dptr,a
      00038F EF               [12]  818 	mov	a,r7
      000390 A3               [24]  819 	inc	dptr
      000391 F0               [24]  820 	movx	@dptr,a
                                    821 ;	time.c:126: unsigned long epoch=*timep;
      000392 90r00r4B         [24]  822 	mov	dptr,#_gmtime_timep_1_32
      000395 E0               [24]  823 	movx	a,@dptr
      000396 FD               [12]  824 	mov	r5,a
      000397 A3               [24]  825 	inc	dptr
      000398 E0               [24]  826 	movx	a,@dptr
      000399 FE               [12]  827 	mov	r6,a
      00039A A3               [24]  828 	inc	dptr
      00039B E0               [24]  829 	movx	a,@dptr
      00039C FF               [12]  830 	mov	r7,a
      00039D 8D 82            [24]  831 	mov	dpl,r5
      00039F 8E 83            [24]  832 	mov	dph,r6
      0003A1 8F F0            [24]  833 	mov	b,r7
      0003A3 12r00r00         [24]  834 	lcall	__gptrget
      0003A6 FD               [12]  835 	mov	r5,a
      0003A7 A3               [24]  836 	inc	dptr
      0003A8 12r00r00         [24]  837 	lcall	__gptrget
      0003AB FE               [12]  838 	mov	r6,a
      0003AC A3               [24]  839 	inc	dptr
      0003AD 12r00r00         [24]  840 	lcall	__gptrget
      0003B0 FF               [12]  841 	mov	r7,a
      0003B1 A3               [24]  842 	inc	dptr
      0003B2 12r00r00         [24]  843 	lcall	__gptrget
      0003B5 FC               [12]  844 	mov	r4,a
                                    845 ;	time.c:131: lastTime.tm_sec=epoch%60;
      0003B6 90r00r00         [24]  846 	mov	dptr,#__modulong_PARM_2
      0003B9 74 3C            [12]  847 	mov	a,#0x3C
      0003BB F0               [24]  848 	movx	@dptr,a
      0003BC E4               [12]  849 	clr	a
      0003BD A3               [24]  850 	inc	dptr
      0003BE F0               [24]  851 	movx	@dptr,a
      0003BF A3               [24]  852 	inc	dptr
      0003C0 F0               [24]  853 	movx	@dptr,a
      0003C1 A3               [24]  854 	inc	dptr
      0003C2 F0               [24]  855 	movx	@dptr,a
      0003C3 8D 82            [24]  856 	mov	dpl,r5
      0003C5 8E 83            [24]  857 	mov	dph,r6
      0003C7 8F F0            [24]  858 	mov	b,r7
      0003C9 EC               [12]  859 	mov	a,r4
      0003CA C0 07            [24]  860 	push	ar7
      0003CC C0 06            [24]  861 	push	ar6
      0003CE C0 05            [24]  862 	push	ar5
      0003D0 C0 04            [24]  863 	push	ar4
      0003D2 12r00r00         [24]  864 	lcall	__modulong
      0003D5 A8 82            [24]  865 	mov	r0,dpl
      0003D7 D0 04            [24]  866 	pop	ar4
      0003D9 D0 05            [24]  867 	pop	ar5
      0003DB D0 06            [24]  868 	pop	ar6
      0003DD D0 07            [24]  869 	pop	ar7
      0003DF 90r00r3C         [24]  870 	mov	dptr,#_lastTime
      0003E2 E8               [12]  871 	mov	a,r0
      0003E3 F0               [24]  872 	movx	@dptr,a
                                    873 ;	time.c:132: epoch/=60; // now it is minutes
      0003E4 90r00r00         [24]  874 	mov	dptr,#__divulong_PARM_2
      0003E7 74 3C            [12]  875 	mov	a,#0x3C
      0003E9 F0               [24]  876 	movx	@dptr,a
      0003EA E4               [12]  877 	clr	a
      0003EB A3               [24]  878 	inc	dptr
      0003EC F0               [24]  879 	movx	@dptr,a
      0003ED A3               [24]  880 	inc	dptr
      0003EE F0               [24]  881 	movx	@dptr,a
      0003EF A3               [24]  882 	inc	dptr
      0003F0 F0               [24]  883 	movx	@dptr,a
                                    884 ;	time.c:133: lastTime.tm_min=epoch%60;
      0003F1 8D 82            [24]  885 	mov	dpl,r5
      0003F3 8E 83            [24]  886 	mov	dph,r6
      0003F5 8F F0            [24]  887 	mov	b,r7
      0003F7 EC               [12]  888 	mov	a,r4
      0003F8 12r00r00         [24]  889 	lcall	__divulong
      0003FB AC 82            [24]  890 	mov	r4,dpl
      0003FD AD 83            [24]  891 	mov	r5,dph
      0003FF AE F0            [24]  892 	mov	r6,b
      000401 FF               [12]  893 	mov	r7,a
      000402 90r00r00         [24]  894 	mov	dptr,#__modulong_PARM_2
      000405 74 3C            [12]  895 	mov	a,#0x3C
      000407 F0               [24]  896 	movx	@dptr,a
      000408 E4               [12]  897 	clr	a
      000409 A3               [24]  898 	inc	dptr
      00040A F0               [24]  899 	movx	@dptr,a
      00040B A3               [24]  900 	inc	dptr
      00040C F0               [24]  901 	movx	@dptr,a
      00040D A3               [24]  902 	inc	dptr
      00040E F0               [24]  903 	movx	@dptr,a
      00040F 8C 82            [24]  904 	mov	dpl,r4
      000411 8D 83            [24]  905 	mov	dph,r5
      000413 8E F0            [24]  906 	mov	b,r6
      000415 EF               [12]  907 	mov	a,r7
      000416 C0 07            [24]  908 	push	ar7
      000418 C0 06            [24]  909 	push	ar6
      00041A C0 05            [24]  910 	push	ar5
      00041C C0 04            [24]  911 	push	ar4
      00041E 12r00r00         [24]  912 	lcall	__modulong
      000421 A8 82            [24]  913 	mov	r0,dpl
      000423 D0 04            [24]  914 	pop	ar4
      000425 D0 05            [24]  915 	pop	ar5
      000427 D0 06            [24]  916 	pop	ar6
      000429 D0 07            [24]  917 	pop	ar7
      00042B 90r00r3D         [24]  918 	mov	dptr,#(_lastTime + 0x0001)
      00042E E8               [12]  919 	mov	a,r0
      00042F F0               [24]  920 	movx	@dptr,a
                                    921 ;	time.c:134: epoch/=60; // now it is hours
      000430 90r00r00         [24]  922 	mov	dptr,#__divulong_PARM_2
      000433 74 3C            [12]  923 	mov	a,#0x3C
      000435 F0               [24]  924 	movx	@dptr,a
      000436 E4               [12]  925 	clr	a
      000437 A3               [24]  926 	inc	dptr
      000438 F0               [24]  927 	movx	@dptr,a
      000439 A3               [24]  928 	inc	dptr
      00043A F0               [24]  929 	movx	@dptr,a
      00043B A3               [24]  930 	inc	dptr
      00043C F0               [24]  931 	movx	@dptr,a
                                    932 ;	time.c:135: lastTime.tm_hour=epoch%24;
      00043D 8C 82            [24]  933 	mov	dpl,r4
      00043F 8D 83            [24]  934 	mov	dph,r5
      000441 8E F0            [24]  935 	mov	b,r6
      000443 EF               [12]  936 	mov	a,r7
      000444 12r00r00         [24]  937 	lcall	__divulong
      000447 AC 82            [24]  938 	mov	r4,dpl
      000449 AD 83            [24]  939 	mov	r5,dph
      00044B AE F0            [24]  940 	mov	r6,b
      00044D FF               [12]  941 	mov	r7,a
      00044E 90r00r00         [24]  942 	mov	dptr,#__modulong_PARM_2
      000451 74 18            [12]  943 	mov	a,#0x18
      000453 F0               [24]  944 	movx	@dptr,a
      000454 E4               [12]  945 	clr	a
      000455 A3               [24]  946 	inc	dptr
      000456 F0               [24]  947 	movx	@dptr,a
      000457 A3               [24]  948 	inc	dptr
      000458 F0               [24]  949 	movx	@dptr,a
      000459 A3               [24]  950 	inc	dptr
      00045A F0               [24]  951 	movx	@dptr,a
      00045B 8C 82            [24]  952 	mov	dpl,r4
      00045D 8D 83            [24]  953 	mov	dph,r5
      00045F 8E F0            [24]  954 	mov	b,r6
      000461 EF               [12]  955 	mov	a,r7
      000462 C0 07            [24]  956 	push	ar7
      000464 C0 06            [24]  957 	push	ar6
      000466 C0 05            [24]  958 	push	ar5
      000468 C0 04            [24]  959 	push	ar4
      00046A 12r00r00         [24]  960 	lcall	__modulong
      00046D A8 82            [24]  961 	mov	r0,dpl
      00046F D0 04            [24]  962 	pop	ar4
      000471 D0 05            [24]  963 	pop	ar5
      000473 D0 06            [24]  964 	pop	ar6
      000475 D0 07            [24]  965 	pop	ar7
      000477 90r00r3E         [24]  966 	mov	dptr,#(_lastTime + 0x0002)
      00047A E8               [12]  967 	mov	a,r0
      00047B F0               [24]  968 	movx	@dptr,a
                                    969 ;	time.c:136: epoch/=24; // now it is days
      00047C 90r00r00         [24]  970 	mov	dptr,#__divulong_PARM_2
      00047F 74 18            [12]  971 	mov	a,#0x18
      000481 F0               [24]  972 	movx	@dptr,a
      000482 E4               [12]  973 	clr	a
      000483 A3               [24]  974 	inc	dptr
      000484 F0               [24]  975 	movx	@dptr,a
      000485 A3               [24]  976 	inc	dptr
      000486 F0               [24]  977 	movx	@dptr,a
      000487 A3               [24]  978 	inc	dptr
      000488 F0               [24]  979 	movx	@dptr,a
                                    980 ;	time.c:137: lastTime.tm_wday=(epoch+4)%7;
      000489 8C 82            [24]  981 	mov	dpl,r4
      00048B 8D 83            [24]  982 	mov	dph,r5
      00048D 8E F0            [24]  983 	mov	b,r6
      00048F EF               [12]  984 	mov	a,r7
      000490 12r00r00         [24]  985 	lcall	__divulong
      000493 AC 82            [24]  986 	mov	r4,dpl
      000495 AD 83            [24]  987 	mov	r5,dph
      000497 AE F0            [24]  988 	mov	r6,b
      000499 FF               [12]  989 	mov	r7,a
      00049A 74 04            [12]  990 	mov	a,#0x04
      00049C 2C               [12]  991 	add	a,r4
      00049D F8               [12]  992 	mov	r0,a
      00049E E4               [12]  993 	clr	a
      00049F 3D               [12]  994 	addc	a,r5
      0004A0 F9               [12]  995 	mov	r1,a
      0004A1 E4               [12]  996 	clr	a
      0004A2 3E               [12]  997 	addc	a,r6
      0004A3 FA               [12]  998 	mov	r2,a
      0004A4 E4               [12]  999 	clr	a
      0004A5 3F               [12] 1000 	addc	a,r7
      0004A6 FB               [12] 1001 	mov	r3,a
      0004A7 90r00r00         [24] 1002 	mov	dptr,#__modulong_PARM_2
      0004AA 74 07            [12] 1003 	mov	a,#0x07
      0004AC F0               [24] 1004 	movx	@dptr,a
      0004AD E4               [12] 1005 	clr	a
      0004AE A3               [24] 1006 	inc	dptr
      0004AF F0               [24] 1007 	movx	@dptr,a
      0004B0 A3               [24] 1008 	inc	dptr
      0004B1 F0               [24] 1009 	movx	@dptr,a
      0004B2 A3               [24] 1010 	inc	dptr
      0004B3 F0               [24] 1011 	movx	@dptr,a
      0004B4 88 82            [24] 1012 	mov	dpl,r0
      0004B6 89 83            [24] 1013 	mov	dph,r1
      0004B8 8A F0            [24] 1014 	mov	b,r2
      0004BA EB               [12] 1015 	mov	a,r3
      0004BB C0 07            [24] 1016 	push	ar7
      0004BD C0 06            [24] 1017 	push	ar6
      0004BF C0 05            [24] 1018 	push	ar5
      0004C1 C0 04            [24] 1019 	push	ar4
      0004C3 12r00r00         [24] 1020 	lcall	__modulong
      0004C6 A8 82            [24] 1021 	mov	r0,dpl
      0004C8 A9 83            [24] 1022 	mov	r1,dph
      0004CA AA F0            [24] 1023 	mov	r2,b
      0004CC FB               [12] 1024 	mov	r3,a
      0004CD D0 04            [24] 1025 	pop	ar4
      0004CF D0 05            [24] 1026 	pop	ar5
      0004D1 D0 06            [24] 1027 	pop	ar6
      0004D3 D0 07            [24] 1028 	pop	ar7
      0004D5 90r00r43         [24] 1029 	mov	dptr,#(_lastTime + 0x0007)
      0004D8 E8               [12] 1030 	mov	a,r0
      0004D9 F0               [24] 1031 	movx	@dptr,a
                                   1032 ;	time.c:140: days=0;
      0004DA 90r00r53         [24] 1033 	mov	dptr,#_gmtime_days_1_33
      0004DD E4               [12] 1034 	clr	a
      0004DE F0               [24] 1035 	movx	@dptr,a
      0004DF A3               [24] 1036 	inc	dptr
      0004E0 F0               [24] 1037 	movx	@dptr,a
      0004E1 A3               [24] 1038 	inc	dptr
      0004E2 F0               [24] 1039 	movx	@dptr,a
      0004E3 A3               [24] 1040 	inc	dptr
      0004E4 F0               [24] 1041 	movx	@dptr,a
                                   1042 ;	time.c:141: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
      0004E5 8C*0A            [24] 1043 	mov	_gmtime_sloc1_1_0,r4
      0004E7 8D*0B            [24] 1044 	mov	(_gmtime_sloc1_1_0 + 1),r5
      0004E9 8E*0C            [24] 1045 	mov	(_gmtime_sloc1_1_0 + 2),r6
      0004EB 8F*0D            [24] 1046 	mov	(_gmtime_sloc1_1_0 + 3),r7
      0004ED 75*08 B2         [24] 1047 	mov	_gmtime_sloc0_1_0,#0xB2
      0004F0 75*09 07         [24] 1048 	mov	(_gmtime_sloc0_1_0 + 1),#0x07
      0004F3                       1049 00101$:
      0004F3 74 03            [12] 1050 	mov	a,#0x03
      0004F5 55*08            [12] 1051 	anl	a,_gmtime_sloc0_1_0
      0004F7 FA               [12] 1052 	mov	r2,a
      0004F8 7B 00            [12] 1053 	mov	r3,#0x00
      0004FA 4B               [12] 1054 	orl	a,r3
      0004FB 70 08            [24] 1055 	jnz	00118$
      0004FD 75*0E 6E         [24] 1056 	mov	_gmtime_sloc2_1_0,#0x6E
      000500 75*0F 01         [24] 1057 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
      000503 80 06            [24] 1058 	sjmp	00119$
      000505                       1059 00118$:
      000505 75*0E 6D         [24] 1060 	mov	_gmtime_sloc2_1_0,#0x6D
      000508 75*0F 01         [24] 1061 	mov	(_gmtime_sloc2_1_0 + 1),#0x01
      00050B                       1062 00119$:
      00050B 90r00r53         [24] 1063 	mov	dptr,#_gmtime_days_1_33
      00050E E0               [24] 1064 	movx	a,@dptr
      00050F F5*10            [12] 1065 	mov	_gmtime_sloc3_1_0,a
      000511 A3               [24] 1066 	inc	dptr
      000512 E0               [24] 1067 	movx	a,@dptr
      000513 F5*11            [12] 1068 	mov	(_gmtime_sloc3_1_0 + 1),a
      000515 A3               [24] 1069 	inc	dptr
      000516 E0               [24] 1070 	movx	a,@dptr
      000517 F5*12            [12] 1071 	mov	(_gmtime_sloc3_1_0 + 2),a
      000519 A3               [24] 1072 	inc	dptr
      00051A E0               [24] 1073 	movx	a,@dptr
      00051B F5*13            [12] 1074 	mov	(_gmtime_sloc3_1_0 + 3),a
      00051D A8*0E            [24] 1075 	mov	r0,_gmtime_sloc2_1_0
      00051F E5*0F            [12] 1076 	mov	a,(_gmtime_sloc2_1_0 + 1)
      000521 F9               [12] 1077 	mov	r1,a
      000522 33               [12] 1078 	rlc	a
      000523 95 E0            [12] 1079 	subb	a,acc
      000525 FA               [12] 1080 	mov	r2,a
      000526 FB               [12] 1081 	mov	r3,a
      000527 E8               [12] 1082 	mov	a,r0
      000528 25*10            [12] 1083 	add	a,_gmtime_sloc3_1_0
      00052A F8               [12] 1084 	mov	r0,a
      00052B E9               [12] 1085 	mov	a,r1
      00052C 35*11            [12] 1086 	addc	a,(_gmtime_sloc3_1_0 + 1)
      00052E F9               [12] 1087 	mov	r1,a
      00052F EA               [12] 1088 	mov	a,r2
      000530 35*12            [12] 1089 	addc	a,(_gmtime_sloc3_1_0 + 2)
      000532 FA               [12] 1090 	mov	r2,a
      000533 EB               [12] 1091 	mov	a,r3
      000534 35*13            [12] 1092 	addc	a,(_gmtime_sloc3_1_0 + 3)
      000536 FB               [12] 1093 	mov	r3,a
      000537 90r00r53         [24] 1094 	mov	dptr,#_gmtime_days_1_33
      00053A E8               [12] 1095 	mov	a,r0
      00053B F0               [24] 1096 	movx	@dptr,a
      00053C E9               [12] 1097 	mov	a,r1
      00053D A3               [24] 1098 	inc	dptr
      00053E F0               [24] 1099 	movx	@dptr,a
      00053F EA               [12] 1100 	mov	a,r2
      000540 A3               [24] 1101 	inc	dptr
      000541 F0               [24] 1102 	movx	@dptr,a
      000542 EB               [12] 1103 	mov	a,r3
      000543 A3               [24] 1104 	inc	dptr
      000544 F0               [24] 1105 	movx	@dptr,a
      000545 C3               [12] 1106 	clr	c
      000546 EC               [12] 1107 	mov	a,r4
      000547 98               [12] 1108 	subb	a,r0
      000548 ED               [12] 1109 	mov	a,r5
      000549 99               [12] 1110 	subb	a,r1
      00054A EE               [12] 1111 	mov	a,r6
      00054B 9A               [12] 1112 	subb	a,r2
      00054C EF               [12] 1113 	mov	a,r7
      00054D 9B               [12] 1114 	subb	a,r3
      00054E 40 0A            [24] 1115 	jc	00103$
                                   1116 ;	time.c:142: year++;
      000550 05*08            [12] 1117 	inc	_gmtime_sloc0_1_0
      000552 E4               [12] 1118 	clr	a
      000553 B5*08 9D         [24] 1119 	cjne	a,_gmtime_sloc0_1_0,00101$
      000556 05*09            [12] 1120 	inc	(_gmtime_sloc0_1_0 + 1)
      000558 80 99            [24] 1121 	sjmp	00101$
      00055A                       1122 00103$:
                                   1123 ;	time.c:144: lastTime.tm_year=year-1900;
      00055A E5*08            [12] 1124 	mov	a,_gmtime_sloc0_1_0
      00055C 24 94            [12] 1125 	add	a,#0x94
      00055E FE               [12] 1126 	mov	r6,a
      00055F E5*09            [12] 1127 	mov	a,(_gmtime_sloc0_1_0 + 1)
      000561 34 F8            [12] 1128 	addc	a,#0xF8
      000563 FF               [12] 1129 	mov	r7,a
      000564 90r00r41         [24] 1130 	mov	dptr,#(_lastTime + 0x0005)
      000567 EE               [12] 1131 	mov	a,r6
      000568 F0               [24] 1132 	movx	@dptr,a
      000569 EF               [12] 1133 	mov	a,r7
      00056A A3               [24] 1134 	inc	dptr
      00056B F0               [24] 1135 	movx	@dptr,a
                                   1136 ;	time.c:146: days -= LEAP_YEAR(year) ? 366 : 365;
      00056C 74 03            [12] 1137 	mov	a,#0x03
      00056E 55*08            [12] 1138 	anl	a,_gmtime_sloc0_1_0
      000570 FE               [12] 1139 	mov	r6,a
      000571 7F 00            [12] 1140 	mov	r7,#0x00
      000573 4F               [12] 1141 	orl	a,r7
      000574 70 06            [24] 1142 	jnz	00120$
      000576 7C 6E            [12] 1143 	mov	r4,#0x6E
      000578 7D 01            [12] 1144 	mov	r5,#0x01
      00057A 80 04            [24] 1145 	sjmp	00121$
      00057C                       1146 00120$:
      00057C 7C 6D            [12] 1147 	mov	r4,#0x6D
      00057E 7D 01            [12] 1148 	mov	r5,#0x01
      000580                       1149 00121$:
      000580 C0 06            [24] 1150 	push	ar6
      000582 C0 07            [24] 1151 	push	ar7
      000584 90r00r53         [24] 1152 	mov	dptr,#_gmtime_days_1_33
      000587 E0               [24] 1153 	movx	a,@dptr
      000588 F8               [12] 1154 	mov	r0,a
      000589 A3               [24] 1155 	inc	dptr
      00058A E0               [24] 1156 	movx	a,@dptr
      00058B F9               [12] 1157 	mov	r1,a
      00058C A3               [24] 1158 	inc	dptr
      00058D E0               [24] 1159 	movx	a,@dptr
      00058E FA               [12] 1160 	mov	r2,a
      00058F A3               [24] 1161 	inc	dptr
      000590 E0               [24] 1162 	movx	a,@dptr
      000591 FB               [12] 1163 	mov	r3,a
      000592 ED               [12] 1164 	mov	a,r5
      000593 33               [12] 1165 	rlc	a
      000594 95 E0            [12] 1166 	subb	a,acc
      000596 FE               [12] 1167 	mov	r6,a
      000597 FF               [12] 1168 	mov	r7,a
      000598 90r00r53         [24] 1169 	mov	dptr,#_gmtime_days_1_33
      00059B E8               [12] 1170 	mov	a,r0
      00059C C3               [12] 1171 	clr	c
      00059D 9C               [12] 1172 	subb	a,r4
      00059E F0               [24] 1173 	movx	@dptr,a
      00059F E9               [12] 1174 	mov	a,r1
      0005A0 9D               [12] 1175 	subb	a,r5
      0005A1 A3               [24] 1176 	inc	dptr
      0005A2 F0               [24] 1177 	movx	@dptr,a
      0005A3 EA               [12] 1178 	mov	a,r2
      0005A4 9E               [12] 1179 	subb	a,r6
      0005A5 A3               [24] 1180 	inc	dptr
      0005A6 F0               [24] 1181 	movx	@dptr,a
      0005A7 EB               [12] 1182 	mov	a,r3
      0005A8 9F               [12] 1183 	subb	a,r7
      0005A9 A3               [24] 1184 	inc	dptr
      0005AA F0               [24] 1185 	movx	@dptr,a
                                   1186 ;	time.c:147: epoch -= days; // now it is days in this year, starting at 0
      0005AB 90r00r53         [24] 1187 	mov	dptr,#_gmtime_days_1_33
      0005AE E0               [24] 1188 	movx	a,@dptr
      0005AF FC               [12] 1189 	mov	r4,a
      0005B0 A3               [24] 1190 	inc	dptr
      0005B1 E0               [24] 1191 	movx	a,@dptr
      0005B2 FD               [12] 1192 	mov	r5,a
      0005B3 A3               [24] 1193 	inc	dptr
      0005B4 E0               [24] 1194 	movx	a,@dptr
      0005B5 FE               [12] 1195 	mov	r6,a
      0005B6 A3               [24] 1196 	inc	dptr
      0005B7 E0               [24] 1197 	movx	a,@dptr
      0005B8 FF               [12] 1198 	mov	r7,a
      0005B9 E5*0A            [12] 1199 	mov	a,_gmtime_sloc1_1_0
      0005BB C3               [12] 1200 	clr	c
      0005BC 9C               [12] 1201 	subb	a,r4
      0005BD FC               [12] 1202 	mov	r4,a
      0005BE E5*0B            [12] 1203 	mov	a,(_gmtime_sloc1_1_0 + 1)
      0005C0 9D               [12] 1204 	subb	a,r5
      0005C1 FD               [12] 1205 	mov	r5,a
      0005C2 E5*0C            [12] 1206 	mov	a,(_gmtime_sloc1_1_0 + 2)
      0005C4 9E               [12] 1207 	subb	a,r6
      0005C5 FE               [12] 1208 	mov	r6,a
      0005C6 E5*0D            [12] 1209 	mov	a,(_gmtime_sloc1_1_0 + 3)
      0005C8 9F               [12] 1210 	subb	a,r7
      0005C9 FF               [12] 1211 	mov	r7,a
      0005CA 90r00r4E         [24] 1212 	mov	dptr,#_gmtime_epoch_1_33
      0005CD EC               [12] 1213 	mov	a,r4
      0005CE F0               [24] 1214 	movx	@dptr,a
      0005CF ED               [12] 1215 	mov	a,r5
      0005D0 A3               [24] 1216 	inc	dptr
      0005D1 F0               [24] 1217 	movx	@dptr,a
      0005D2 EE               [12] 1218 	mov	a,r6
      0005D3 A3               [24] 1219 	inc	dptr
      0005D4 F0               [24] 1220 	movx	@dptr,a
      0005D5 EF               [12] 1221 	mov	a,r7
      0005D6 A3               [24] 1222 	inc	dptr
      0005D7 F0               [24] 1223 	movx	@dptr,a
                                   1224 ;	time.c:148: lastTime.tm_yday=epoch;
      0005D8 90r00r44         [24] 1225 	mov	dptr,#(_lastTime + 0x0008)
      0005DB EC               [12] 1226 	mov	a,r4
      0005DC F0               [24] 1227 	movx	@dptr,a
      0005DD ED               [12] 1228 	mov	a,r5
      0005DE A3               [24] 1229 	inc	dptr
      0005DF F0               [24] 1230 	movx	@dptr,a
                                   1231 ;	time.c:153: for (month=0; month<12; month++) {
      0005E0 75*10 00         [24] 1232 	mov	_gmtime_sloc3_1_0,#0x00
                                   1233 ;	time.c:175: return &lastTime;
      0005E3 D0 07            [24] 1234 	pop	ar7
      0005E5 D0 06            [24] 1235 	pop	ar6
                                   1236 ;	time.c:153: for (month=0; month<12; month++) {
      0005E7                       1237 00114$:
                                   1238 ;	time.c:154: if (month==1) { // februari
      0005E7 74 01            [12] 1239 	mov	a,#0x01
      0005E9 B5*10 14         [24] 1240 	cjne	a,_gmtime_sloc3_1_0,00108$
                                   1241 ;	time.c:155: if (LEAP_YEAR(year)) {
      0005EC EE               [12] 1242 	mov	a,r6
      0005ED 4F               [12] 1243 	orl	a,r7
      0005EE 70 08            [24] 1244 	jnz	00105$
                                   1245 ;	time.c:156: monthLength=29;
      0005F0 90r00r52         [24] 1246 	mov	dptr,#_gmtime_monthLength_1_33
      0005F3 74 1D            [12] 1247 	mov	a,#0x1D
      0005F5 F0               [24] 1248 	movx	@dptr,a
      0005F6 80 13            [24] 1249 	sjmp	00109$
      0005F8                       1250 00105$:
                                   1251 ;	time.c:158: monthLength=28;
      0005F8 90r00r52         [24] 1252 	mov	dptr,#_gmtime_monthLength_1_33
      0005FB 74 1C            [12] 1253 	mov	a,#0x1C
      0005FD F0               [24] 1254 	movx	@dptr,a
      0005FE 80 0B            [24] 1255 	sjmp	00109$
      000600                       1256 00108$:
                                   1257 ;	time.c:161: monthLength = monthDays[month];
      000600 E5*10            [12] 1258 	mov	a,_gmtime_sloc3_1_0
      000602 90r00r00         [24] 1259 	mov	dptr,#_monthDays
      000605 93               [24] 1260 	movc	a,@a+dptr
      000606 FD               [12] 1261 	mov	r5,a
      000607 90r00r52         [24] 1262 	mov	dptr,#_gmtime_monthLength_1_33
      00060A F0               [24] 1263 	movx	@dptr,a
      00060B                       1264 00109$:
                                   1265 ;	time.c:164: if (epoch>=monthLength) {
      00060B 90r00r4E         [24] 1266 	mov	dptr,#_gmtime_epoch_1_33
      00060E E0               [24] 1267 	movx	a,@dptr
      00060F FA               [12] 1268 	mov	r2,a
      000610 A3               [24] 1269 	inc	dptr
      000611 E0               [24] 1270 	movx	a,@dptr
      000612 FB               [12] 1271 	mov	r3,a
      000613 A3               [24] 1272 	inc	dptr
      000614 E0               [24] 1273 	movx	a,@dptr
      000615 FC               [12] 1274 	mov	r4,a
      000616 A3               [24] 1275 	inc	dptr
      000617 E0               [24] 1276 	movx	a,@dptr
      000618 FD               [12] 1277 	mov	r5,a
      000619 90r00r52         [24] 1278 	mov	dptr,#_gmtime_monthLength_1_33
      00061C E0               [24] 1279 	movx	a,@dptr
      00061D F9               [12] 1280 	mov	r1,a
      00061E 89*0A            [24] 1281 	mov	_gmtime_sloc1_1_0,r1
      000620 75*0B 00         [24] 1282 	mov	(_gmtime_sloc1_1_0 + 1),#0x00
      000623 75*0C 00         [24] 1283 	mov	(_gmtime_sloc1_1_0 + 2),#0x00
      000626 75*0D 00         [24] 1284 	mov	(_gmtime_sloc1_1_0 + 3),#0x00
      000629 C3               [12] 1285 	clr	c
      00062A EA               [12] 1286 	mov	a,r2
      00062B 95*0A            [12] 1287 	subb	a,_gmtime_sloc1_1_0
      00062D EB               [12] 1288 	mov	a,r3
      00062E 95*0B            [12] 1289 	subb	a,(_gmtime_sloc1_1_0 + 1)
      000630 EC               [12] 1290 	mov	a,r4
      000631 95*0C            [12] 1291 	subb	a,(_gmtime_sloc1_1_0 + 2)
      000633 ED               [12] 1292 	mov	a,r5
      000634 95*0D            [12] 1293 	subb	a,(_gmtime_sloc1_1_0 + 3)
      000636 40 1F            [24] 1294 	jc	00113$
                                   1295 ;	time.c:165: epoch-=monthLength;
      000638 90r00r4E         [24] 1296 	mov	dptr,#_gmtime_epoch_1_33
      00063B EA               [12] 1297 	mov	a,r2
      00063C C3               [12] 1298 	clr	c
      00063D 95*0A            [12] 1299 	subb	a,_gmtime_sloc1_1_0
      00063F F0               [24] 1300 	movx	@dptr,a
      000640 EB               [12] 1301 	mov	a,r3
      000641 95*0B            [12] 1302 	subb	a,(_gmtime_sloc1_1_0 + 1)
      000643 A3               [24] 1303 	inc	dptr
      000644 F0               [24] 1304 	movx	@dptr,a
      000645 EC               [12] 1305 	mov	a,r4
      000646 95*0C            [12] 1306 	subb	a,(_gmtime_sloc1_1_0 + 2)
      000648 A3               [24] 1307 	inc	dptr
      000649 F0               [24] 1308 	movx	@dptr,a
      00064A ED               [12] 1309 	mov	a,r5
      00064B 95*0D            [12] 1310 	subb	a,(_gmtime_sloc1_1_0 + 3)
      00064D A3               [24] 1311 	inc	dptr
      00064E F0               [24] 1312 	movx	@dptr,a
                                   1313 ;	time.c:153: for (month=0; month<12; month++) {
      00064F 05*10            [12] 1314 	inc	_gmtime_sloc3_1_0
      000651 74 F4            [12] 1315 	mov	a,#0x100 - 0x0C
      000653 25*10            [12] 1316 	add	a,_gmtime_sloc3_1_0
      000655 50 90            [24] 1317 	jnc	00114$
      000657                       1318 00113$:
                                   1319 ;	time.c:170: lastTime.tm_mon=month;
      000657 90r00r40         [24] 1320 	mov	dptr,#(_lastTime + 0x0004)
      00065A E5*10            [12] 1321 	mov	a,_gmtime_sloc3_1_0
      00065C F0               [24] 1322 	movx	@dptr,a
                                   1323 ;	time.c:171: lastTime.tm_mday=epoch+1;
      00065D 90r00r4E         [24] 1324 	mov	dptr,#_gmtime_epoch_1_33
      000660 E0               [24] 1325 	movx	a,@dptr
      000661 FC               [12] 1326 	mov	r4,a
      000662 A3               [24] 1327 	inc	dptr
      000663 E0               [24] 1328 	movx	a,@dptr
      000664 FD               [12] 1329 	mov	r5,a
      000665 A3               [24] 1330 	inc	dptr
      000666 E0               [24] 1331 	movx	a,@dptr
      000667 FE               [12] 1332 	mov	r6,a
      000668 A3               [24] 1333 	inc	dptr
      000669 E0               [24] 1334 	movx	a,@dptr
      00066A FF               [12] 1335 	mov	r7,a
      00066B 0C               [12] 1336 	inc	r4
      00066C 90r00r3F         [24] 1337 	mov	dptr,#(_lastTime + 0x0003)
      00066F EC               [12] 1338 	mov	a,r4
      000670 F0               [24] 1339 	movx	@dptr,a
                                   1340 ;	time.c:173: lastTime.tm_isdst=0;
      000671 90r00r46         [24] 1341 	mov	dptr,#(_lastTime + 0x000a)
      000674 E4               [12] 1342 	clr	a
      000675 F0               [24] 1343 	movx	@dptr,a
                                   1344 ;	time.c:175: return &lastTime;
      000676 90r00r3C         [24] 1345 	mov	dptr,#_lastTime
      000679 75 F0 00         [24] 1346 	mov	b,#0x00
      00067C 02r00r00         [24] 1347 	ljmp	__sdcc_banked_ret
                                   1348 ;------------------------------------------------------------
                                   1349 ;Allocation info for local variables in function 'mktime'
                                   1350 ;------------------------------------------------------------
                                   1351 ;sloc0                     Allocated with name '_mktime_sloc0_1_0'
                                   1352 ;sloc1                     Allocated with name '_mktime_sloc1_1_0'
                                   1353 ;sloc2                     Allocated with name '_mktime_sloc2_1_0'
                                   1354 ;sloc3                     Allocated with name '_mktime_sloc3_1_0'
                                   1355 ;timeptr                   Allocated with name '_mktime_timeptr_1_42'
                                   1356 ;year                      Allocated with name '_mktime_year_1_43'
                                   1357 ;month                     Allocated with name '_mktime_month_1_43'
                                   1358 ;i                         Allocated with name '_mktime_i_1_43'
                                   1359 ;seconds                   Allocated with name '_mktime_seconds_1_43'
                                   1360 ;------------------------------------------------------------
                                   1361 ;	time.c:179: time_t mktime(struct tm *timeptr) {
                                   1362 ;	-----------------------------------------
                                   1363 ;	 function mktime
                                   1364 ;	-----------------------------------------
      00067F                       1365 _mktime:
      00067F AF F0            [24] 1366 	mov	r7,b
      000681 AE 83            [24] 1367 	mov	r6,dph
      000683 E5 82            [12] 1368 	mov	a,dpl
      000685 90r00r57         [24] 1369 	mov	dptr,#_mktime_timeptr_1_42
      000688 F0               [24] 1370 	movx	@dptr,a
      000689 EE               [12] 1371 	mov	a,r6
      00068A A3               [24] 1372 	inc	dptr
      00068B F0               [24] 1373 	movx	@dptr,a
      00068C EF               [12] 1374 	mov	a,r7
      00068D A3               [24] 1375 	inc	dptr
      00068E F0               [24] 1376 	movx	@dptr,a
                                   1377 ;	time.c:180: int year=timeptr->tm_year+1900, month=timeptr->tm_mon, i;
      00068F 90r00r57         [24] 1378 	mov	dptr,#_mktime_timeptr_1_42
      000692 E0               [24] 1379 	movx	a,@dptr
      000693 F5*1A            [12] 1380 	mov	_mktime_sloc2_1_0,a
      000695 A3               [24] 1381 	inc	dptr
      000696 E0               [24] 1382 	movx	a,@dptr
      000697 F5*1B            [12] 1383 	mov	(_mktime_sloc2_1_0 + 1),a
      000699 A3               [24] 1384 	inc	dptr
      00069A E0               [24] 1385 	movx	a,@dptr
      00069B F5*1C            [12] 1386 	mov	(_mktime_sloc2_1_0 + 2),a
      00069D 74 05            [12] 1387 	mov	a,#0x05
      00069F 25*1A            [12] 1388 	add	a,_mktime_sloc2_1_0
      0006A1 FA               [12] 1389 	mov	r2,a
      0006A2 E4               [12] 1390 	clr	a
      0006A3 35*1B            [12] 1391 	addc	a,(_mktime_sloc2_1_0 + 1)
      0006A5 FB               [12] 1392 	mov	r3,a
      0006A6 AC*1C            [24] 1393 	mov	r4,(_mktime_sloc2_1_0 + 2)
      0006A8 8A 82            [24] 1394 	mov	dpl,r2
      0006AA 8B 83            [24] 1395 	mov	dph,r3
      0006AC 8C F0            [24] 1396 	mov	b,r4
      0006AE 12r00r00         [24] 1397 	lcall	__gptrget
      0006B1 FA               [12] 1398 	mov	r2,a
      0006B2 A3               [24] 1399 	inc	dptr
      0006B3 12r00r00         [24] 1400 	lcall	__gptrget
      0006B6 FB               [12] 1401 	mov	r3,a
      0006B7 74 6C            [12] 1402 	mov	a,#0x6C
      0006B9 2A               [12] 1403 	add	a,r2
      0006BA FC               [12] 1404 	mov	r4,a
      0006BB 74 07            [12] 1405 	mov	a,#0x07
      0006BD 3B               [12] 1406 	addc	a,r3
      0006BE FB               [12] 1407 	mov	r3,a
      0006BF 74 04            [12] 1408 	mov	a,#0x04
      0006C1 25*1A            [12] 1409 	add	a,_mktime_sloc2_1_0
      0006C3 F8               [12] 1410 	mov	r0,a
      0006C4 E4               [12] 1411 	clr	a
      0006C5 35*1B            [12] 1412 	addc	a,(_mktime_sloc2_1_0 + 1)
      0006C7 F9               [12] 1413 	mov	r1,a
      0006C8 AA*1C            [24] 1414 	mov	r2,(_mktime_sloc2_1_0 + 2)
      0006CA 88 82            [24] 1415 	mov	dpl,r0
      0006CC 89 83            [24] 1416 	mov	dph,r1
      0006CE 8A F0            [24] 1417 	mov	b,r2
      0006D0 12r00r00         [24] 1418 	lcall	__gptrget
      0006D3 F8               [12] 1419 	mov	r0,a
      0006D4 88*14            [24] 1420 	mov	_mktime_sloc0_1_0,r0
      0006D6 75*15 00         [24] 1421 	mov	(_mktime_sloc0_1_0 + 1),#0x00
                                   1422 ;	time.c:183: CheckTime(timeptr);
      0006D9 85*1A 82         [24] 1423 	mov	dpl,_mktime_sloc2_1_0
      0006DC 85*1B 83         [24] 1424 	mov	dph,(_mktime_sloc2_1_0 + 1)
      0006DF 85*1C F0         [24] 1425 	mov	b,(_mktime_sloc2_1_0 + 2)
      0006E2 C0 04            [24] 1426 	push	ar4
      0006E4 C0 03            [24] 1427 	push	ar3
      0006E6 78rAE            [12] 1428 	mov	r0,#_CheckTime
      0006E8 79s00            [12] 1429 	mov	r1,#(_CheckTime >> 8)
      0006EA 7As00            [12] 1430 	mov	r2,#(_CheckTime >> 16)
      0006EC 12r00r00         [24] 1431 	lcall	__sdcc_banked_call
      0006EF D0 03            [24] 1432 	pop	ar3
      0006F1 D0 04            [24] 1433 	pop	ar4
                                   1434 ;	time.c:186: seconds= (year-1970)*(60*60*24L*365);
      0006F3 EC               [12] 1435 	mov	a,r4
      0006F4 24 4E            [12] 1436 	add	a,#0x4E
      0006F6 F9               [12] 1437 	mov	r1,a
      0006F7 EB               [12] 1438 	mov	a,r3
      0006F8 34 F8            [12] 1439 	addc	a,#0xF8
      0006FA FA               [12] 1440 	mov	r2,a
      0006FB 90r00r00         [24] 1441 	mov	dptr,#__mullong_PARM_2
      0006FE E9               [12] 1442 	mov	a,r1
      0006FF F0               [24] 1443 	movx	@dptr,a
      000700 EA               [12] 1444 	mov	a,r2
      000701 A3               [24] 1445 	inc	dptr
      000702 F0               [24] 1446 	movx	@dptr,a
      000703 EA               [12] 1447 	mov	a,r2
      000704 33               [12] 1448 	rlc	a
      000705 95 E0            [12] 1449 	subb	a,acc
      000707 A3               [24] 1450 	inc	dptr
      000708 F0               [24] 1451 	movx	@dptr,a
      000709 A3               [24] 1452 	inc	dptr
      00070A F0               [24] 1453 	movx	@dptr,a
                                   1454 ;	time.c:189: for (i=1970; i<year; i++) {
      00070B 90 33 80         [24] 1455 	mov	dptr,#0x3380
      00070E 75 F0 E1         [24] 1456 	mov	b,#0xE1
      000711 74 01            [12] 1457 	mov	a,#0x01
      000713 C0 04            [24] 1458 	push	ar4
      000715 C0 03            [24] 1459 	push	ar3
      000717 12r00r00         [24] 1460 	lcall	__mullong
      00071A 85 82*16         [24] 1461 	mov	_mktime_sloc1_1_0,dpl
      00071D 85 83*17         [24] 1462 	mov	(_mktime_sloc1_1_0 + 1),dph
      000720 85 F0*18         [24] 1463 	mov	(_mktime_sloc1_1_0 + 2),b
      000723 F5*19            [12] 1464 	mov	(_mktime_sloc1_1_0 + 3),a
      000725 D0 03            [24] 1465 	pop	ar3
      000727 D0 04            [24] 1466 	pop	ar4
      000729 79 B2            [12] 1467 	mov	r1,#0xB2
      00072B 7A 07            [12] 1468 	mov	r2,#0x07
      00072D                       1469 00110$:
      00072D C3               [12] 1470 	clr	c
      00072E E9               [12] 1471 	mov	a,r1
      00072F 9C               [12] 1472 	subb	a,r4
      000730 EA               [12] 1473 	mov	a,r2
      000731 64 80            [12] 1474 	xrl	a,#0x80
      000733 8B F0            [24] 1475 	mov	b,r3
      000735 63 F0 80         [24] 1476 	xrl	b,#0x80
      000738 95 F0            [12] 1477 	subb	a,b
      00073A 50 47            [24] 1478 	jnc	00124$
                                   1479 ;	time.c:190: if (LEAP_YEAR(i)) {
      00073C 90r00r00         [24] 1480 	mov	dptr,#__modsint_PARM_2
      00073F 74 04            [12] 1481 	mov	a,#0x04
      000741 F0               [24] 1482 	movx	@dptr,a
      000742 E4               [12] 1483 	clr	a
      000743 A3               [24] 1484 	inc	dptr
      000744 F0               [24] 1485 	movx	@dptr,a
      000745 89 82            [24] 1486 	mov	dpl,r1
      000747 8A 83            [24] 1487 	mov	dph,r2
      000749 C0 04            [24] 1488 	push	ar4
      00074B C0 03            [24] 1489 	push	ar3
      00074D C0 02            [24] 1490 	push	ar2
      00074F C0 01            [24] 1491 	push	ar1
      000751 12r00r00         [24] 1492 	lcall	__modsint
      000754 E5 82            [12] 1493 	mov	a,dpl
      000756 85 83 F0         [24] 1494 	mov	b,dph
      000759 D0 01            [24] 1495 	pop	ar1
      00075B D0 02            [24] 1496 	pop	ar2
      00075D D0 03            [24] 1497 	pop	ar3
      00075F D0 04            [24] 1498 	pop	ar4
      000761 45 F0            [12] 1499 	orl	a,b
      000763 70 17            [24] 1500 	jnz	00111$
                                   1501 ;	time.c:191: seconds+= 60*60*24L;
      000765 74 80            [12] 1502 	mov	a,#0x80
      000767 25*16            [12] 1503 	add	a,_mktime_sloc1_1_0
      000769 F5*16            [12] 1504 	mov	_mktime_sloc1_1_0,a
      00076B 74 51            [12] 1505 	mov	a,#0x51
      00076D 35*17            [12] 1506 	addc	a,(_mktime_sloc1_1_0 + 1)
      00076F F5*17            [12] 1507 	mov	(_mktime_sloc1_1_0 + 1),a
      000771 74 01            [12] 1508 	mov	a,#0x01
      000773 35*18            [12] 1509 	addc	a,(_mktime_sloc1_1_0 + 2)
      000775 F5*18            [12] 1510 	mov	(_mktime_sloc1_1_0 + 2),a
      000777 E4               [12] 1511 	clr	a
      000778 35*19            [12] 1512 	addc	a,(_mktime_sloc1_1_0 + 3)
      00077A F5*19            [12] 1513 	mov	(_mktime_sloc1_1_0 + 3),a
      00077C                       1514 00111$:
                                   1515 ;	time.c:189: for (i=1970; i<year; i++) {
      00077C 09               [12] 1516 	inc	r1
      00077D B9 00 AD         [24] 1517 	cjne	r1,#0x00,00110$
      000780 0A               [12] 1518 	inc	r2
      000781 80 AA            [24] 1519 	sjmp	00110$
      000783                       1520 00124$:
      000783 90r00r5A         [24] 1521 	mov	dptr,#_mktime_seconds_1_43
      000786 E5*16            [12] 1522 	mov	a,_mktime_sloc1_1_0
      000788 F0               [24] 1523 	movx	@dptr,a
      000789 E5*17            [12] 1524 	mov	a,(_mktime_sloc1_1_0 + 1)
      00078B A3               [24] 1525 	inc	dptr
      00078C F0               [24] 1526 	movx	@dptr,a
      00078D E5*18            [12] 1527 	mov	a,(_mktime_sloc1_1_0 + 2)
      00078F A3               [24] 1528 	inc	dptr
      000790 F0               [24] 1529 	movx	@dptr,a
      000791 E5*19            [12] 1530 	mov	a,(_mktime_sloc1_1_0 + 3)
      000793 A3               [24] 1531 	inc	dptr
      000794 F0               [24] 1532 	movx	@dptr,a
                                   1533 ;	time.c:196: for (i=0; i<month; i++) {
      000795 90r00r00         [24] 1534 	mov	dptr,#__modsint_PARM_2
      000798 74 04            [12] 1535 	mov	a,#0x04
      00079A F0               [24] 1536 	movx	@dptr,a
      00079B E4               [12] 1537 	clr	a
      00079C A3               [24] 1538 	inc	dptr
      00079D F0               [24] 1539 	movx	@dptr,a
      00079E 8C 82            [24] 1540 	mov	dpl,r4
      0007A0 8B 83            [24] 1541 	mov	dph,r3
      0007A2 12r00r00         [24] 1542 	lcall	__modsint
      0007A5 85 82*16         [24] 1543 	mov	_mktime_sloc1_1_0,dpl
      0007A8 85 83*17         [24] 1544 	mov	(_mktime_sloc1_1_0 + 1),dph
      0007AB 79 00            [12] 1545 	mov	r1,#0x00
      0007AD 7A 00            [12] 1546 	mov	r2,#0x00
      0007AF                       1547 00113$:
      0007AF C3               [12] 1548 	clr	c
      0007B0 E9               [12] 1549 	mov	a,r1
      0007B1 95*14            [12] 1550 	subb	a,_mktime_sloc0_1_0
      0007B3 EA               [12] 1551 	mov	a,r2
      0007B4 64 80            [12] 1552 	xrl	a,#0x80
      0007B6 85*15 F0         [24] 1553 	mov	b,(_mktime_sloc0_1_0 + 1)
      0007B9 63 F0 80         [24] 1554 	xrl	b,#0x80
      0007BC 95 F0            [12] 1555 	subb	a,b
      0007BE 40 03            [24] 1556 	jc	00143$
      0007C0 02r08r58         [24] 1557 	ljmp	00108$
      0007C3                       1558 00143$:
                                   1559 ;	time.c:197: if (i==1 && LEAP_YEAR(year)) { 
      0007C3 B9 01 2E         [24] 1560 	cjne	r1,#0x01,00105$
      0007C6 BA 00 2B         [24] 1561 	cjne	r2,#0x00,00105$
      0007C9 E5*16            [12] 1562 	mov	a,_mktime_sloc1_1_0
      0007CB 45*17            [12] 1563 	orl	a,(_mktime_sloc1_1_0 + 1)
      0007CD 70 25            [24] 1564 	jnz	00105$
                                   1565 ;	time.c:198: seconds+= 60*60*24L*29;
      0007CF 90r00r5A         [24] 1566 	mov	dptr,#_mktime_seconds_1_43
      0007D2 E0               [24] 1567 	movx	a,@dptr
      0007D3 F8               [12] 1568 	mov	r0,a
      0007D4 A3               [24] 1569 	inc	dptr
      0007D5 E0               [24] 1570 	movx	a,@dptr
      0007D6 FB               [12] 1571 	mov	r3,a
      0007D7 A3               [24] 1572 	inc	dptr
      0007D8 E0               [24] 1573 	movx	a,@dptr
      0007D9 FC               [12] 1574 	mov	r4,a
      0007DA A3               [24] 1575 	inc	dptr
      0007DB E0               [24] 1576 	movx	a,@dptr
      0007DC FF               [12] 1577 	mov	r7,a
      0007DD 90r00r5A         [24] 1578 	mov	dptr,#_mktime_seconds_1_43
      0007E0 74 80            [12] 1579 	mov	a,#0x80
      0007E2 28               [12] 1580 	add	a,r0
      0007E3 F0               [24] 1581 	movx	@dptr,a
      0007E4 74 3B            [12] 1582 	mov	a,#0x3B
      0007E6 3B               [12] 1583 	addc	a,r3
      0007E7 A3               [24] 1584 	inc	dptr
      0007E8 F0               [24] 1585 	movx	@dptr,a
      0007E9 74 26            [12] 1586 	mov	a,#0x26
      0007EB 3C               [12] 1587 	addc	a,r4
      0007EC A3               [24] 1588 	inc	dptr
      0007ED F0               [24] 1589 	movx	@dptr,a
      0007EE E4               [12] 1590 	clr	a
      0007EF 3F               [12] 1591 	addc	a,r7
      0007F0 A3               [24] 1592 	inc	dptr
      0007F1 F0               [24] 1593 	movx	@dptr,a
      0007F2 80 5C            [24] 1594 	sjmp	00114$
      0007F4                       1595 00105$:
                                   1596 ;	time.c:200: seconds+= 60*60*24L*monthDays[i];
      0007F4 E9               [12] 1597 	mov	a,r1
      0007F5 24r00            [12] 1598 	add	a,#_monthDays
      0007F7 F5 82            [12] 1599 	mov	dpl,a
      0007F9 EA               [12] 1600 	mov	a,r2
      0007FA 34s00            [12] 1601 	addc	a,#(_monthDays >> 8)
      0007FC F5 83            [12] 1602 	mov	dph,a
      0007FE E4               [12] 1603 	clr	a
      0007FF 93               [24] 1604 	movc	a,@a+dptr
      000800 FF               [12] 1605 	mov	r7,a
      000801 90r00r00         [24] 1606 	mov	dptr,#__mullong_PARM_2
      000804 F0               [24] 1607 	movx	@dptr,a
      000805 EF               [12] 1608 	mov	a,r7
      000806 33               [12] 1609 	rlc	a
      000807 95 E0            [12] 1610 	subb	a,acc
      000809 A3               [24] 1611 	inc	dptr
      00080A F0               [24] 1612 	movx	@dptr,a
      00080B A3               [24] 1613 	inc	dptr
      00080C F0               [24] 1614 	movx	@dptr,a
      00080D A3               [24] 1615 	inc	dptr
      00080E F0               [24] 1616 	movx	@dptr,a
      00080F 90 51 80         [24] 1617 	mov	dptr,#0x5180
      000812 75 F0 01         [24] 1618 	mov	b,#0x01
      000815 E4               [12] 1619 	clr	a
      000816 C0 02            [24] 1620 	push	ar2
      000818 C0 01            [24] 1621 	push	ar1
      00081A 12r00r00         [24] 1622 	lcall	__mullong
      00081D 85 82*1D         [24] 1623 	mov	_mktime_sloc3_1_0,dpl
      000820 85 83*1E         [24] 1624 	mov	(_mktime_sloc3_1_0 + 1),dph
      000823 85 F0*1F         [24] 1625 	mov	(_mktime_sloc3_1_0 + 2),b
      000826 F5*20            [12] 1626 	mov	(_mktime_sloc3_1_0 + 3),a
      000828 D0 01            [24] 1627 	pop	ar1
      00082A D0 02            [24] 1628 	pop	ar2
      00082C 90r00r5A         [24] 1629 	mov	dptr,#_mktime_seconds_1_43
      00082F E0               [24] 1630 	movx	a,@dptr
      000830 FB               [12] 1631 	mov	r3,a
      000831 A3               [24] 1632 	inc	dptr
      000832 E0               [24] 1633 	movx	a,@dptr
      000833 FC               [12] 1634 	mov	r4,a
      000834 A3               [24] 1635 	inc	dptr
      000835 E0               [24] 1636 	movx	a,@dptr
      000836 FE               [12] 1637 	mov	r6,a
      000837 A3               [24] 1638 	inc	dptr
      000838 E0               [24] 1639 	movx	a,@dptr
      000839 FF               [12] 1640 	mov	r7,a
      00083A 90r00r5A         [24] 1641 	mov	dptr,#_mktime_seconds_1_43
      00083D E5*1D            [12] 1642 	mov	a,_mktime_sloc3_1_0
      00083F 2B               [12] 1643 	add	a,r3
      000840 F0               [24] 1644 	movx	@dptr,a
      000841 E5*1E            [12] 1645 	mov	a,(_mktime_sloc3_1_0 + 1)
      000843 3C               [12] 1646 	addc	a,r4
      000844 A3               [24] 1647 	inc	dptr
      000845 F0               [24] 1648 	movx	@dptr,a
      000846 E5*1F            [12] 1649 	mov	a,(_mktime_sloc3_1_0 + 2)
      000848 3E               [12] 1650 	addc	a,r6
      000849 A3               [24] 1651 	inc	dptr
      00084A F0               [24] 1652 	movx	@dptr,a
      00084B E5*20            [12] 1653 	mov	a,(_mktime_sloc3_1_0 + 3)
      00084D 3F               [12] 1654 	addc	a,r7
      00084E A3               [24] 1655 	inc	dptr
      00084F F0               [24] 1656 	movx	@dptr,a
      000850                       1657 00114$:
                                   1658 ;	time.c:196: for (i=0; i<month; i++) {
      000850 09               [12] 1659 	inc	r1
      000851 B9 00 01         [24] 1660 	cjne	r1,#0x00,00147$
      000854 0A               [12] 1661 	inc	r2
      000855                       1662 00147$:
      000855 02r07rAF         [24] 1663 	ljmp	00113$
      000858                       1664 00108$:
                                   1665 ;	time.c:204: seconds+= (timeptr->tm_mday-1)*60*60*24L;
      000858 74 03            [12] 1666 	mov	a,#0x03
      00085A 25*1A            [12] 1667 	add	a,_mktime_sloc2_1_0
      00085C FD               [12] 1668 	mov	r5,a
      00085D E4               [12] 1669 	clr	a
      00085E 35*1B            [12] 1670 	addc	a,(_mktime_sloc2_1_0 + 1)
      000860 FE               [12] 1671 	mov	r6,a
      000861 AF*1C            [24] 1672 	mov	r7,(_mktime_sloc2_1_0 + 2)
      000863 8D 82            [24] 1673 	mov	dpl,r5
      000865 8E 83            [24] 1674 	mov	dph,r6
      000867 8F F0            [24] 1675 	mov	b,r7
      000869 12r00r00         [24] 1676 	lcall	__gptrget
      00086C FD               [12] 1677 	mov	r5,a
      00086D 7F 00            [12] 1678 	mov	r7,#0x00
      00086F 1D               [12] 1679 	dec	r5
      000870 BD FF 01         [24] 1680 	cjne	r5,#0xFF,00148$
      000873 1F               [12] 1681 	dec	r7
      000874                       1682 00148$:
      000874 90r00r00         [24] 1683 	mov	dptr,#__mullong_PARM_2
      000877 ED               [12] 1684 	mov	a,r5
      000878 F0               [24] 1685 	movx	@dptr,a
      000879 EF               [12] 1686 	mov	a,r7
      00087A A3               [24] 1687 	inc	dptr
      00087B F0               [24] 1688 	movx	@dptr,a
      00087C EF               [12] 1689 	mov	a,r7
      00087D 33               [12] 1690 	rlc	a
      00087E 95 E0            [12] 1691 	subb	a,acc
      000880 A3               [24] 1692 	inc	dptr
      000881 F0               [24] 1693 	movx	@dptr,a
      000882 A3               [24] 1694 	inc	dptr
      000883 F0               [24] 1695 	movx	@dptr,a
      000884 90 51 80         [24] 1696 	mov	dptr,#0x5180
      000887 75 F0 01         [24] 1697 	mov	b,#0x01
      00088A E4               [12] 1698 	clr	a
      00088B 12r00r00         [24] 1699 	lcall	__mullong
      00088E AC 82            [24] 1700 	mov	r4,dpl
      000890 AD 83            [24] 1701 	mov	r5,dph
      000892 AE F0            [24] 1702 	mov	r6,b
      000894 FF               [12] 1703 	mov	r7,a
      000895 90r00r5A         [24] 1704 	mov	dptr,#_mktime_seconds_1_43
      000898 E0               [24] 1705 	movx	a,@dptr
      000899 F8               [12] 1706 	mov	r0,a
      00089A A3               [24] 1707 	inc	dptr
      00089B E0               [24] 1708 	movx	a,@dptr
      00089C F9               [12] 1709 	mov	r1,a
      00089D A3               [24] 1710 	inc	dptr
      00089E E0               [24] 1711 	movx	a,@dptr
      00089F FA               [12] 1712 	mov	r2,a
      0008A0 A3               [24] 1713 	inc	dptr
      0008A1 E0               [24] 1714 	movx	a,@dptr
      0008A2 FB               [12] 1715 	mov	r3,a
      0008A3 90r00r5A         [24] 1716 	mov	dptr,#_mktime_seconds_1_43
      0008A6 EC               [12] 1717 	mov	a,r4
      0008A7 28               [12] 1718 	add	a,r0
      0008A8 F0               [24] 1719 	movx	@dptr,a
      0008A9 ED               [12] 1720 	mov	a,r5
      0008AA 39               [12] 1721 	addc	a,r1
      0008AB A3               [24] 1722 	inc	dptr
      0008AC F0               [24] 1723 	movx	@dptr,a
      0008AD EE               [12] 1724 	mov	a,r6
      0008AE 3A               [12] 1725 	addc	a,r2
      0008AF A3               [24] 1726 	inc	dptr
      0008B0 F0               [24] 1727 	movx	@dptr,a
      0008B1 EF               [12] 1728 	mov	a,r7
      0008B2 3B               [12] 1729 	addc	a,r3
      0008B3 A3               [24] 1730 	inc	dptr
      0008B4 F0               [24] 1731 	movx	@dptr,a
                                   1732 ;	time.c:205: seconds+= timeptr->tm_hour*60*60L;
      0008B5 74 02            [12] 1733 	mov	a,#0x02
      0008B7 25*1A            [12] 1734 	add	a,_mktime_sloc2_1_0
      0008B9 FD               [12] 1735 	mov	r5,a
      0008BA E4               [12] 1736 	clr	a
      0008BB 35*1B            [12] 1737 	addc	a,(_mktime_sloc2_1_0 + 1)
      0008BD FE               [12] 1738 	mov	r6,a
      0008BE AF*1C            [24] 1739 	mov	r7,(_mktime_sloc2_1_0 + 2)
      0008C0 8D 82            [24] 1740 	mov	dpl,r5
      0008C2 8E 83            [24] 1741 	mov	dph,r6
      0008C4 8F F0            [24] 1742 	mov	b,r7
      0008C6 12r00r00         [24] 1743 	lcall	__gptrget
      0008C9 90r00r00         [24] 1744 	mov	dptr,#__mullong_PARM_2
      0008CC F0               [24] 1745 	movx	@dptr,a
      0008CD E4               [12] 1746 	clr	a
      0008CE A3               [24] 1747 	inc	dptr
      0008CF F0               [24] 1748 	movx	@dptr,a
      0008D0 A3               [24] 1749 	inc	dptr
      0008D1 F0               [24] 1750 	movx	@dptr,a
      0008D2 A3               [24] 1751 	inc	dptr
      0008D3 F0               [24] 1752 	movx	@dptr,a
      0008D4 90 0E 10         [24] 1753 	mov	dptr,#0x0E10
      0008D7 E4               [12] 1754 	clr	a
      0008D8 F5 F0            [12] 1755 	mov	b,a
      0008DA 12r00r00         [24] 1756 	lcall	__mullong
      0008DD AC 82            [24] 1757 	mov	r4,dpl
      0008DF AD 83            [24] 1758 	mov	r5,dph
      0008E1 AE F0            [24] 1759 	mov	r6,b
      0008E3 FF               [12] 1760 	mov	r7,a
      0008E4 90r00r5A         [24] 1761 	mov	dptr,#_mktime_seconds_1_43
      0008E7 E0               [24] 1762 	movx	a,@dptr
      0008E8 F8               [12] 1763 	mov	r0,a
      0008E9 A3               [24] 1764 	inc	dptr
      0008EA E0               [24] 1765 	movx	a,@dptr
      0008EB F9               [12] 1766 	mov	r1,a
      0008EC A3               [24] 1767 	inc	dptr
      0008ED E0               [24] 1768 	movx	a,@dptr
      0008EE FA               [12] 1769 	mov	r2,a
      0008EF A3               [24] 1770 	inc	dptr
      0008F0 E0               [24] 1771 	movx	a,@dptr
      0008F1 FB               [12] 1772 	mov	r3,a
      0008F2 90r00r5A         [24] 1773 	mov	dptr,#_mktime_seconds_1_43
      0008F5 EC               [12] 1774 	mov	a,r4
      0008F6 28               [12] 1775 	add	a,r0
      0008F7 F0               [24] 1776 	movx	@dptr,a
      0008F8 ED               [12] 1777 	mov	a,r5
      0008F9 39               [12] 1778 	addc	a,r1
      0008FA A3               [24] 1779 	inc	dptr
      0008FB F0               [24] 1780 	movx	@dptr,a
      0008FC EE               [12] 1781 	mov	a,r6
      0008FD 3A               [12] 1782 	addc	a,r2
      0008FE A3               [24] 1783 	inc	dptr
      0008FF F0               [24] 1784 	movx	@dptr,a
      000900 EF               [12] 1785 	mov	a,r7
      000901 3B               [12] 1786 	addc	a,r3
      000902 A3               [24] 1787 	inc	dptr
      000903 F0               [24] 1788 	movx	@dptr,a
                                   1789 ;	time.c:206: seconds+= timeptr->tm_min*60;
      000904 74 01            [12] 1790 	mov	a,#0x01
      000906 25*1A            [12] 1791 	add	a,_mktime_sloc2_1_0
      000908 FD               [12] 1792 	mov	r5,a
      000909 E4               [12] 1793 	clr	a
      00090A 35*1B            [12] 1794 	addc	a,(_mktime_sloc2_1_0 + 1)
      00090C FE               [12] 1795 	mov	r6,a
      00090D AF*1C            [24] 1796 	mov	r7,(_mktime_sloc2_1_0 + 2)
      00090F 8D 82            [24] 1797 	mov	dpl,r5
      000911 8E 83            [24] 1798 	mov	dph,r6
      000913 8F F0            [24] 1799 	mov	b,r7
      000915 12r00r00         [24] 1800 	lcall	__gptrget
      000918 75 F0 3C         [24] 1801 	mov	b,#0x3C
      00091B A4               [48] 1802 	mul	ab
      00091C FD               [12] 1803 	mov	r5,a
      00091D AF F0            [24] 1804 	mov	r7,b
      00091F 90r00r5A         [24] 1805 	mov	dptr,#_mktime_seconds_1_43
      000922 E0               [24] 1806 	movx	a,@dptr
      000923 FA               [12] 1807 	mov	r2,a
      000924 A3               [24] 1808 	inc	dptr
      000925 E0               [24] 1809 	movx	a,@dptr
      000926 FB               [12] 1810 	mov	r3,a
      000927 A3               [24] 1811 	inc	dptr
      000928 E0               [24] 1812 	movx	a,@dptr
      000929 FC               [12] 1813 	mov	r4,a
      00092A A3               [24] 1814 	inc	dptr
      00092B E0               [24] 1815 	movx	a,@dptr
      00092C FE               [12] 1816 	mov	r6,a
      00092D 8D 00            [24] 1817 	mov	ar0,r5
      00092F EF               [12] 1818 	mov	a,r7
      000930 F9               [12] 1819 	mov	r1,a
      000931 33               [12] 1820 	rlc	a
      000932 95 E0            [12] 1821 	subb	a,acc
      000934 FD               [12] 1822 	mov	r5,a
      000935 FF               [12] 1823 	mov	r7,a
      000936 90r00r5A         [24] 1824 	mov	dptr,#_mktime_seconds_1_43
      000939 E8               [12] 1825 	mov	a,r0
      00093A 2A               [12] 1826 	add	a,r2
      00093B F0               [24] 1827 	movx	@dptr,a
      00093C E9               [12] 1828 	mov	a,r1
      00093D 3B               [12] 1829 	addc	a,r3
      00093E A3               [24] 1830 	inc	dptr
      00093F F0               [24] 1831 	movx	@dptr,a
      000940 ED               [12] 1832 	mov	a,r5
      000941 3C               [12] 1833 	addc	a,r4
      000942 A3               [24] 1834 	inc	dptr
      000943 F0               [24] 1835 	movx	@dptr,a
      000944 EF               [12] 1836 	mov	a,r7
      000945 3E               [12] 1837 	addc	a,r6
      000946 A3               [24] 1838 	inc	dptr
      000947 F0               [24] 1839 	movx	@dptr,a
                                   1840 ;	time.c:207: seconds+= timeptr->tm_sec;
      000948 85*1A 82         [24] 1841 	mov	dpl,_mktime_sloc2_1_0
      00094B 85*1B 83         [24] 1842 	mov	dph,(_mktime_sloc2_1_0 + 1)
      00094E 85*1C F0         [24] 1843 	mov	b,(_mktime_sloc2_1_0 + 2)
      000951 12r00r00         [24] 1844 	lcall	__gptrget
      000954 FF               [12] 1845 	mov	r7,a
      000955 7E 00            [12] 1846 	mov	r6,#0x00
      000957 90r00r5A         [24] 1847 	mov	dptr,#_mktime_seconds_1_43
      00095A E0               [24] 1848 	movx	a,@dptr
      00095B FA               [12] 1849 	mov	r2,a
      00095C A3               [24] 1850 	inc	dptr
      00095D E0               [24] 1851 	movx	a,@dptr
      00095E FB               [12] 1852 	mov	r3,a
      00095F A3               [24] 1853 	inc	dptr
      000960 E0               [24] 1854 	movx	a,@dptr
      000961 FC               [12] 1855 	mov	r4,a
      000962 A3               [24] 1856 	inc	dptr
      000963 E0               [24] 1857 	movx	a,@dptr
      000964 FD               [12] 1858 	mov	r5,a
      000965 8F 00            [24] 1859 	mov	ar0,r7
      000967 EE               [12] 1860 	mov	a,r6
      000968 F9               [12] 1861 	mov	r1,a
      000969 33               [12] 1862 	rlc	a
      00096A 95 E0            [12] 1863 	subb	a,acc
      00096C FE               [12] 1864 	mov	r6,a
      00096D FF               [12] 1865 	mov	r7,a
      00096E 90r00r5A         [24] 1866 	mov	dptr,#_mktime_seconds_1_43
      000971 E8               [12] 1867 	mov	a,r0
      000972 2A               [12] 1868 	add	a,r2
      000973 F0               [24] 1869 	movx	@dptr,a
      000974 E9               [12] 1870 	mov	a,r1
      000975 3B               [12] 1871 	addc	a,r3
      000976 A3               [24] 1872 	inc	dptr
      000977 F0               [24] 1873 	movx	@dptr,a
      000978 EE               [12] 1874 	mov	a,r6
      000979 3C               [12] 1875 	addc	a,r4
      00097A A3               [24] 1876 	inc	dptr
      00097B F0               [24] 1877 	movx	@dptr,a
      00097C EF               [12] 1878 	mov	a,r7
      00097D 3D               [12] 1879 	addc	a,r5
      00097E A3               [24] 1880 	inc	dptr
      00097F F0               [24] 1881 	movx	@dptr,a
                                   1882 ;	time.c:208: return seconds;
      000980 90r00r5A         [24] 1883 	mov	dptr,#_mktime_seconds_1_43
      000983 E0               [24] 1884 	movx	a,@dptr
      000984 FC               [12] 1885 	mov	r4,a
      000985 A3               [24] 1886 	inc	dptr
      000986 E0               [24] 1887 	movx	a,@dptr
      000987 FD               [12] 1888 	mov	r5,a
      000988 A3               [24] 1889 	inc	dptr
      000989 E0               [24] 1890 	movx	a,@dptr
      00098A FE               [12] 1891 	mov	r6,a
      00098B A3               [24] 1892 	inc	dptr
      00098C E0               [24] 1893 	movx	a,@dptr
      00098D FF               [12] 1894 	mov	r7,a
      00098E 8C 82            [24] 1895 	mov	dpl,r4
      000990 8D 83            [24] 1896 	mov	dph,r5
      000992 8E F0            [24] 1897 	mov	b,r6
      000994 02r00r00         [24] 1898 	ljmp	__sdcc_banked_ret
                                   1899 	.area CSEG    (CODE)
                                   1900 	.area CONST   (CODE)
      000000                       1901 _monthDays:
      000000 1F                    1902 	.db #0x1F	;  31
      000001 1C                    1903 	.db #0x1C	;  28
      000002 1F                    1904 	.db #0x1F	;  31
      000003 1E                    1905 	.db #0x1E	;  30
      000004 1F                    1906 	.db #0x1F	;  31
      000005 1E                    1907 	.db #0x1E	;  30
      000006 1F                    1908 	.db #0x1F	;  31
      000007 1F                    1909 	.db #0x1F	;  31
      000008 1E                    1910 	.db #0x1E	;  30
      000009 1F                    1911 	.db #0x1F	;  31
      00000A 1E                    1912 	.db #0x1E	;  30
      00000B 1F                    1913 	.db #0x1F	;  31
      00000C                       1914 ___month:
      00000Cr51s00                 1915 	.byte __str_1,(__str_1 >> 8)
      00000Er55s00                 1916 	.byte __str_2,(__str_2 >> 8)
      000010r59s00                 1917 	.byte __str_3,(__str_3 >> 8)
      000012r5Ds00                 1918 	.byte __str_4,(__str_4 >> 8)
      000014r61s00                 1919 	.byte __str_5,(__str_5 >> 8)
      000016r65s00                 1920 	.byte __str_6,(__str_6 >> 8)
      000018r69s00                 1921 	.byte __str_7,(__str_7 >> 8)
      00001Ar6Ds00                 1922 	.byte __str_8,(__str_8 >> 8)
      00001Cr71s00                 1923 	.byte __str_9,(__str_9 >> 8)
      00001Er75s00                 1924 	.byte __str_10,(__str_10 >> 8)
      000020r79s00                 1925 	.byte __str_11,(__str_11 >> 8)
      000022r7Ds00                 1926 	.byte __str_12,(__str_12 >> 8)
      000024                       1927 ___day:
      000024r81s00                 1928 	.byte __str_13,(__str_13 >> 8)
      000026r85s00                 1929 	.byte __str_14,(__str_14 >> 8)
      000028r89s00                 1930 	.byte __str_15,(__str_15 >> 8)
      00002Ar8Ds00                 1931 	.byte __str_16,(__str_16 >> 8)
      00002Cr91s00                 1932 	.byte __str_17,(__str_17 >> 8)
      00002Er95s00                 1933 	.byte __str_18,(__str_18 >> 8)
      000030r99s00                 1934 	.byte __str_19,(__str_19 >> 8)
      000032                       1935 ___str_0:
      000032 25 73 20 25 73 20 25  1936 	.ascii "%s %s %2d %02d:%02d:%02d %04d"
             32 64 20 25 30 32 64
             3A 25 30 32 64 3A 25
             30 32 64 20 25 30 34
             64
      00004F 0A                    1937 	.db 0x0A
      000050 00                    1938 	.db 0x00
      000051                       1939 __str_1:
      000051 4A 61 6E              1940 	.ascii "Jan"
      000054 00                    1941 	.db 0x00
      000055                       1942 __str_2:
      000055 46 65 62              1943 	.ascii "Feb"
      000058 00                    1944 	.db 0x00
      000059                       1945 __str_3:
      000059 4D 61 72              1946 	.ascii "Mar"
      00005C 00                    1947 	.db 0x00
      00005D                       1948 __str_4:
      00005D 41 70 72              1949 	.ascii "Apr"
      000060 00                    1950 	.db 0x00
      000061                       1951 __str_5:
      000061 4D 61 79              1952 	.ascii "May"
      000064 00                    1953 	.db 0x00
      000065                       1954 __str_6:
      000065 4A 75 6E              1955 	.ascii "Jun"
      000068 00                    1956 	.db 0x00
      000069                       1957 __str_7:
      000069 4A 75 6C              1958 	.ascii "Jul"
      00006C 00                    1959 	.db 0x00
      00006D                       1960 __str_8:
      00006D 41 75 67              1961 	.ascii "Aug"
      000070 00                    1962 	.db 0x00
      000071                       1963 __str_9:
      000071 53 65 70              1964 	.ascii "Sep"
      000074 00                    1965 	.db 0x00
      000075                       1966 __str_10:
      000075 4F 63 74              1967 	.ascii "Oct"
      000078 00                    1968 	.db 0x00
      000079                       1969 __str_11:
      000079 4E 6F 76              1970 	.ascii "Nov"
      00007C 00                    1971 	.db 0x00
      00007D                       1972 __str_12:
      00007D 44 65 63              1973 	.ascii "Dec"
      000080 00                    1974 	.db 0x00
      000081                       1975 __str_13:
      000081 53 75 6E              1976 	.ascii "Sun"
      000084 00                    1977 	.db 0x00
      000085                       1978 __str_14:
      000085 4D 6F 6E              1979 	.ascii "Mon"
      000088 00                    1980 	.db 0x00
      000089                       1981 __str_15:
      000089 54 75 65              1982 	.ascii "Tue"
      00008C 00                    1983 	.db 0x00
      00008D                       1984 __str_16:
      00008D 57 65 64              1985 	.ascii "Wed"
      000090 00                    1986 	.db 0x00
      000091                       1987 __str_17:
      000091 54 68 75              1988 	.ascii "Thu"
      000094 00                    1989 	.db 0x00
      000095                       1990 __str_18:
      000095 46 72 69              1991 	.ascii "Fri"
      000098 00                    1992 	.db 0x00
      000099                       1993 __str_19:
      000099 53 61 74              1994 	.ascii "Sat"
      00009C 00                    1995 	.db 0x00
                                   1996 	.area XINIT   (CODE)
                                   1997 	.area CABS    (ABS,CODE)
