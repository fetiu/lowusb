                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:25 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _free
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl __sdcc_find_memheader
                                     13 	.globl __sdcc_prev_memheader
                                     14 	.globl _free
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
      000000                         58 __sdcc_prev_memheader::
      000000                         59 	.ds 2
      000002                         60 __sdcc_find_memheader_p_1_5:
      000002                         61 	.ds 2
      000004                         62 __sdcc_find_memheader_cur_header_1_6:
      000004                         63 	.ds 2
      000006                         64 _free_p_1_8:
      000006                         65 	.ds 3
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external initialized ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function '_sdcc_find_memheader'
                                    102 ;------------------------------------------------------------
                                    103 ;p                         Allocated with name '__sdcc_find_memheader_p_1_5'
                                    104 ;pthis                     Allocated with name '__sdcc_find_memheader_pthis_1_6'
                                    105 ;cur_header                Allocated with name '__sdcc_find_memheader_cur_header_1_6'
                                    106 ;------------------------------------------------------------
                                    107 ;	_free.c:129: MEMHEADER __xdata * _sdcc_find_memheader(void __xdata * p)
                                    108 ;	-----------------------------------------
                                    109 ;	 function _sdcc_find_memheader
                                    110 ;	-----------------------------------------
      000000                        111 __sdcc_find_memheader:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 AF 83            [24]  120 	mov	r7,dph
      000002 E5 82            [12]  121 	mov	a,dpl
      000004 90r00r02         [24]  122 	mov	dptr,#__sdcc_find_memheader_p_1_5
      000007 F0               [24]  123 	movx	@dptr,a
      000008 EF               [12]  124 	mov	a,r7
      000009 A3               [24]  125 	inc	dptr
      00000A F0               [24]  126 	movx	@dptr,a
                                    127 ;	_free.c:134: if (!p)
      00000B 90r00r02         [24]  128 	mov	dptr,#__sdcc_find_memheader_p_1_5
      00000E E0               [24]  129 	movx	a,@dptr
      00000F FE               [12]  130 	mov	r6,a
      000010 A3               [24]  131 	inc	dptr
      000011 E0               [24]  132 	movx	a,@dptr
      000012 FF               [12]  133 	mov	r7,a
      000013 90r00r02         [24]  134 	mov	dptr,#__sdcc_find_memheader_p_1_5
      000016 E0               [24]  135 	movx	a,@dptr
      000017 F5 F0            [12]  136 	mov	b,a
      000019 A3               [24]  137 	inc	dptr
      00001A E0               [24]  138 	movx	a,@dptr
      00001B 45 F0            [12]  139 	orl	a,b
      00001D 70 05            [24]  140 	jnz	00102$
                                    141 ;	_free.c:135: return NULL;
      00001F 90 00 00         [24]  142 	mov	dptr,#0x0000
      000022 80 5B            [24]  143 	sjmp	00107$
      000024                        144 00102$:
                                    145 ;	_free.c:136: pthis = (MEMHEADER __xdata *) p;
                                    146 ;	_free.c:137: pthis -= 1; //to start of header
      000024 EE               [12]  147 	mov	a,r6
      000025 24 FC            [12]  148 	add	a,#0xFC
      000027 FE               [12]  149 	mov	r6,a
      000028 EF               [12]  150 	mov	a,r7
      000029 34 FF            [12]  151 	addc	a,#0xFF
      00002B FF               [12]  152 	mov	r7,a
                                    153 ;	_free.c:138: cur_header = _sdcc_first_memheader;
      00002C 90r00r00         [24]  154 	mov	dptr,#__sdcc_first_memheader
      00002F E0               [24]  155 	movx	a,@dptr
      000030 FC               [12]  156 	mov	r4,a
      000031 A3               [24]  157 	inc	dptr
      000032 E0               [24]  158 	movx	a,@dptr
      000033 FD               [12]  159 	mov	r5,a
      000034 90r00r04         [24]  160 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      000037 EC               [12]  161 	mov	a,r4
      000038 F0               [24]  162 	movx	@dptr,a
      000039 ED               [12]  163 	mov	a,r5
      00003A A3               [24]  164 	inc	dptr
      00003B F0               [24]  165 	movx	@dptr,a
                                    166 ;	_free.c:139: _sdcc_prev_memheader = NULL;
      00003C 90r00r00         [24]  167 	mov	dptr,#__sdcc_prev_memheader
      00003F E4               [12]  168 	clr	a
      000040 F0               [24]  169 	movx	@dptr,a
      000041 A3               [24]  170 	inc	dptr
      000042 F0               [24]  171 	movx	@dptr,a
                                    172 ;	_free.c:140: while (cur_header && pthis != cur_header)
      000043                        173 00104$:
      000043 90r00r04         [24]  174 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      000046 E0               [24]  175 	movx	a,@dptr
      000047 FC               [12]  176 	mov	r4,a
      000048 A3               [24]  177 	inc	dptr
      000049 E0               [24]  178 	movx	a,@dptr
      00004A FD               [12]  179 	mov	r5,a
      00004B 4C               [12]  180 	orl	a,r4
      00004C 60 25            [24]  181 	jz	00106$
      00004E EE               [12]  182 	mov	a,r6
      00004F B5 04 06         [24]  183 	cjne	a,ar4,00123$
      000052 EF               [12]  184 	mov	a,r7
      000053 B5 05 02         [24]  185 	cjne	a,ar5,00123$
      000056 80 1B            [24]  186 	sjmp	00106$
      000058                        187 00123$:
                                    188 ;	_free.c:142: _sdcc_prev_memheader = cur_header;
      000058 90r00r00         [24]  189 	mov	dptr,#__sdcc_prev_memheader
      00005B EC               [12]  190 	mov	a,r4
      00005C F0               [24]  191 	movx	@dptr,a
      00005D ED               [12]  192 	mov	a,r5
      00005E A3               [24]  193 	inc	dptr
      00005F F0               [24]  194 	movx	@dptr,a
                                    195 ;	_free.c:143: cur_header = cur_header->next;
      000060 8C 82            [24]  196 	mov	dpl,r4
      000062 8D 83            [24]  197 	mov	dph,r5
      000064 E0               [24]  198 	movx	a,@dptr
      000065 FC               [12]  199 	mov	r4,a
      000066 A3               [24]  200 	inc	dptr
      000067 E0               [24]  201 	movx	a,@dptr
      000068 FD               [12]  202 	mov	r5,a
      000069 90r00r04         [24]  203 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      00006C EC               [12]  204 	mov	a,r4
      00006D F0               [24]  205 	movx	@dptr,a
      00006E ED               [12]  206 	mov	a,r5
      00006F A3               [24]  207 	inc	dptr
      000070 F0               [24]  208 	movx	@dptr,a
      000071 80 D0            [24]  209 	sjmp	00104$
      000073                        210 00106$:
                                    211 ;	_free.c:145: return (cur_header);
      000073 90r00r04         [24]  212 	mov	dptr,#__sdcc_find_memheader_cur_header_1_6
      000076 E0               [24]  213 	movx	a,@dptr
      000077 FE               [12]  214 	mov	r6,a
      000078 A3               [24]  215 	inc	dptr
      000079 E0               [24]  216 	movx	a,@dptr
      00007A FF               [12]  217 	mov	r7,a
      00007B 8E 82            [24]  218 	mov	dpl,r6
      00007D 8F 83            [24]  219 	mov	dph,r7
      00007F                        220 00107$:
      00007F 02r00r00         [24]  221 	ljmp	__sdcc_banked_ret
                                    222 ;------------------------------------------------------------
                                    223 ;Allocation info for local variables in function 'free'
                                    224 ;------------------------------------------------------------
                                    225 ;p                         Allocated with name '_free_p_1_8'
                                    226 ;pthis                     Allocated with name '_free_pthis_1_9'
                                    227 ;------------------------------------------------------------
                                    228 ;	_free.c:148: void free (void * p)
                                    229 ;	-----------------------------------------
                                    230 ;	 function free
                                    231 ;	-----------------------------------------
      000082                        232 _free:
      000082 AF F0            [24]  233 	mov	r7,b
      000084 AE 83            [24]  234 	mov	r6,dph
      000086 E5 82            [12]  235 	mov	a,dpl
      000088 90r00r06         [24]  236 	mov	dptr,#_free_p_1_8
      00008B F0               [24]  237 	movx	@dptr,a
      00008C EE               [12]  238 	mov	a,r6
      00008D A3               [24]  239 	inc	dptr
      00008E F0               [24]  240 	movx	@dptr,a
      00008F EF               [12]  241 	mov	a,r7
      000090 A3               [24]  242 	inc	dptr
      000091 F0               [24]  243 	movx	@dptr,a
                                    244 ;	_free.c:154: pthis = _sdcc_find_memheader(p);
      000092 90r00r06         [24]  245 	mov	dptr,#_free_p_1_8
      000095 E0               [24]  246 	movx	a,@dptr
      000096 FD               [12]  247 	mov	r5,a
      000097 A3               [24]  248 	inc	dptr
      000098 E0               [24]  249 	movx	a,@dptr
      000099 FE               [12]  250 	mov	r6,a
      00009A A3               [24]  251 	inc	dptr
      00009B E0               [24]  252 	movx	a,@dptr
      00009C 8D 82            [24]  253 	mov	dpl,r5
      00009E 8E 83            [24]  254 	mov	dph,r6
      0000A0 78r00            [12]  255 	mov	r0,#__sdcc_find_memheader
      0000A2 79s00            [12]  256 	mov	r1,#(__sdcc_find_memheader >> 8)
      0000A4 7As00            [12]  257 	mov	r2,#(__sdcc_find_memheader >> 16)
      0000A6 12r00r00         [24]  258 	lcall	__sdcc_banked_call
      0000A9 AE 82            [24]  259 	mov	r6,dpl
      0000AB AF 83            [24]  260 	mov	r7,dph
                                    261 ;	_free.c:155: if (pthis) //For allocated pointers only!
      0000AD EE               [12]  262 	mov	a,r6
      0000AE 4F               [12]  263 	orl	a,r7
      0000AF 60 32            [24]  264 	jz	00106$
                                    265 ;	_free.c:157: if (!_sdcc_prev_memheader)
      0000B1 90r00r00         [24]  266 	mov	dptr,#__sdcc_prev_memheader
      0000B4 E0               [24]  267 	movx	a,@dptr
      0000B5 FC               [12]  268 	mov	r4,a
      0000B6 A3               [24]  269 	inc	dptr
      0000B7 E0               [24]  270 	movx	a,@dptr
      0000B8 FD               [12]  271 	mov	r5,a
      0000B9 90r00r00         [24]  272 	mov	dptr,#__sdcc_prev_memheader
      0000BC E0               [24]  273 	movx	a,@dptr
      0000BD F5 F0            [12]  274 	mov	b,a
      0000BF A3               [24]  275 	inc	dptr
      0000C0 E0               [24]  276 	movx	a,@dptr
      0000C1 45 F0            [12]  277 	orl	a,b
      0000C3 70 0C            [24]  278 	jnz	00102$
                                    279 ;	_free.c:159: pthis->len = 0;
      0000C5 8E 82            [24]  280 	mov	dpl,r6
      0000C7 8F 83            [24]  281 	mov	dph,r7
      0000C9 A3               [24]  282 	inc	dptr
      0000CA A3               [24]  283 	inc	dptr
      0000CB E4               [12]  284 	clr	a
      0000CC F0               [24]  285 	movx	@dptr,a
      0000CD A3               [24]  286 	inc	dptr
      0000CE F0               [24]  287 	movx	@dptr,a
      0000CF 80 12            [24]  288 	sjmp	00106$
      0000D1                        289 00102$:
                                    290 ;	_free.c:163: _sdcc_prev_memheader->next = pthis->next;
      0000D1 8E 82            [24]  291 	mov	dpl,r6
      0000D3 8F 83            [24]  292 	mov	dph,r7
      0000D5 E0               [24]  293 	movx	a,@dptr
      0000D6 FE               [12]  294 	mov	r6,a
      0000D7 A3               [24]  295 	inc	dptr
      0000D8 E0               [24]  296 	movx	a,@dptr
      0000D9 FF               [12]  297 	mov	r7,a
      0000DA 8C 82            [24]  298 	mov	dpl,r4
      0000DC 8D 83            [24]  299 	mov	dph,r5
      0000DE EE               [12]  300 	mov	a,r6
      0000DF F0               [24]  301 	movx	@dptr,a
      0000E0 EF               [12]  302 	mov	a,r7
      0000E1 A3               [24]  303 	inc	dptr
      0000E2 F0               [24]  304 	movx	@dptr,a
      0000E3                        305 00106$:
      0000E3 02r00r00         [24]  306 	ljmp	__sdcc_banked_ret
                                    307 	.area CSEG    (CODE)
                                    308 	.area CONST   (CODE)
                                    309 	.area XINIT   (CODE)
                                    310 	.area CABS    (ABS,CODE)
