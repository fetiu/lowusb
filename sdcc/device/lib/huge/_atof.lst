                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:15 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module _atof
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _atoi
                                     13 	.globl _toupper
                                     14 	.globl _isspace
                                     15 	.globl _atof
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 	.area RSEG    (ABS,DATA)
      000000                         20 	.org 0x0000
                                     21 ;--------------------------------------------------------
                                     22 ; special function bits
                                     23 ;--------------------------------------------------------
                                     24 	.area RSEG    (ABS,DATA)
      000000                         25 	.org 0x0000
                                     26 ;--------------------------------------------------------
                                     27 ; overlayable register banks
                                     28 ;--------------------------------------------------------
                                     29 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         30 	.ds 8
                                     31 ;--------------------------------------------------------
                                     32 ; internal ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DSEG    (DATA)
      000000                         35 _atof_sloc0_1_0:
      000000                         36 	.ds 4
      000004                         37 _atof_sloc1_1_0:
      000004                         38 	.ds 4
                                     39 ;--------------------------------------------------------
                                     40 ; overlayable items in internal ram 
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; indirectly addressable internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area ISEG    (DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; absolute internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area IABS    (ABS,DATA)
                                     50 	.area IABS    (ABS,DATA)
                                     51 ;--------------------------------------------------------
                                     52 ; bit data
                                     53 ;--------------------------------------------------------
                                     54 	.area BSEG    (BIT)
      000000                         55 _atof_sign_1_36:
      000000                         56 	.ds 1
                                     57 ;--------------------------------------------------------
                                     58 ; paged external ram data
                                     59 ;--------------------------------------------------------
                                     60 	.area PSEG    (PAG,XDATA)
                                     61 ;--------------------------------------------------------
                                     62 ; external ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area XSEG    (XDATA)
      000000                         65 _atof_s_1_35:
      000000                         66 	.ds 3
      000003                         67 _atof_value_1_36:
      000003                         68 	.ds 4
      000007                         69 _atof_fraction_1_36:
      000007                         70 	.ds 4
      00000B                         71 _atof_iexp_1_36:
      00000B                         72 	.ds 1
                                     73 ;--------------------------------------------------------
                                     74 ; absolute external ram data
                                     75 ;--------------------------------------------------------
                                     76 	.area XABS    (ABS,XDATA)
                                     77 ;--------------------------------------------------------
                                     78 ; external initialized ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area XISEG   (XDATA)
                                     81 	.area HOME    (CODE)
                                     82 	.area GSINIT0 (CODE)
                                     83 	.area GSINIT1 (CODE)
                                     84 	.area GSINIT2 (CODE)
                                     85 	.area GSINIT3 (CODE)
                                     86 	.area GSINIT4 (CODE)
                                     87 	.area GSINIT5 (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area CSEG    (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; global & static initialisations
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area GSINIT  (CODE)
                                     96 	.area GSFINAL (CODE)
                                     97 	.area GSINIT  (CODE)
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME    (CODE)
                                    102 	.area HOME    (CODE)
                                    103 ;--------------------------------------------------------
                                    104 ; code
                                    105 ;--------------------------------------------------------
                                    106 	.area CSEG    (CODE)
                                    107 ;------------------------------------------------------------
                                    108 ;Allocation info for local variables in function 'atof'
                                    109 ;------------------------------------------------------------
                                    110 ;sloc0                     Allocated with name '_atof_sloc0_1_0'
                                    111 ;sloc1                     Allocated with name '_atof_sloc1_1_0'
                                    112 ;s                         Allocated with name '_atof_s_1_35'
                                    113 ;value                     Allocated with name '_atof_value_1_36'
                                    114 ;fraction                  Allocated with name '_atof_fraction_1_36'
                                    115 ;iexp                      Allocated with name '_atof_iexp_1_36'
                                    116 ;------------------------------------------------------------
                                    117 ;	_atof.c:33: float atof(const char * s)
                                    118 ;	-----------------------------------------
                                    119 ;	 function atof
                                    120 ;	-----------------------------------------
      000000                        121 _atof:
                           000007   122 	ar7 = 0x07
                           000006   123 	ar6 = 0x06
                           000005   124 	ar5 = 0x05
                           000004   125 	ar4 = 0x04
                           000003   126 	ar3 = 0x03
                           000002   127 	ar2 = 0x02
                           000001   128 	ar1 = 0x01
                           000000   129 	ar0 = 0x00
      000000 AF F0            [24]  130 	mov	r7,b
      000002 AE 83            [24]  131 	mov	r6,dph
      000004 E5 82            [12]  132 	mov	a,dpl
      000006 90r00r00         [24]  133 	mov	dptr,#_atof_s_1_35
      000009 F0               [24]  134 	movx	@dptr,a
      00000A EE               [12]  135 	mov	a,r6
      00000B A3               [24]  136 	inc	dptr
      00000C F0               [24]  137 	movx	@dptr,a
      00000D EF               [12]  138 	mov	a,r7
      00000E A3               [24]  139 	inc	dptr
      00000F F0               [24]  140 	movx	@dptr,a
                                    141 ;	_atof.c:40: while (isspace(*s)) s++;
      000010 90r00r00         [24]  142 	mov	dptr,#_atof_s_1_35
      000013 E0               [24]  143 	movx	a,@dptr
      000014 FD               [12]  144 	mov	r5,a
      000015 A3               [24]  145 	inc	dptr
      000016 E0               [24]  146 	movx	a,@dptr
      000017 FE               [12]  147 	mov	r6,a
      000018 A3               [24]  148 	inc	dptr
      000019 E0               [24]  149 	movx	a,@dptr
      00001A FF               [12]  150 	mov	r7,a
      00001B                        151 00101$:
      00001B 8D 82            [24]  152 	mov	dpl,r5
      00001D 8E 83            [24]  153 	mov	dph,r6
      00001F 8F F0            [24]  154 	mov	b,r7
      000021 12r00r00         [24]  155 	lcall	__gptrget
      000024 FC               [12]  156 	mov	r4,a
      000025 33               [12]  157 	rlc	a
      000026 95 E0            [12]  158 	subb	a,acc
      000028 FB               [12]  159 	mov	r3,a
      000029 8C 82            [24]  160 	mov	dpl,r4
      00002B 8B 83            [24]  161 	mov	dph,r3
      00002D C0 07            [24]  162 	push	ar7
      00002F C0 06            [24]  163 	push	ar6
      000031 C0 05            [24]  164 	push	ar5
      000033 78r00            [12]  165 	mov	r0,#_isspace
      000035 79s00            [12]  166 	mov	r1,#(_isspace >> 8)
      000037 7As00            [12]  167 	mov	r2,#(_isspace >> 16)
      000039 12r00r00         [24]  168 	lcall	__sdcc_banked_call
      00003C E5 82            [12]  169 	mov	a,dpl
      00003E 85 83 F0         [24]  170 	mov	b,dph
      000041 D0 05            [24]  171 	pop	ar5
      000043 D0 06            [24]  172 	pop	ar6
      000045 D0 07            [24]  173 	pop	ar7
      000047 45 F0            [12]  174 	orl	a,b
      000049 60 12            [24]  175 	jz	00145$
      00004B 0D               [12]  176 	inc	r5
      00004C BD 00 01         [24]  177 	cjne	r5,#0x00,00177$
      00004F 0E               [12]  178 	inc	r6
      000050                        179 00177$:
      000050 90r00r00         [24]  180 	mov	dptr,#_atof_s_1_35
      000053 ED               [12]  181 	mov	a,r5
      000054 F0               [24]  182 	movx	@dptr,a
      000055 EE               [12]  183 	mov	a,r6
      000056 A3               [24]  184 	inc	dptr
      000057 F0               [24]  185 	movx	@dptr,a
      000058 EF               [12]  186 	mov	a,r7
      000059 A3               [24]  187 	inc	dptr
      00005A F0               [24]  188 	movx	@dptr,a
      00005B 80 BE            [24]  189 	sjmp	00101$
      00005D                        190 00145$:
      00005D 90r00r00         [24]  191 	mov	dptr,#_atof_s_1_35
      000060 ED               [12]  192 	mov	a,r5
      000061 F0               [24]  193 	movx	@dptr,a
      000062 EE               [12]  194 	mov	a,r6
      000063 A3               [24]  195 	inc	dptr
      000064 F0               [24]  196 	movx	@dptr,a
      000065 EF               [12]  197 	mov	a,r7
      000066 A3               [24]  198 	inc	dptr
      000067 F0               [24]  199 	movx	@dptr,a
                                    200 ;	_atof.c:43: if (*s == '-')
      000068 8D 82            [24]  201 	mov	dpl,r5
      00006A 8E 83            [24]  202 	mov	dph,r6
      00006C 8F F0            [24]  203 	mov	b,r7
      00006E 12r00r00         [24]  204 	lcall	__gptrget
      000071 FC               [12]  205 	mov	r4,a
      000072 BC 2D 12         [24]  206 	cjne	r4,#0x2D,00107$
                                    207 ;	_atof.c:45: sign=1;
      000075 D2*00            [12]  208 	setb	_atof_sign_1_36
                                    209 ;	_atof.c:46: s++;
      000077 90r00r00         [24]  210 	mov	dptr,#_atof_s_1_35
      00007A 74 01            [12]  211 	mov	a,#0x01
      00007C 2D               [12]  212 	add	a,r5
      00007D F0               [24]  213 	movx	@dptr,a
      00007E E4               [12]  214 	clr	a
      00007F 3E               [12]  215 	addc	a,r6
      000080 A3               [24]  216 	inc	dptr
      000081 F0               [24]  217 	movx	@dptr,a
      000082 EF               [12]  218 	mov	a,r7
      000083 A3               [24]  219 	inc	dptr
      000084 F0               [24]  220 	movx	@dptr,a
      000085 80 13            [24]  221 	sjmp	00108$
      000087                        222 00107$:
                                    223 ;	_atof.c:50: sign=0;
      000087 C2*00            [12]  224 	clr	_atof_sign_1_36
                                    225 ;	_atof.c:51: if (*s == '+') s++;
      000089 BC 2B 0E         [24]  226 	cjne	r4,#0x2B,00108$
      00008C 90r00r00         [24]  227 	mov	dptr,#_atof_s_1_35
      00008F 74 01            [12]  228 	mov	a,#0x01
      000091 2D               [12]  229 	add	a,r5
      000092 F0               [24]  230 	movx	@dptr,a
      000093 E4               [12]  231 	clr	a
      000094 3E               [12]  232 	addc	a,r6
      000095 A3               [24]  233 	inc	dptr
      000096 F0               [24]  234 	movx	@dptr,a
      000097 EF               [12]  235 	mov	a,r7
      000098 A3               [24]  236 	inc	dptr
      000099 F0               [24]  237 	movx	@dptr,a
      00009A                        238 00108$:
                                    239 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      00009A 90r00r03         [24]  240 	mov	dptr,#_atof_value_1_36
      00009D E4               [12]  241 	clr	a
      00009E F0               [24]  242 	movx	@dptr,a
      00009F A3               [24]  243 	inc	dptr
      0000A0 F0               [24]  244 	movx	@dptr,a
      0000A1 A3               [24]  245 	inc	dptr
      0000A2 F0               [24]  246 	movx	@dptr,a
      0000A3 A3               [24]  247 	inc	dptr
      0000A4 F0               [24]  248 	movx	@dptr,a
      0000A5 90r00r00         [24]  249 	mov	dptr,#_atof_s_1_35
      0000A8 E0               [24]  250 	movx	a,@dptr
      0000A9 FD               [12]  251 	mov	r5,a
      0000AA A3               [24]  252 	inc	dptr
      0000AB E0               [24]  253 	movx	a,@dptr
      0000AC FE               [12]  254 	mov	r6,a
      0000AD A3               [24]  255 	inc	dptr
      0000AE E0               [24]  256 	movx	a,@dptr
      0000AF FF               [12]  257 	mov	r7,a
      0000B0                        258 00124$:
      0000B0 8D 82            [24]  259 	mov	dpl,r5
      0000B2 8E 83            [24]  260 	mov	dph,r6
      0000B4 8F F0            [24]  261 	mov	b,r7
      0000B6 12r00r00         [24]  262 	lcall	__gptrget
      0000B9 FC               [12]  263 	mov	r4,a
      0000BA 33               [12]  264 	rlc	a
      0000BB 95 E0            [12]  265 	subb	a,acc
      0000BD FB               [12]  266 	mov	r3,a
      0000BE 8C 82            [24]  267 	mov	dpl,r4
      0000C0 8B 83            [24]  268 	mov	dph,r3
      0000C2 C0 07            [24]  269 	push	ar7
      0000C4 C0 06            [24]  270 	push	ar6
      0000C6 C0 05            [24]  271 	push	ar5
      0000C8 78r00            [12]  272 	mov	r0,#_isdigit
      0000CA 79s00            [12]  273 	mov	r1,#(_isdigit >> 8)
      0000CC 7As00            [12]  274 	mov	r2,#(_isdigit >> 16)
      0000CE 12r00r00         [24]  275 	lcall	__sdcc_banked_call
      0000D1 E5 82            [12]  276 	mov	a,dpl
      0000D3 85 83 F0         [24]  277 	mov	b,dph
      0000D6 D0 05            [24]  278 	pop	ar5
      0000D8 D0 06            [24]  279 	pop	ar6
      0000DA D0 07            [24]  280 	pop	ar7
      0000DC 45 F0            [12]  281 	orl	a,b
      0000DE 70 03            [24]  282 	jnz	00182$
      0000E0 02r01r92         [24]  283 	ljmp	00146$
      0000E3                        284 00182$:
                                    285 ;	_atof.c:57: value=10.0*value+(*s-'0');
      0000E3 C0 07            [24]  286 	push	ar7
      0000E5 C0 06            [24]  287 	push	ar6
      0000E7 C0 05            [24]  288 	push	ar5
      0000E9 90r00r03         [24]  289 	mov	dptr,#_atof_value_1_36
      0000EC E0               [24]  290 	movx	a,@dptr
      0000ED C0 E0            [24]  291 	push	acc
      0000EF A3               [24]  292 	inc	dptr
      0000F0 E0               [24]  293 	movx	a,@dptr
      0000F1 C0 E0            [24]  294 	push	acc
      0000F3 A3               [24]  295 	inc	dptr
      0000F4 E0               [24]  296 	movx	a,@dptr
      0000F5 C0 E0            [24]  297 	push	acc
      0000F7 A3               [24]  298 	inc	dptr
      0000F8 E0               [24]  299 	movx	a,@dptr
      0000F9 C0 E0            [24]  300 	push	acc
      0000FB 90 00 00         [24]  301 	mov	dptr,#0x0000
      0000FE 75 F0 20         [24]  302 	mov	b,#0x20
      000101 74 41            [12]  303 	mov	a,#0x41
      000103 12r00r00         [24]  304 	lcall	___fsmul
      000106 85 82*00         [24]  305 	mov	_atof_sloc0_1_0,dpl
      000109 85 83*01         [24]  306 	mov	(_atof_sloc0_1_0 + 1),dph
      00010C 85 F0*02         [24]  307 	mov	(_atof_sloc0_1_0 + 2),b
      00010F F5*03            [12]  308 	mov	(_atof_sloc0_1_0 + 3),a
      000111 E5 81            [12]  309 	mov	a,sp
      000113 24 FC            [12]  310 	add	a,#0xfc
      000115 F5 81            [12]  311 	mov	sp,a
      000117 D0 05            [24]  312 	pop	ar5
      000119 D0 06            [24]  313 	pop	ar6
      00011B D0 07            [24]  314 	pop	ar7
      00011D 8D 82            [24]  315 	mov	dpl,r5
      00011F 8E 83            [24]  316 	mov	dph,r6
      000121 8F F0            [24]  317 	mov	b,r7
      000123 12r00r00         [24]  318 	lcall	__gptrget
      000126 F8               [12]  319 	mov	r0,a
      000127 A3               [24]  320 	inc	dptr
      000128 AD 82            [24]  321 	mov	r5,dpl
      00012A AE 83            [24]  322 	mov	r6,dph
      00012C E8               [12]  323 	mov	a,r0
      00012D 33               [12]  324 	rlc	a
      00012E 95 E0            [12]  325 	subb	a,acc
      000130 FC               [12]  326 	mov	r4,a
      000131 E8               [12]  327 	mov	a,r0
      000132 24 D0            [12]  328 	add	a,#0xD0
      000134 F8               [12]  329 	mov	r0,a
      000135 EC               [12]  330 	mov	a,r4
      000136 34 FF            [12]  331 	addc	a,#0xFF
      000138 FC               [12]  332 	mov	r4,a
      000139 88 82            [24]  333 	mov	dpl,r0
      00013B 8C 83            [24]  334 	mov	dph,r4
      00013D C0 07            [24]  335 	push	ar7
      00013F C0 06            [24]  336 	push	ar6
      000141 C0 05            [24]  337 	push	ar5
      000143 12r00r00         [24]  338 	lcall	___sint2fs
      000146 A9 82            [24]  339 	mov	r1,dpl
      000148 AA 83            [24]  340 	mov	r2,dph
      00014A AB F0            [24]  341 	mov	r3,b
      00014C FC               [12]  342 	mov	r4,a
      00014D C0 01            [24]  343 	push	ar1
      00014F C0 02            [24]  344 	push	ar2
      000151 C0 03            [24]  345 	push	ar3
      000153 C0 04            [24]  346 	push	ar4
      000155 85*00 82         [24]  347 	mov	dpl,_atof_sloc0_1_0
      000158 85*01 83         [24]  348 	mov	dph,(_atof_sloc0_1_0 + 1)
      00015B 85*02 F0         [24]  349 	mov	b,(_atof_sloc0_1_0 + 2)
      00015E E5*03            [12]  350 	mov	a,(_atof_sloc0_1_0 + 3)
      000160 12r00r00         [24]  351 	lcall	___fsadd
      000163 A9 82            [24]  352 	mov	r1,dpl
      000165 AA 83            [24]  353 	mov	r2,dph
      000167 AB F0            [24]  354 	mov	r3,b
      000169 FC               [12]  355 	mov	r4,a
      00016A E5 81            [12]  356 	mov	a,sp
      00016C 24 FC            [12]  357 	add	a,#0xfc
      00016E F5 81            [12]  358 	mov	sp,a
      000170 D0 05            [24]  359 	pop	ar5
      000172 D0 06            [24]  360 	pop	ar6
      000174 D0 07            [24]  361 	pop	ar7
      000176 90r00r03         [24]  362 	mov	dptr,#_atof_value_1_36
      000179 E9               [12]  363 	mov	a,r1
      00017A F0               [24]  364 	movx	@dptr,a
      00017B EA               [12]  365 	mov	a,r2
      00017C A3               [24]  366 	inc	dptr
      00017D F0               [24]  367 	movx	@dptr,a
      00017E EB               [12]  368 	mov	a,r3
      00017F A3               [24]  369 	inc	dptr
      000180 F0               [24]  370 	movx	@dptr,a
      000181 EC               [12]  371 	mov	a,r4
      000182 A3               [24]  372 	inc	dptr
      000183 F0               [24]  373 	movx	@dptr,a
                                    374 ;	_atof.c:55: for (value=0.0; isdigit(*s); s++)
      000184 90r00r00         [24]  375 	mov	dptr,#_atof_s_1_35
      000187 ED               [12]  376 	mov	a,r5
      000188 F0               [24]  377 	movx	@dptr,a
      000189 EE               [12]  378 	mov	a,r6
      00018A A3               [24]  379 	inc	dptr
      00018B F0               [24]  380 	movx	@dptr,a
      00018C EF               [12]  381 	mov	a,r7
      00018D A3               [24]  382 	inc	dptr
      00018E F0               [24]  383 	movx	@dptr,a
      00018F 02r00rB0         [24]  384 	ljmp	00124$
      000192                        385 00146$:
      000192 90r00r00         [24]  386 	mov	dptr,#_atof_s_1_35
      000195 ED               [12]  387 	mov	a,r5
      000196 F0               [24]  388 	movx	@dptr,a
      000197 EE               [12]  389 	mov	a,r6
      000198 A3               [24]  390 	inc	dptr
      000199 F0               [24]  391 	movx	@dptr,a
      00019A EF               [12]  392 	mov	a,r7
      00019B A3               [24]  393 	inc	dptr
      00019C F0               [24]  394 	movx	@dptr,a
                                    395 ;	_atof.c:61: if (*s == '.')
      00019D 8D 82            [24]  396 	mov	dpl,r5
      00019F 8E 83            [24]  397 	mov	dph,r6
      0001A1 8F F0            [24]  398 	mov	b,r7
      0001A3 12r00r00         [24]  399 	lcall	__gptrget
      0001A6 FC               [12]  400 	mov	r4,a
      0001A7 BC 2E 02         [24]  401 	cjne	r4,#0x2E,00183$
      0001AA 80 03            [24]  402 	sjmp	00184$
      0001AC                        403 00183$:
      0001AC 02r02rF2         [24]  404 	ljmp	00112$
      0001AF                        405 00184$:
                                    406 ;	_atof.c:63: s++;
      0001AF 0D               [12]  407 	inc	r5
      0001B0 BD 00 01         [24]  408 	cjne	r5,#0x00,00185$
      0001B3 0E               [12]  409 	inc	r6
      0001B4                        410 00185$:
      0001B4 90r00r00         [24]  411 	mov	dptr,#_atof_s_1_35
      0001B7 ED               [12]  412 	mov	a,r5
      0001B8 F0               [24]  413 	movx	@dptr,a
      0001B9 EE               [12]  414 	mov	a,r6
      0001BA A3               [24]  415 	inc	dptr
      0001BB F0               [24]  416 	movx	@dptr,a
      0001BC EF               [12]  417 	mov	a,r7
      0001BD A3               [24]  418 	inc	dptr
      0001BE F0               [24]  419 	movx	@dptr,a
                                    420 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      0001BF 90r00r07         [24]  421 	mov	dptr,#_atof_fraction_1_36
      0001C2 74 CD            [12]  422 	mov	a,#0xCD
      0001C4 F0               [24]  423 	movx	@dptr,a
      0001C5 14               [12]  424 	dec	a
      0001C6 A3               [24]  425 	inc	dptr
      0001C7 F0               [24]  426 	movx	@dptr,a
      0001C8 A3               [24]  427 	inc	dptr
      0001C9 F0               [24]  428 	movx	@dptr,a
      0001CA 74 3D            [12]  429 	mov	a,#0x3D
      0001CC A3               [24]  430 	inc	dptr
      0001CD F0               [24]  431 	movx	@dptr,a
      0001CE                        432 00127$:
      0001CE 8D 82            [24]  433 	mov	dpl,r5
      0001D0 8E 83            [24]  434 	mov	dph,r6
      0001D2 8F F0            [24]  435 	mov	b,r7
      0001D4 12r00r00         [24]  436 	lcall	__gptrget
      0001D7 FC               [12]  437 	mov	r4,a
      0001D8 33               [12]  438 	rlc	a
      0001D9 95 E0            [12]  439 	subb	a,acc
      0001DB FB               [12]  440 	mov	r3,a
      0001DC 8C 82            [24]  441 	mov	dpl,r4
      0001DE 8B 83            [24]  442 	mov	dph,r3
      0001E0 C0 07            [24]  443 	push	ar7
      0001E2 C0 06            [24]  444 	push	ar6
      0001E4 C0 05            [24]  445 	push	ar5
      0001E6 78r00            [12]  446 	mov	r0,#_isdigit
      0001E8 79s00            [12]  447 	mov	r1,#(_isdigit >> 8)
      0001EA 7As00            [12]  448 	mov	r2,#(_isdigit >> 16)
      0001EC 12r00r00         [24]  449 	lcall	__sdcc_banked_call
      0001EF E5 82            [12]  450 	mov	a,dpl
      0001F1 85 83 F0         [24]  451 	mov	b,dph
      0001F4 D0 05            [24]  452 	pop	ar5
      0001F6 D0 06            [24]  453 	pop	ar6
      0001F8 D0 07            [24]  454 	pop	ar7
      0001FA 45 F0            [12]  455 	orl	a,b
      0001FC 70 03            [24]  456 	jnz	00186$
      0001FE 02r02rE7         [24]  457 	ljmp	00147$
      000201                        458 00186$:
                                    459 ;	_atof.c:66: value+=(*s-'0')*fraction;
      000201 8D 82            [24]  460 	mov	dpl,r5
      000203 8E 83            [24]  461 	mov	dph,r6
      000205 8F F0            [24]  462 	mov	b,r7
      000207 12r00r00         [24]  463 	lcall	__gptrget
      00020A FC               [12]  464 	mov	r4,a
      00020B A3               [24]  465 	inc	dptr
      00020C AD 82            [24]  466 	mov	r5,dpl
      00020E AE 83            [24]  467 	mov	r6,dph
      000210 EC               [12]  468 	mov	a,r4
      000211 33               [12]  469 	rlc	a
      000212 95 E0            [12]  470 	subb	a,acc
      000214 FB               [12]  471 	mov	r3,a
      000215 EC               [12]  472 	mov	a,r4
      000216 24 D0            [12]  473 	add	a,#0xD0
      000218 F5*00            [12]  474 	mov	_atof_sloc0_1_0,a
      00021A EB               [12]  475 	mov	a,r3
      00021B 34 FF            [12]  476 	addc	a,#0xFF
      00021D F5*01            [12]  477 	mov	(_atof_sloc0_1_0 + 1),a
      00021F 90r00r07         [24]  478 	mov	dptr,#_atof_fraction_1_36
      000222 E0               [24]  479 	movx	a,@dptr
      000223 F5*04            [12]  480 	mov	_atof_sloc1_1_0,a
      000225 A3               [24]  481 	inc	dptr
      000226 E0               [24]  482 	movx	a,@dptr
      000227 F5*05            [12]  483 	mov	(_atof_sloc1_1_0 + 1),a
      000229 A3               [24]  484 	inc	dptr
      00022A E0               [24]  485 	movx	a,@dptr
      00022B F5*06            [12]  486 	mov	(_atof_sloc1_1_0 + 2),a
      00022D A3               [24]  487 	inc	dptr
      00022E E0               [24]  488 	movx	a,@dptr
      00022F F5*07            [12]  489 	mov	(_atof_sloc1_1_0 + 3),a
      000231 85*00 82         [24]  490 	mov	dpl,_atof_sloc0_1_0
      000234 85*01 83         [24]  491 	mov	dph,(_atof_sloc0_1_0 + 1)
      000237 C0 07            [24]  492 	push	ar7
      000239 C0 06            [24]  493 	push	ar6
      00023B C0 05            [24]  494 	push	ar5
      00023D 12r00r00         [24]  495 	lcall	___sint2fs
      000240 A9 82            [24]  496 	mov	r1,dpl
      000242 AA 83            [24]  497 	mov	r2,dph
      000244 AB F0            [24]  498 	mov	r3,b
      000246 FC               [12]  499 	mov	r4,a
      000247 C0*04            [24]  500 	push	_atof_sloc1_1_0
      000249 C0*05            [24]  501 	push	(_atof_sloc1_1_0 + 1)
      00024B C0*06            [24]  502 	push	(_atof_sloc1_1_0 + 2)
      00024D C0*07            [24]  503 	push	(_atof_sloc1_1_0 + 3)
      00024F 89 82            [24]  504 	mov	dpl,r1
      000251 8A 83            [24]  505 	mov	dph,r2
      000253 8B F0            [24]  506 	mov	b,r3
      000255 EC               [12]  507 	mov	a,r4
      000256 12r00r00         [24]  508 	lcall	___fsmul
      000259 85 82*00         [24]  509 	mov	_atof_sloc0_1_0,dpl
      00025C 85 83*01         [24]  510 	mov	(_atof_sloc0_1_0 + 1),dph
      00025F 85 F0*02         [24]  511 	mov	(_atof_sloc0_1_0 + 2),b
      000262 F5*03            [12]  512 	mov	(_atof_sloc0_1_0 + 3),a
      000264 E5 81            [12]  513 	mov	a,sp
      000266 24 FC            [12]  514 	add	a,#0xfc
      000268 F5 81            [12]  515 	mov	sp,a
      00026A 90r00r03         [24]  516 	mov	dptr,#_atof_value_1_36
      00026D E0               [24]  517 	movx	a,@dptr
      00026E F8               [12]  518 	mov	r0,a
      00026F A3               [24]  519 	inc	dptr
      000270 E0               [24]  520 	movx	a,@dptr
      000271 FA               [12]  521 	mov	r2,a
      000272 A3               [24]  522 	inc	dptr
      000273 E0               [24]  523 	movx	a,@dptr
      000274 FB               [12]  524 	mov	r3,a
      000275 A3               [24]  525 	inc	dptr
      000276 E0               [24]  526 	movx	a,@dptr
      000277 FC               [12]  527 	mov	r4,a
      000278 C0*00            [24]  528 	push	_atof_sloc0_1_0
      00027A C0*01            [24]  529 	push	(_atof_sloc0_1_0 + 1)
      00027C C0*02            [24]  530 	push	(_atof_sloc0_1_0 + 2)
      00027E C0*03            [24]  531 	push	(_atof_sloc0_1_0 + 3)
      000280 88 82            [24]  532 	mov	dpl,r0
      000282 8A 83            [24]  533 	mov	dph,r2
      000284 8B F0            [24]  534 	mov	b,r3
      000286 EC               [12]  535 	mov	a,r4
      000287 12r00r00         [24]  536 	lcall	___fsadd
      00028A A9 82            [24]  537 	mov	r1,dpl
      00028C AA 83            [24]  538 	mov	r2,dph
      00028E AB F0            [24]  539 	mov	r3,b
      000290 FC               [12]  540 	mov	r4,a
      000291 E5 81            [12]  541 	mov	a,sp
      000293 24 FC            [12]  542 	add	a,#0xfc
      000295 F5 81            [12]  543 	mov	sp,a
      000297 90r00r03         [24]  544 	mov	dptr,#_atof_value_1_36
      00029A E9               [12]  545 	mov	a,r1
      00029B F0               [24]  546 	movx	@dptr,a
      00029C EA               [12]  547 	mov	a,r2
      00029D A3               [24]  548 	inc	dptr
      00029E F0               [24]  549 	movx	@dptr,a
      00029F EB               [12]  550 	mov	a,r3
      0002A0 A3               [24]  551 	inc	dptr
      0002A1 F0               [24]  552 	movx	@dptr,a
      0002A2 EC               [12]  553 	mov	a,r4
      0002A3 A3               [24]  554 	inc	dptr
      0002A4 F0               [24]  555 	movx	@dptr,a
                                    556 ;	_atof.c:67: fraction*=0.1;
      0002A5 C0*04            [24]  557 	push	_atof_sloc1_1_0
      0002A7 C0*05            [24]  558 	push	(_atof_sloc1_1_0 + 1)
      0002A9 C0*06            [24]  559 	push	(_atof_sloc1_1_0 + 2)
      0002AB C0*07            [24]  560 	push	(_atof_sloc1_1_0 + 3)
      0002AD 90 CC CD         [24]  561 	mov	dptr,#0xCCCD
      0002B0 75 F0 CC         [24]  562 	mov	b,#0xCC
      0002B3 74 3D            [12]  563 	mov	a,#0x3D
      0002B5 12r00r00         [24]  564 	lcall	___fsmul
      0002B8 A9 82            [24]  565 	mov	r1,dpl
      0002BA AA 83            [24]  566 	mov	r2,dph
      0002BC AB F0            [24]  567 	mov	r3,b
      0002BE FC               [12]  568 	mov	r4,a
      0002BF E5 81            [12]  569 	mov	a,sp
      0002C1 24 FC            [12]  570 	add	a,#0xfc
      0002C3 F5 81            [12]  571 	mov	sp,a
      0002C5 D0 05            [24]  572 	pop	ar5
      0002C7 D0 06            [24]  573 	pop	ar6
      0002C9 D0 07            [24]  574 	pop	ar7
      0002CB 90r00r07         [24]  575 	mov	dptr,#_atof_fraction_1_36
      0002CE E9               [12]  576 	mov	a,r1
      0002CF F0               [24]  577 	movx	@dptr,a
      0002D0 EA               [12]  578 	mov	a,r2
      0002D1 A3               [24]  579 	inc	dptr
      0002D2 F0               [24]  580 	movx	@dptr,a
      0002D3 EB               [12]  581 	mov	a,r3
      0002D4 A3               [24]  582 	inc	dptr
      0002D5 F0               [24]  583 	movx	@dptr,a
      0002D6 EC               [12]  584 	mov	a,r4
      0002D7 A3               [24]  585 	inc	dptr
      0002D8 F0               [24]  586 	movx	@dptr,a
                                    587 ;	_atof.c:64: for (fraction=0.1; isdigit(*s); s++)
      0002D9 90r00r00         [24]  588 	mov	dptr,#_atof_s_1_35
      0002DC ED               [12]  589 	mov	a,r5
      0002DD F0               [24]  590 	movx	@dptr,a
      0002DE EE               [12]  591 	mov	a,r6
      0002DF A3               [24]  592 	inc	dptr
      0002E0 F0               [24]  593 	movx	@dptr,a
      0002E1 EF               [12]  594 	mov	a,r7
      0002E2 A3               [24]  595 	inc	dptr
      0002E3 F0               [24]  596 	movx	@dptr,a
      0002E4 02r01rCE         [24]  597 	ljmp	00127$
      0002E7                        598 00147$:
      0002E7 90r00r00         [24]  599 	mov	dptr,#_atof_s_1_35
      0002EA ED               [12]  600 	mov	a,r5
      0002EB F0               [24]  601 	movx	@dptr,a
      0002EC EE               [12]  602 	mov	a,r6
      0002ED A3               [24]  603 	inc	dptr
      0002EE F0               [24]  604 	movx	@dptr,a
      0002EF EF               [12]  605 	mov	a,r7
      0002F0 A3               [24]  606 	inc	dptr
      0002F1 F0               [24]  607 	movx	@dptr,a
      0002F2                        608 00112$:
                                    609 ;	_atof.c:72: if (toupper(*s)=='E')
      0002F2 90r00r00         [24]  610 	mov	dptr,#_atof_s_1_35
      0002F5 E0               [24]  611 	movx	a,@dptr
      0002F6 FD               [12]  612 	mov	r5,a
      0002F7 A3               [24]  613 	inc	dptr
      0002F8 E0               [24]  614 	movx	a,@dptr
      0002F9 FE               [12]  615 	mov	r6,a
      0002FA A3               [24]  616 	inc	dptr
      0002FB E0               [24]  617 	movx	a,@dptr
      0002FC FF               [12]  618 	mov	r7,a
      0002FD 8D 82            [24]  619 	mov	dpl,r5
      0002FF 8E 83            [24]  620 	mov	dph,r6
      000301 8F F0            [24]  621 	mov	b,r7
      000303 12r00r00         [24]  622 	lcall	__gptrget
      000306 FC               [12]  623 	mov	r4,a
      000307 33               [12]  624 	rlc	a
      000308 95 E0            [12]  625 	subb	a,acc
      00030A FB               [12]  626 	mov	r3,a
      00030B 8C 82            [24]  627 	mov	dpl,r4
      00030D 8B 83            [24]  628 	mov	dph,r3
      00030F C0 07            [24]  629 	push	ar7
      000311 C0 06            [24]  630 	push	ar6
      000313 C0 05            [24]  631 	push	ar5
      000315 78r00            [12]  632 	mov	r0,#_toupper
      000317 79s00            [12]  633 	mov	r1,#(_toupper >> 8)
      000319 7As00            [12]  634 	mov	r2,#(_toupper >> 16)
      00031B 12r00r00         [24]  635 	lcall	__sdcc_banked_call
      00031E AB 82            [24]  636 	mov	r3,dpl
      000320 AC 83            [24]  637 	mov	r4,dph
      000322 D0 05            [24]  638 	pop	ar5
      000324 D0 06            [24]  639 	pop	ar6
      000326 D0 07            [24]  640 	pop	ar7
      000328 BB 45 05         [24]  641 	cjne	r3,#0x45,00187$
      00032B BC 00 02         [24]  642 	cjne	r4,#0x00,00187$
      00032E 80 03            [24]  643 	sjmp	00188$
      000330                        644 00187$:
      000330 02r03rFB         [24]  645 	ljmp	00120$
      000333                        646 00188$:
                                    647 ;	_atof.c:74: s++;
      000333 90r00r00         [24]  648 	mov	dptr,#_atof_s_1_35
      000336 74 01            [12]  649 	mov	a,#0x01
      000338 2D               [12]  650 	add	a,r5
      000339 F0               [24]  651 	movx	@dptr,a
      00033A E4               [12]  652 	clr	a
      00033B 3E               [12]  653 	addc	a,r6
      00033C A3               [24]  654 	inc	dptr
      00033D F0               [24]  655 	movx	@dptr,a
      00033E EF               [12]  656 	mov	a,r7
      00033F A3               [24]  657 	inc	dptr
      000340 F0               [24]  658 	movx	@dptr,a
                                    659 ;	_atof.c:75: iexp=(signed char)atoi(s);
      000341 90r00r00         [24]  660 	mov	dptr,#_atof_s_1_35
      000344 E0               [24]  661 	movx	a,@dptr
      000345 FD               [12]  662 	mov	r5,a
      000346 A3               [24]  663 	inc	dptr
      000347 E0               [24]  664 	movx	a,@dptr
      000348 FE               [12]  665 	mov	r6,a
      000349 A3               [24]  666 	inc	dptr
      00034A E0               [24]  667 	movx	a,@dptr
      00034B FF               [12]  668 	mov	r7,a
      00034C 8D 82            [24]  669 	mov	dpl,r5
      00034E 8E 83            [24]  670 	mov	dph,r6
      000350 8F F0            [24]  671 	mov	b,r7
      000352 78r00            [12]  672 	mov	r0,#_atoi
      000354 79s00            [12]  673 	mov	r1,#(_atoi >> 8)
      000356 7As00            [12]  674 	mov	r2,#(_atoi >> 16)
      000358 12r00r00         [24]  675 	lcall	__sdcc_banked_call
      00035B AE 82            [24]  676 	mov	r6,dpl
      00035D AF 83            [24]  677 	mov	r7,dph
      00035F 90r00r0B         [24]  678 	mov	dptr,#_atof_iexp_1_36
      000362 EE               [12]  679 	mov	a,r6
      000363 F0               [24]  680 	movx	@dptr,a
                                    681 ;	_atof.c:77: while(iexp!=0)
      000364                        682 00116$:
      000364 90r00r0B         [24]  683 	mov	dptr,#_atof_iexp_1_36
      000367 E0               [24]  684 	movx	a,@dptr
      000368 FF               [12]  685 	mov	r7,a
      000369 70 03            [24]  686 	jnz	00189$
      00036B 02r03rFB         [24]  687 	ljmp	00120$
      00036E                        688 00189$:
                                    689 ;	_atof.c:79: if(iexp<0)
      00036E EF               [12]  690 	mov	a,r7
      00036F 30 E7 44         [24]  691 	jnb	acc.7,00114$
                                    692 ;	_atof.c:81: value*=0.1;
      000372 C0 07            [24]  693 	push	ar7
      000374 90r00r03         [24]  694 	mov	dptr,#_atof_value_1_36
      000377 E0               [24]  695 	movx	a,@dptr
      000378 C0 E0            [24]  696 	push	acc
      00037A A3               [24]  697 	inc	dptr
      00037B E0               [24]  698 	movx	a,@dptr
      00037C C0 E0            [24]  699 	push	acc
      00037E A3               [24]  700 	inc	dptr
      00037F E0               [24]  701 	movx	a,@dptr
      000380 C0 E0            [24]  702 	push	acc
      000382 A3               [24]  703 	inc	dptr
      000383 E0               [24]  704 	movx	a,@dptr
      000384 C0 E0            [24]  705 	push	acc
      000386 90 CC CD         [24]  706 	mov	dptr,#0xCCCD
      000389 75 F0 CC         [24]  707 	mov	b,#0xCC
      00038C 74 3D            [12]  708 	mov	a,#0x3D
      00038E 12r00r00         [24]  709 	lcall	___fsmul
      000391 AB 82            [24]  710 	mov	r3,dpl
      000393 AC 83            [24]  711 	mov	r4,dph
      000395 AD F0            [24]  712 	mov	r5,b
      000397 FE               [12]  713 	mov	r6,a
      000398 E5 81            [12]  714 	mov	a,sp
      00039A 24 FC            [12]  715 	add	a,#0xfc
      00039C F5 81            [12]  716 	mov	sp,a
      00039E D0 07            [24]  717 	pop	ar7
      0003A0 90r00r03         [24]  718 	mov	dptr,#_atof_value_1_36
      0003A3 EB               [12]  719 	mov	a,r3
      0003A4 F0               [24]  720 	movx	@dptr,a
      0003A5 EC               [12]  721 	mov	a,r4
      0003A6 A3               [24]  722 	inc	dptr
      0003A7 F0               [24]  723 	movx	@dptr,a
      0003A8 ED               [12]  724 	mov	a,r5
      0003A9 A3               [24]  725 	inc	dptr
      0003AA F0               [24]  726 	movx	@dptr,a
      0003AB EE               [12]  727 	mov	a,r6
      0003AC A3               [24]  728 	inc	dptr
      0003AD F0               [24]  729 	movx	@dptr,a
                                    730 ;	_atof.c:82: iexp++;
      0003AE 90r00r0B         [24]  731 	mov	dptr,#_atof_iexp_1_36
      0003B1 EF               [12]  732 	mov	a,r7
      0003B2 04               [12]  733 	inc	a
      0003B3 F0               [24]  734 	movx	@dptr,a
      0003B4 80 AE            [24]  735 	sjmp	00116$
      0003B6                        736 00114$:
                                    737 ;	_atof.c:86: value*=10.0;
      0003B6 C0 07            [24]  738 	push	ar7
      0003B8 90r00r03         [24]  739 	mov	dptr,#_atof_value_1_36
      0003BB E0               [24]  740 	movx	a,@dptr
      0003BC C0 E0            [24]  741 	push	acc
      0003BE A3               [24]  742 	inc	dptr
      0003BF E0               [24]  743 	movx	a,@dptr
      0003C0 C0 E0            [24]  744 	push	acc
      0003C2 A3               [24]  745 	inc	dptr
      0003C3 E0               [24]  746 	movx	a,@dptr
      0003C4 C0 E0            [24]  747 	push	acc
      0003C6 A3               [24]  748 	inc	dptr
      0003C7 E0               [24]  749 	movx	a,@dptr
      0003C8 C0 E0            [24]  750 	push	acc
      0003CA 90 00 00         [24]  751 	mov	dptr,#0x0000
      0003CD 75 F0 20         [24]  752 	mov	b,#0x20
      0003D0 74 41            [12]  753 	mov	a,#0x41
      0003D2 12r00r00         [24]  754 	lcall	___fsmul
      0003D5 AB 82            [24]  755 	mov	r3,dpl
      0003D7 AC 83            [24]  756 	mov	r4,dph
      0003D9 AD F0            [24]  757 	mov	r5,b
      0003DB FE               [12]  758 	mov	r6,a
      0003DC E5 81            [12]  759 	mov	a,sp
      0003DE 24 FC            [12]  760 	add	a,#0xfc
      0003E0 F5 81            [12]  761 	mov	sp,a
      0003E2 D0 07            [24]  762 	pop	ar7
      0003E4 90r00r03         [24]  763 	mov	dptr,#_atof_value_1_36
      0003E7 EB               [12]  764 	mov	a,r3
      0003E8 F0               [24]  765 	movx	@dptr,a
      0003E9 EC               [12]  766 	mov	a,r4
      0003EA A3               [24]  767 	inc	dptr
      0003EB F0               [24]  768 	movx	@dptr,a
      0003EC ED               [12]  769 	mov	a,r5
      0003ED A3               [24]  770 	inc	dptr
      0003EE F0               [24]  771 	movx	@dptr,a
      0003EF EE               [12]  772 	mov	a,r6
      0003F0 A3               [24]  773 	inc	dptr
      0003F1 F0               [24]  774 	movx	@dptr,a
                                    775 ;	_atof.c:87: iexp--;
      0003F2 EF               [12]  776 	mov	a,r7
      0003F3 14               [12]  777 	dec	a
      0003F4 90r00r0B         [24]  778 	mov	dptr,#_atof_iexp_1_36
      0003F7 F0               [24]  779 	movx	@dptr,a
      0003F8 02r03r64         [24]  780 	ljmp	00116$
      0003FB                        781 00120$:
                                    782 ;	_atof.c:93: if(sign) value*=-1.0;
      0003FB 30*00 1E         [24]  783 	jnb	_atof_sign_1_36,00122$
      0003FE 90r00r03         [24]  784 	mov	dptr,#_atof_value_1_36
      000401 E0               [24]  785 	movx	a,@dptr
      000402 FC               [12]  786 	mov	r4,a
      000403 A3               [24]  787 	inc	dptr
      000404 E0               [24]  788 	movx	a,@dptr
      000405 FD               [12]  789 	mov	r5,a
      000406 A3               [24]  790 	inc	dptr
      000407 E0               [24]  791 	movx	a,@dptr
      000408 FE               [12]  792 	mov	r6,a
      000409 A3               [24]  793 	inc	dptr
      00040A E0               [24]  794 	movx	a,@dptr
      00040B FF               [12]  795 	mov	r7,a
      00040C 90r00r03         [24]  796 	mov	dptr,#_atof_value_1_36
      00040F EC               [12]  797 	mov	a,r4
      000410 F0               [24]  798 	movx	@dptr,a
      000411 ED               [12]  799 	mov	a,r5
      000412 A3               [24]  800 	inc	dptr
      000413 F0               [24]  801 	movx	@dptr,a
      000414 EE               [12]  802 	mov	a,r6
      000415 A3               [24]  803 	inc	dptr
      000416 F0               [24]  804 	movx	@dptr,a
      000417 EF               [12]  805 	mov	a,r7
      000418 B2 E7            [12]  806 	cpl	acc.7
      00041A A3               [24]  807 	inc	dptr
      00041B F0               [24]  808 	movx	@dptr,a
      00041C                        809 00122$:
                                    810 ;	_atof.c:94: return (value);
      00041C 90r00r03         [24]  811 	mov	dptr,#_atof_value_1_36
      00041F E0               [24]  812 	movx	a,@dptr
      000420 FC               [12]  813 	mov	r4,a
      000421 A3               [24]  814 	inc	dptr
      000422 E0               [24]  815 	movx	a,@dptr
      000423 FD               [12]  816 	mov	r5,a
      000424 A3               [24]  817 	inc	dptr
      000425 E0               [24]  818 	movx	a,@dptr
      000426 FE               [12]  819 	mov	r6,a
      000427 A3               [24]  820 	inc	dptr
      000428 E0               [24]  821 	movx	a,@dptr
      000429 FF               [12]  822 	mov	r7,a
      00042A 8C 82            [24]  823 	mov	dpl,r4
      00042C 8D 83            [24]  824 	mov	dph,r5
      00042E 8E F0            [24]  825 	mov	b,r6
      000430 02r00r00         [24]  826 	ljmp	__sdcc_banked_ret
                                    827 	.area CSEG    (CODE)
                                    828 	.area CONST   (CODE)
                                    829 	.area XINIT   (CODE)
                                    830 	.area CABS    (ABS,CODE)
