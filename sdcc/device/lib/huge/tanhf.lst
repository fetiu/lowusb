                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.1 #9092 (Oct 23 2022) (Mac OS X x86_64)
                                      4 ; This file was generated Sun Oct 23 01:38:20 2022
                                      5 ;--------------------------------------------------------
                                      6 	.module tanhf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _fabsf
                                     13 	.globl _expf
                                     14 	.globl _tanhf
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'tanhf'
                                     94 ;------------------------------------------------------------
                                     95 ;x                         Allocated to stack - _bp +5
                                     96 ;f                         Allocated to stack - _bp +9
                                     97 ;g                         Allocated to stack - _bp +13
                                     98 ;r                         Allocated to stack - _bp +17
                                     99 ;sloc0                     Allocated to stack - _bp +1
                                    100 ;------------------------------------------------------------
                                    101 ;	tanhf.c:50: float tanhf(float x) _FLOAT_FUNC_REENTRANT
                                    102 ;	-----------------------------------------
                                    103 ;	 function tanhf
                                    104 ;	-----------------------------------------
      000000                        105 _tanhf:
                           000007   106 	ar7 = 0x07
                           000006   107 	ar6 = 0x06
                           000005   108 	ar5 = 0x05
                           000004   109 	ar4 = 0x04
                           000003   110 	ar3 = 0x03
                           000002   111 	ar2 = 0x02
                           000001   112 	ar1 = 0x01
                           000000   113 	ar0 = 0x00
      000000 C0*00            [24]  114 	push	_bp
      000002 85 81*00         [24]  115 	mov	_bp,sp
      000005 C8               [12]  116 	xch	a,r0
      000006 E5 81            [12]  117 	mov	a,sp
      000008 24 14            [12]  118 	add	a,#0x14
      00000A F5 81            [12]  119 	mov	sp,a
      00000C E5*00            [12]  120 	mov	a,_bp
      00000E 24 05            [12]  121 	add	a,#0x05
      000010 C8               [12]  122 	xch	a,r0
      000011 A6 82            [24]  123 	mov	@r0,dpl
      000013 08               [12]  124 	inc	r0
      000014 A6 83            [24]  125 	mov	@r0,dph
      000016 08               [12]  126 	inc	r0
      000017 A6 F0            [24]  127 	mov	@r0,b
      000019 08               [12]  128 	inc	r0
      00001A F6               [12]  129 	mov	@r0,a
                                    130 ;	tanhf.c:54: f=fabsf(x);
      00001B E5*00            [12]  131 	mov	a,_bp
      00001D 24 05            [12]  132 	add	a,#0x05
      00001F F8               [12]  133 	mov	r0,a
      000020 86 82            [24]  134 	mov	dpl,@r0
      000022 08               [12]  135 	inc	r0
      000023 86 83            [24]  136 	mov	dph,@r0
      000025 08               [12]  137 	inc	r0
      000026 86 F0            [24]  138 	mov	b,@r0
      000028 08               [12]  139 	inc	r0
      000029 E6               [12]  140 	mov	a,@r0
      00002A 78r00            [12]  141 	mov	r0,#_fabsf
      00002C 79s00            [12]  142 	mov	r1,#(_fabsf >> 8)
      00002E 7As00            [12]  143 	mov	r2,#(_fabsf >> 16)
      000030 12r00r00         [24]  144 	lcall	__sdcc_banked_call
      000033 AF 82            [24]  145 	mov	r7,dpl
      000035 AE 83            [24]  146 	mov	r6,dph
      000037 AD F0            [24]  147 	mov	r5,b
      000039 FC               [12]  148 	mov	r4,a
      00003A E5*00            [12]  149 	mov	a,_bp
      00003C 24 09            [12]  150 	add	a,#0x09
      00003E F8               [12]  151 	mov	r0,a
      00003F A6 07            [24]  152 	mov	@r0,ar7
      000041 08               [12]  153 	inc	r0
      000042 A6 06            [24]  154 	mov	@r0,ar6
      000044 08               [12]  155 	inc	r0
      000045 A6 05            [24]  156 	mov	@r0,ar5
      000047 08               [12]  157 	inc	r0
      000048 A6 04            [24]  158 	mov	@r0,ar4
                                    159 ;	tanhf.c:55: if(f>SBIG) r=1.0;
      00004A 74 B0            [12]  160 	mov	a,#0xB0
      00004C C0 E0            [24]  161 	push	acc
      00004E 74 2C            [12]  162 	mov	a,#0x2C
      000050 C0 E0            [24]  163 	push	acc
      000052 74 10            [12]  164 	mov	a,#0x10
      000054 C0 E0            [24]  165 	push	acc
      000056 74 41            [12]  166 	mov	a,#0x41
      000058 C0 E0            [24]  167 	push	acc
      00005A E5*00            [12]  168 	mov	a,_bp
      00005C 24 09            [12]  169 	add	a,#0x09
      00005E F8               [12]  170 	mov	r0,a
      00005F 86 82            [24]  171 	mov	dpl,@r0
      000061 08               [12]  172 	inc	r0
      000062 86 83            [24]  173 	mov	dph,@r0
      000064 08               [12]  174 	inc	r0
      000065 86 F0            [24]  175 	mov	b,@r0
      000067 08               [12]  176 	inc	r0
      000068 E6               [12]  177 	mov	a,@r0
      000069 12r00r00         [24]  178 	lcall	___fsgt
      00006C AD 82            [24]  179 	mov	r5,dpl
      00006E E5 81            [12]  180 	mov	a,sp
      000070 24 FC            [12]  181 	add	a,#0xfc
      000072 F5 81            [12]  182 	mov	sp,a
      000074 ED               [12]  183 	mov	a,r5
      000075 60 12            [24]  184 	jz	00108$
      000077 E5*00            [12]  185 	mov	a,_bp
      000079 24 11            [12]  186 	add	a,#0x11
      00007B F8               [12]  187 	mov	r0,a
      00007C E4               [12]  188 	clr	a
      00007D F6               [12]  189 	mov	@r0,a
      00007E 08               [12]  190 	inc	r0
      00007F F6               [12]  191 	mov	@r0,a
      000080 08               [12]  192 	inc	r0
      000081 76 80            [12]  193 	mov	@r0,#0x80
      000083 08               [12]  194 	inc	r0
      000084 76 3F            [12]  195 	mov	@r0,#0x3F
      000086 02r03r7B         [24]  196 	ljmp	00109$
      000089                        197 00108$:
                                    198 ;	tanhf.c:56: else if(f>K1)
      000089 74 54            [12]  199 	mov	a,#0x54
      00008B C0 E0            [24]  200 	push	acc
      00008D 74 9F            [12]  201 	mov	a,#0x9F
      00008F C0 E0            [24]  202 	push	acc
      000091 74 0C            [12]  203 	mov	a,#0x0C
      000093 C0 E0            [24]  204 	push	acc
      000095 74 3F            [12]  205 	mov	a,#0x3F
      000097 C0 E0            [24]  206 	push	acc
      000099 E5*00            [12]  207 	mov	a,_bp
      00009B 24 09            [12]  208 	add	a,#0x09
      00009D F8               [12]  209 	mov	r0,a
      00009E 86 82            [24]  210 	mov	dpl,@r0
      0000A0 08               [12]  211 	inc	r0
      0000A1 86 83            [24]  212 	mov	dph,@r0
      0000A3 08               [12]  213 	inc	r0
      0000A4 86 F0            [24]  214 	mov	b,@r0
      0000A6 08               [12]  215 	inc	r0
      0000A7 E6               [12]  216 	mov	a,@r0
      0000A8 12r00r00         [24]  217 	lcall	___fsgt
      0000AB AD 82            [24]  218 	mov	r5,dpl
      0000AD E5 81            [12]  219 	mov	a,sp
      0000AF 24 FC            [12]  220 	add	a,#0xfc
      0000B1 F5 81            [12]  221 	mov	sp,a
      0000B3 ED               [12]  222 	mov	a,r5
      0000B4 70 03            [24]  223 	jnz	00127$
      0000B6 02r01rBD         [24]  224 	ljmp	00105$
      0000B9                        225 00127$:
                                    226 ;	tanhf.c:58: r=0.5-1.0/(expf(f+f)+1.0);
      0000B9 E5*00            [12]  227 	mov	a,_bp
      0000BB 24 09            [12]  228 	add	a,#0x09
      0000BD F8               [12]  229 	mov	r0,a
      0000BE E6               [12]  230 	mov	a,@r0
      0000BF C0 E0            [24]  231 	push	acc
      0000C1 08               [12]  232 	inc	r0
      0000C2 E6               [12]  233 	mov	a,@r0
      0000C3 C0 E0            [24]  234 	push	acc
      0000C5 08               [12]  235 	inc	r0
      0000C6 E6               [12]  236 	mov	a,@r0
      0000C7 C0 E0            [24]  237 	push	acc
      0000C9 08               [12]  238 	inc	r0
      0000CA E6               [12]  239 	mov	a,@r0
      0000CB C0 E0            [24]  240 	push	acc
      0000CD E5*00            [12]  241 	mov	a,_bp
      0000CF 24 09            [12]  242 	add	a,#0x09
      0000D1 F8               [12]  243 	mov	r0,a
      0000D2 86 82            [24]  244 	mov	dpl,@r0
      0000D4 08               [12]  245 	inc	r0
      0000D5 86 83            [24]  246 	mov	dph,@r0
      0000D7 08               [12]  247 	inc	r0
      0000D8 86 F0            [24]  248 	mov	b,@r0
      0000DA 08               [12]  249 	inc	r0
      0000DB E6               [12]  250 	mov	a,@r0
      0000DC 12r00r00         [24]  251 	lcall	___fsadd
      0000DF AF 82            [24]  252 	mov	r7,dpl
      0000E1 AE 83            [24]  253 	mov	r6,dph
      0000E3 AD F0            [24]  254 	mov	r5,b
      0000E5 FC               [12]  255 	mov	r4,a
      0000E6 E5 81            [12]  256 	mov	a,sp
      0000E8 24 FC            [12]  257 	add	a,#0xfc
      0000EA F5 81            [12]  258 	mov	sp,a
      0000EC 8F 82            [24]  259 	mov	dpl,r7
      0000EE 8E 83            [24]  260 	mov	dph,r6
      0000F0 8D F0            [24]  261 	mov	b,r5
      0000F2 EC               [12]  262 	mov	a,r4
      0000F3 78r00            [12]  263 	mov	r0,#_expf
      0000F5 79s00            [12]  264 	mov	r1,#(_expf >> 8)
      0000F7 7As00            [12]  265 	mov	r2,#(_expf >> 16)
      0000F9 12r00r00         [24]  266 	lcall	__sdcc_banked_call
      0000FC AF 82            [24]  267 	mov	r7,dpl
      0000FE AE 83            [24]  268 	mov	r6,dph
      000100 AD F0            [24]  269 	mov	r5,b
      000102 FC               [12]  270 	mov	r4,a
      000103 E4               [12]  271 	clr	a
      000104 C0 E0            [24]  272 	push	acc
      000106 C0 E0            [24]  273 	push	acc
      000108 74 80            [12]  274 	mov	a,#0x80
      00010A C0 E0            [24]  275 	push	acc
      00010C 74 3F            [12]  276 	mov	a,#0x3F
      00010E C0 E0            [24]  277 	push	acc
      000110 8F 82            [24]  278 	mov	dpl,r7
      000112 8E 83            [24]  279 	mov	dph,r6
      000114 8D F0            [24]  280 	mov	b,r5
      000116 EC               [12]  281 	mov	a,r4
      000117 12r00r00         [24]  282 	lcall	___fsadd
      00011A AF 82            [24]  283 	mov	r7,dpl
      00011C AE 83            [24]  284 	mov	r6,dph
      00011E AD F0            [24]  285 	mov	r5,b
      000120 FC               [12]  286 	mov	r4,a
      000121 E5 81            [12]  287 	mov	a,sp
      000123 24 FC            [12]  288 	add	a,#0xfc
      000125 F5 81            [12]  289 	mov	sp,a
      000127 C0 07            [24]  290 	push	ar7
      000129 C0 06            [24]  291 	push	ar6
      00012B C0 05            [24]  292 	push	ar5
      00012D C0 04            [24]  293 	push	ar4
      00012F 90 00 00         [24]  294 	mov	dptr,#0x0000
      000132 75 F0 80         [24]  295 	mov	b,#0x80
      000135 74 3F            [12]  296 	mov	a,#0x3F
      000137 12r00r00         [24]  297 	lcall	___fsdiv
      00013A AF 82            [24]  298 	mov	r7,dpl
      00013C AE 83            [24]  299 	mov	r6,dph
      00013E AD F0            [24]  300 	mov	r5,b
      000140 FC               [12]  301 	mov	r4,a
      000141 E5 81            [12]  302 	mov	a,sp
      000143 24 FC            [12]  303 	add	a,#0xfc
      000145 F5 81            [12]  304 	mov	sp,a
      000147 C0 07            [24]  305 	push	ar7
      000149 C0 06            [24]  306 	push	ar6
      00014B C0 05            [24]  307 	push	ar5
      00014D C0 04            [24]  308 	push	ar4
      00014F 90 00 00         [24]  309 	mov	dptr,#(0x00&0x00ff)
      000152 E4               [12]  310 	clr	a
      000153 F5 F0            [12]  311 	mov	b,a
      000155 74 3F            [12]  312 	mov	a,#0x3F
      000157 12r00r00         [24]  313 	lcall	___fssub
      00015A AF 82            [24]  314 	mov	r7,dpl
      00015C AE 83            [24]  315 	mov	r6,dph
      00015E AD F0            [24]  316 	mov	r5,b
      000160 FC               [12]  317 	mov	r4,a
      000161 E5 81            [12]  318 	mov	a,sp
      000163 24 FC            [12]  319 	add	a,#0xfc
      000165 F5 81            [12]  320 	mov	sp,a
      000167 E5*00            [12]  321 	mov	a,_bp
      000169 24 11            [12]  322 	add	a,#0x11
      00016B F8               [12]  323 	mov	r0,a
      00016C A6 07            [24]  324 	mov	@r0,ar7
      00016E 08               [12]  325 	inc	r0
      00016F A6 06            [24]  326 	mov	@r0,ar6
      000171 08               [12]  327 	inc	r0
      000172 A6 05            [24]  328 	mov	@r0,ar5
      000174 08               [12]  329 	inc	r0
      000175 A6 04            [24]  330 	mov	@r0,ar4
                                    331 ;	tanhf.c:59: r+=r;
      000177 E5*00            [12]  332 	mov	a,_bp
      000179 24 11            [12]  333 	add	a,#0x11
      00017B F8               [12]  334 	mov	r0,a
      00017C E6               [12]  335 	mov	a,@r0
      00017D C0 E0            [24]  336 	push	acc
      00017F 08               [12]  337 	inc	r0
      000180 E6               [12]  338 	mov	a,@r0
      000181 C0 E0            [24]  339 	push	acc
      000183 08               [12]  340 	inc	r0
      000184 E6               [12]  341 	mov	a,@r0
      000185 C0 E0            [24]  342 	push	acc
      000187 08               [12]  343 	inc	r0
      000188 E6               [12]  344 	mov	a,@r0
      000189 C0 E0            [24]  345 	push	acc
      00018B E5*00            [12]  346 	mov	a,_bp
      00018D 24 11            [12]  347 	add	a,#0x11
      00018F F8               [12]  348 	mov	r0,a
      000190 86 82            [24]  349 	mov	dpl,@r0
      000192 08               [12]  350 	inc	r0
      000193 86 83            [24]  351 	mov	dph,@r0
      000195 08               [12]  352 	inc	r0
      000196 86 F0            [24]  353 	mov	b,@r0
      000198 08               [12]  354 	inc	r0
      000199 E6               [12]  355 	mov	a,@r0
      00019A 12r00r00         [24]  356 	lcall	___fsadd
      00019D AF 82            [24]  357 	mov	r7,dpl
      00019F AE 83            [24]  358 	mov	r6,dph
      0001A1 AD F0            [24]  359 	mov	r5,b
      0001A3 FC               [12]  360 	mov	r4,a
      0001A4 E5 81            [12]  361 	mov	a,sp
      0001A6 24 FC            [12]  362 	add	a,#0xfc
      0001A8 F5 81            [12]  363 	mov	sp,a
      0001AA E5*00            [12]  364 	mov	a,_bp
      0001AC 24 11            [12]  365 	add	a,#0x11
      0001AE F8               [12]  366 	mov	r0,a
      0001AF A6 07            [24]  367 	mov	@r0,ar7
      0001B1 08               [12]  368 	inc	r0
      0001B2 A6 06            [24]  369 	mov	@r0,ar6
      0001B4 08               [12]  370 	inc	r0
      0001B5 A6 05            [24]  371 	mov	@r0,ar5
      0001B7 08               [12]  372 	inc	r0
      0001B8 A6 04            [24]  373 	mov	@r0,ar4
      0001BA 02r03r7B         [24]  374 	ljmp	00109$
      0001BD                        375 00105$:
                                    376 ;	tanhf.c:61: else if(f<EPS) r=f;
      0001BD E4               [12]  377 	clr	a
      0001BE C0 E0            [24]  378 	push	acc
      0001C0 C0 E0            [24]  379 	push	acc
      0001C2 74 80            [12]  380 	mov	a,#0x80
      0001C4 C0 E0            [24]  381 	push	acc
      0001C6 74 39            [12]  382 	mov	a,#0x39
      0001C8 C0 E0            [24]  383 	push	acc
      0001CA E5*00            [12]  384 	mov	a,_bp
      0001CC 24 09            [12]  385 	add	a,#0x09
      0001CE F8               [12]  386 	mov	r0,a
      0001CF 86 82            [24]  387 	mov	dpl,@r0
      0001D1 08               [12]  388 	inc	r0
      0001D2 86 83            [24]  389 	mov	dph,@r0
      0001D4 08               [12]  390 	inc	r0
      0001D5 86 F0            [24]  391 	mov	b,@r0
      0001D7 08               [12]  392 	inc	r0
      0001D8 E6               [12]  393 	mov	a,@r0
      0001D9 12r00r00         [24]  394 	lcall	___fslt
      0001DC AD 82            [24]  395 	mov	r5,dpl
      0001DE E5 81            [12]  396 	mov	a,sp
      0001E0 24 FC            [12]  397 	add	a,#0xfc
      0001E2 F5 81            [12]  398 	mov	sp,a
      0001E4 ED               [12]  399 	mov	a,r5
      0001E5 60 1B            [24]  400 	jz	00102$
      0001E7 E5*00            [12]  401 	mov	a,_bp
      0001E9 24 09            [12]  402 	add	a,#0x09
      0001EB F8               [12]  403 	mov	r0,a
      0001EC E5*00            [12]  404 	mov	a,_bp
      0001EE 24 11            [12]  405 	add	a,#0x11
      0001F0 F9               [12]  406 	mov	r1,a
      0001F1 E6               [12]  407 	mov	a,@r0
      0001F2 F7               [12]  408 	mov	@r1,a
      0001F3 08               [12]  409 	inc	r0
      0001F4 09               [12]  410 	inc	r1
      0001F5 E6               [12]  411 	mov	a,@r0
      0001F6 F7               [12]  412 	mov	@r1,a
      0001F7 08               [12]  413 	inc	r0
      0001F8 09               [12]  414 	inc	r1
      0001F9 E6               [12]  415 	mov	a,@r0
      0001FA F7               [12]  416 	mov	@r1,a
      0001FB 08               [12]  417 	inc	r0
      0001FC 09               [12]  418 	inc	r1
      0001FD E6               [12]  419 	mov	a,@r0
      0001FE F7               [12]  420 	mov	@r1,a
      0001FF 02r03r7B         [24]  421 	ljmp	00109$
      000202                        422 00102$:
                                    423 ;	tanhf.c:64: g=f*f;
      000202 E5*00            [12]  424 	mov	a,_bp
      000204 24 09            [12]  425 	add	a,#0x09
      000206 F8               [12]  426 	mov	r0,a
      000207 E6               [12]  427 	mov	a,@r0
      000208 C0 E0            [24]  428 	push	acc
      00020A 08               [12]  429 	inc	r0
      00020B E6               [12]  430 	mov	a,@r0
      00020C C0 E0            [24]  431 	push	acc
      00020E 08               [12]  432 	inc	r0
      00020F E6               [12]  433 	mov	a,@r0
      000210 C0 E0            [24]  434 	push	acc
      000212 08               [12]  435 	inc	r0
      000213 E6               [12]  436 	mov	a,@r0
      000214 C0 E0            [24]  437 	push	acc
      000216 E5*00            [12]  438 	mov	a,_bp
      000218 24 09            [12]  439 	add	a,#0x09
      00021A F8               [12]  440 	mov	r0,a
      00021B 86 82            [24]  441 	mov	dpl,@r0
      00021D 08               [12]  442 	inc	r0
      00021E 86 83            [24]  443 	mov	dph,@r0
      000220 08               [12]  444 	inc	r0
      000221 86 F0            [24]  445 	mov	b,@r0
      000223 08               [12]  446 	inc	r0
      000224 E6               [12]  447 	mov	a,@r0
      000225 12r00r00         [24]  448 	lcall	___fsmul
      000228 AF 82            [24]  449 	mov	r7,dpl
      00022A AE 83            [24]  450 	mov	r6,dph
      00022C AD F0            [24]  451 	mov	r5,b
      00022E FC               [12]  452 	mov	r4,a
      00022F E5 81            [12]  453 	mov	a,sp
      000231 24 FC            [12]  454 	add	a,#0xfc
      000233 F5 81            [12]  455 	mov	sp,a
      000235 E5*00            [12]  456 	mov	a,_bp
      000237 24 0D            [12]  457 	add	a,#0x0d
      000239 F8               [12]  458 	mov	r0,a
      00023A A6 07            [24]  459 	mov	@r0,ar7
      00023C 08               [12]  460 	inc	r0
      00023D A6 06            [24]  461 	mov	@r0,ar6
      00023F 08               [12]  462 	inc	r0
      000240 A6 05            [24]  463 	mov	@r0,ar5
      000242 08               [12]  464 	inc	r0
      000243 A6 04            [24]  465 	mov	@r0,ar4
                                    466 ;	tanhf.c:65: r=f+f*(P(g)/Q(g));
      000245 E5*00            [12]  467 	mov	a,_bp
      000247 24 0D            [12]  468 	add	a,#0x0d
      000249 F8               [12]  469 	mov	r0,a
      00024A E6               [12]  470 	mov	a,@r0
      00024B C0 E0            [24]  471 	push	acc
      00024D 08               [12]  472 	inc	r0
      00024E E6               [12]  473 	mov	a,@r0
      00024F C0 E0            [24]  474 	push	acc
      000251 08               [12]  475 	inc	r0
      000252 E6               [12]  476 	mov	a,@r0
      000253 C0 E0            [24]  477 	push	acc
      000255 08               [12]  478 	inc	r0
      000256 E6               [12]  479 	mov	a,@r0
      000257 C0 E0            [24]  480 	push	acc
      000259 90 11 B2         [24]  481 	mov	dptr,#0x11B2
      00025C 75 F0 7B         [24]  482 	mov	b,#0x7B
      00025F 74 BB            [12]  483 	mov	a,#0xBB
      000261 12r00r00         [24]  484 	lcall	___fsmul
      000264 AC 82            [24]  485 	mov	r4,dpl
      000266 AD 83            [24]  486 	mov	r5,dph
      000268 AE F0            [24]  487 	mov	r6,b
      00026A FF               [12]  488 	mov	r7,a
      00026B E5 81            [12]  489 	mov	a,sp
      00026D 24 FC            [12]  490 	add	a,#0xfc
      00026F F5 81            [12]  491 	mov	sp,a
      000271 74 C6            [12]  492 	mov	a,#0xC6
      000273 C0 E0            [24]  493 	push	acc
      000275 74 E2            [12]  494 	mov	a,#0xE2
      000277 C0 E0            [24]  495 	push	acc
      000279 74 52            [12]  496 	mov	a,#0x52
      00027B C0 E0            [24]  497 	push	acc
      00027D 74 BF            [12]  498 	mov	a,#0xBF
      00027F C0 E0            [24]  499 	push	acc
      000281 8C 82            [24]  500 	mov	dpl,r4
      000283 8D 83            [24]  501 	mov	dph,r5
      000285 8E F0            [24]  502 	mov	b,r6
      000287 EF               [12]  503 	mov	a,r7
      000288 12r00r00         [24]  504 	lcall	___fsadd
      00028B AC 82            [24]  505 	mov	r4,dpl
      00028D AD 83            [24]  506 	mov	r5,dph
      00028F AE F0            [24]  507 	mov	r6,b
      000291 FF               [12]  508 	mov	r7,a
      000292 E5 81            [12]  509 	mov	a,sp
      000294 24 FC            [12]  510 	add	a,#0xfc
      000296 F5 81            [12]  511 	mov	sp,a
      000298 E5*00            [12]  512 	mov	a,_bp
      00029A 24 0D            [12]  513 	add	a,#0x0d
      00029C F8               [12]  514 	mov	r0,a
      00029D E6               [12]  515 	mov	a,@r0
      00029E C0 E0            [24]  516 	push	acc
      0002A0 08               [12]  517 	inc	r0
      0002A1 E6               [12]  518 	mov	a,@r0
      0002A2 C0 E0            [24]  519 	push	acc
      0002A4 08               [12]  520 	inc	r0
      0002A5 E6               [12]  521 	mov	a,@r0
      0002A6 C0 E0            [24]  522 	push	acc
      0002A8 08               [12]  523 	inc	r0
      0002A9 E6               [12]  524 	mov	a,@r0
      0002AA C0 E0            [24]  525 	push	acc
      0002AC 8C 82            [24]  526 	mov	dpl,r4
      0002AE 8D 83            [24]  527 	mov	dph,r5
      0002B0 8E F0            [24]  528 	mov	b,r6
      0002B2 EF               [12]  529 	mov	a,r7
      0002B3 12r00r00         [24]  530 	lcall	___fsmul
      0002B6 A8*00            [24]  531 	mov	r0,_bp
      0002B8 08               [12]  532 	inc	r0
      0002B9 A6 82            [24]  533 	mov	@r0,dpl
      0002BB 08               [12]  534 	inc	r0
      0002BC A6 83            [24]  535 	mov	@r0,dph
      0002BE 08               [12]  536 	inc	r0
      0002BF A6 F0            [24]  537 	mov	@r0,b
      0002C1 08               [12]  538 	inc	r0
      0002C2 F6               [12]  539 	mov	@r0,a
      0002C3 E5 81            [12]  540 	mov	a,sp
      0002C5 24 FC            [12]  541 	add	a,#0xfc
      0002C7 F5 81            [12]  542 	mov	sp,a
      0002C9 74 1A            [12]  543 	mov	a,#0x1A
      0002CB C0 E0            [24]  544 	push	acc
      0002CD 74 2A            [12]  545 	mov	a,#0x2A
      0002CF C0 E0            [24]  546 	push	acc
      0002D1 74 1E            [12]  547 	mov	a,#0x1E
      0002D3 C0 E0            [24]  548 	push	acc
      0002D5 74 40            [12]  549 	mov	a,#0x40
      0002D7 C0 E0            [24]  550 	push	acc
      0002D9 E5*00            [12]  551 	mov	a,_bp
      0002DB 24 0D            [12]  552 	add	a,#0x0d
      0002DD F8               [12]  553 	mov	r0,a
      0002DE 86 82            [24]  554 	mov	dpl,@r0
      0002E0 08               [12]  555 	inc	r0
      0002E1 86 83            [24]  556 	mov	dph,@r0
      0002E3 08               [12]  557 	inc	r0
      0002E4 86 F0            [24]  558 	mov	b,@r0
      0002E6 08               [12]  559 	inc	r0
      0002E7 E6               [12]  560 	mov	a,@r0
      0002E8 12r00r00         [24]  561 	lcall	___fsadd
      0002EB AA 82            [24]  562 	mov	r2,dpl
      0002ED AB 83            [24]  563 	mov	r3,dph
      0002EF AE F0            [24]  564 	mov	r6,b
      0002F1 FF               [12]  565 	mov	r7,a
      0002F2 E5 81            [12]  566 	mov	a,sp
      0002F4 24 FC            [12]  567 	add	a,#0xfc
      0002F6 F5 81            [12]  568 	mov	sp,a
      0002F8 C0 02            [24]  569 	push	ar2
      0002FA C0 03            [24]  570 	push	ar3
      0002FC C0 06            [24]  571 	push	ar6
      0002FE C0 07            [24]  572 	push	ar7
      000300 A8*00            [24]  573 	mov	r0,_bp
      000302 08               [12]  574 	inc	r0
      000303 86 82            [24]  575 	mov	dpl,@r0
      000305 08               [12]  576 	inc	r0
      000306 86 83            [24]  577 	mov	dph,@r0
      000308 08               [12]  578 	inc	r0
      000309 86 F0            [24]  579 	mov	b,@r0
      00030B 08               [12]  580 	inc	r0
      00030C E6               [12]  581 	mov	a,@r0
      00030D 12r00r00         [24]  582 	lcall	___fsdiv
      000310 AC 82            [24]  583 	mov	r4,dpl
      000312 AD 83            [24]  584 	mov	r5,dph
      000314 AE F0            [24]  585 	mov	r6,b
      000316 FF               [12]  586 	mov	r7,a
      000317 E5 81            [12]  587 	mov	a,sp
      000319 24 FC            [12]  588 	add	a,#0xfc
      00031B F5 81            [12]  589 	mov	sp,a
      00031D C0 04            [24]  590 	push	ar4
      00031F C0 05            [24]  591 	push	ar5
      000321 C0 06            [24]  592 	push	ar6
      000323 C0 07            [24]  593 	push	ar7
      000325 E5*00            [12]  594 	mov	a,_bp
      000327 24 09            [12]  595 	add	a,#0x09
      000329 F8               [12]  596 	mov	r0,a
      00032A 86 82            [24]  597 	mov	dpl,@r0
      00032C 08               [12]  598 	inc	r0
      00032D 86 83            [24]  599 	mov	dph,@r0
      00032F 08               [12]  600 	inc	r0
      000330 86 F0            [24]  601 	mov	b,@r0
      000332 08               [12]  602 	inc	r0
      000333 E6               [12]  603 	mov	a,@r0
      000334 12r00r00         [24]  604 	lcall	___fsmul
      000337 AC 82            [24]  605 	mov	r4,dpl
      000339 AD 83            [24]  606 	mov	r5,dph
      00033B AE F0            [24]  607 	mov	r6,b
      00033D FF               [12]  608 	mov	r7,a
      00033E E5 81            [12]  609 	mov	a,sp
      000340 24 FC            [12]  610 	add	a,#0xfc
      000342 F5 81            [12]  611 	mov	sp,a
      000344 C0 04            [24]  612 	push	ar4
      000346 C0 05            [24]  613 	push	ar5
      000348 C0 06            [24]  614 	push	ar6
      00034A C0 07            [24]  615 	push	ar7
      00034C E5*00            [12]  616 	mov	a,_bp
      00034E 24 09            [12]  617 	add	a,#0x09
      000350 F8               [12]  618 	mov	r0,a
      000351 86 82            [24]  619 	mov	dpl,@r0
      000353 08               [12]  620 	inc	r0
      000354 86 83            [24]  621 	mov	dph,@r0
      000356 08               [12]  622 	inc	r0
      000357 86 F0            [24]  623 	mov	b,@r0
      000359 08               [12]  624 	inc	r0
      00035A E6               [12]  625 	mov	a,@r0
      00035B 12r00r00         [24]  626 	lcall	___fsadd
      00035E AC 82            [24]  627 	mov	r4,dpl
      000360 AD 83            [24]  628 	mov	r5,dph
      000362 AE F0            [24]  629 	mov	r6,b
      000364 FF               [12]  630 	mov	r7,a
      000365 E5 81            [12]  631 	mov	a,sp
      000367 24 FC            [12]  632 	add	a,#0xfc
      000369 F5 81            [12]  633 	mov	sp,a
      00036B E5*00            [12]  634 	mov	a,_bp
      00036D 24 11            [12]  635 	add	a,#0x11
      00036F F8               [12]  636 	mov	r0,a
      000370 A6 04            [24]  637 	mov	@r0,ar4
      000372 08               [12]  638 	inc	r0
      000373 A6 05            [24]  639 	mov	@r0,ar5
      000375 08               [12]  640 	inc	r0
      000376 A6 06            [24]  641 	mov	@r0,ar6
      000378 08               [12]  642 	inc	r0
      000379 A6 07            [24]  643 	mov	@r0,ar7
      00037B                        644 00109$:
                                    645 ;	tanhf.c:67: if(x<0.0) r=-r;
      00037B E4               [12]  646 	clr	a
      00037C C0 E0            [24]  647 	push	acc
      00037E C0 E0            [24]  648 	push	acc
      000380 C0 E0            [24]  649 	push	acc
      000382 C0 E0            [24]  650 	push	acc
      000384 E5*00            [12]  651 	mov	a,_bp
      000386 24 05            [12]  652 	add	a,#0x05
      000388 F8               [12]  653 	mov	r0,a
      000389 86 82            [24]  654 	mov	dpl,@r0
      00038B 08               [12]  655 	inc	r0
      00038C 86 83            [24]  656 	mov	dph,@r0
      00038E 08               [12]  657 	inc	r0
      00038F 86 F0            [24]  658 	mov	b,@r0
      000391 08               [12]  659 	inc	r0
      000392 E6               [12]  660 	mov	a,@r0
      000393 12r00r00         [24]  661 	lcall	___fslt
      000396 AF 82            [24]  662 	mov	r7,dpl
      000398 E5 81            [12]  663 	mov	a,sp
      00039A 24 FC            [12]  664 	add	a,#0xfc
      00039C F5 81            [12]  665 	mov	sp,a
      00039E EF               [12]  666 	mov	a,r7
      00039F 60 12            [24]  667 	jz	00111$
      0003A1 E5*00            [12]  668 	mov	a,_bp
      0003A3 24 11            [12]  669 	add	a,#0x11
      0003A5 F8               [12]  670 	mov	r0,a
      0003A6 E6               [12]  671 	mov	a,@r0
      0003A7 F6               [12]  672 	mov	@r0,a
      0003A8 08               [12]  673 	inc	r0
      0003A9 E6               [12]  674 	mov	a,@r0
      0003AA F6               [12]  675 	mov	@r0,a
      0003AB 08               [12]  676 	inc	r0
      0003AC E6               [12]  677 	mov	a,@r0
      0003AD F6               [12]  678 	mov	@r0,a
      0003AE 08               [12]  679 	inc	r0
      0003AF E6               [12]  680 	mov	a,@r0
      0003B0 B2 E7            [12]  681 	cpl	acc.7
      0003B2 F6               [12]  682 	mov	@r0,a
      0003B3                        683 00111$:
                                    684 ;	tanhf.c:68: return r;
      0003B3 E5*00            [12]  685 	mov	a,_bp
      0003B5 24 11            [12]  686 	add	a,#0x11
      0003B7 F8               [12]  687 	mov	r0,a
      0003B8 86 82            [24]  688 	mov	dpl,@r0
      0003BA 08               [12]  689 	inc	r0
      0003BB 86 83            [24]  690 	mov	dph,@r0
      0003BD 08               [12]  691 	inc	r0
      0003BE 86 F0            [24]  692 	mov	b,@r0
      0003C0 08               [12]  693 	inc	r0
      0003C1 E6               [12]  694 	mov	a,@r0
      0003C2 85*00 81         [24]  695 	mov	sp,_bp
      0003C5 D0*00            [24]  696 	pop	_bp
      0003C7 02r00r00         [24]  697 	ljmp	__sdcc_banked_ret
                                    698 	.area CSEG    (CODE)
                                    699 	.area CONST   (CODE)
                                    700 	.area XINIT   (CODE)
                                    701 	.area CABS    (ABS,CODE)
